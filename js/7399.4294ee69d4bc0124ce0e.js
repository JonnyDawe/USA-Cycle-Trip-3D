(self.webpackChunk=self.webpackChunk||[]).push([[7399],{67399:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>p});var r=s(78155),a=s(20215),i=s(80219),n=s(88903),o=s(84271),l=s(92858),c=s(5772),d=s(2566),h=s(83991),u=s(52842),f=s(84352);function g(e,t){return(!e.minScale||e.minScale>=t)&&(!e.maxScale||e.maxScale<=t)}function m(e){const t=e.message,s={message:{data:{},tileKey:t.tileKey},transferList:new Array};for(const e in t.data){const r=t.data[e];if(s.message.data[e]=null,(0,i.r)(r)){const t=r.stride,a=r.indices.slice(0),n=r.vertices.slice(0),o=r.records.slice(0),l={stride:t,indices:a,vertices:n,records:o,metrics:(0,i.A)(r.metrics,(e=>e.slice(0)))};s.transferList.push(a,n,o),s.message.data[e]=l}}return s}s(40130),s(80987),s(98548),s(20736),s(4169),s(31531),s(60816),s(14215),s(43356),s(85774),s(67726),s(93443),s(13564),s(29218),s(13838),s(18143),s(91236),s(29126),s(89710),s(47365),s(52957),s(67079),s(94527),s(17762),s(25894),s(13513),s(78191),s(29831),s(50388),s(58404),s(24776),s(40481),s(81135),s(61888),s(29832),s(31516),s(52109),s(6585),s(3621),s(63358),s(78730),s(2098),s(87405),s(11107),s(98128),s(97431),s(28090),s(97325),s(3629),s(34396),s(5250),s(49878),s(48643),s(73574),s(82906),s(62121),s(30316),s(4618),s(65352),s(80657),s(94449),s(71470),s(76119),s(60978),s(32769),s(83731),s(36845),s(90258),s(57424),i.n.getLogger("esri.views.2d.layers.features.processors.SymbolProcessor");let y=class extends u.p{constructor(){super(...arguments),this.type="symbol",this._matchers={feature:null,aggregate:null},this._bufferData=new Map}initialize(){this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this))])}destroy(){}get supportsTileUpdates(){return!0}async update(e,t){const s=t.schema.processors[0];if("symbol"!==s.type)return;const r=(0,o.m)(this._schema,s);(0,o.a)(r,"mesh")&&((0,i.c)("esri-2d-update-debug")&&console.debug("Applying Update - Processor:",r),e.mesh=!0,e.why.mesh.push("Symbology changed"),this._schema=s,this._factory=this._createFactory(s),this._factory.update(s,this.tileStore.tileScheme.tileInfo))}onTileMessage(e,t,s,r){return(0,a.a)(r),this._onTileData(e,t,s,r)}onTileClear(e){return this._bufferData.delete(e.key.id),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:{clear:!0}})}onTileError(e,t,s){const r=s.signal,a={tileKey:e.id,error:t};return this.remoteClient.invoke("tileRenderer.onTileError",a,{signal:r})}onTileUpdate(e){for(const t of e.removed)this._bufferData.has(t.key.id)&&(this._bufferData.get(t.key.id).forEach((e=>{const t=new Set;(0,c.r)((s=>{const r=e.message.data[s];if((0,i.r)(r)){const e=d.r.from(r.records).getCursor();for(;e.next();)t.add(e.id)}}));const s=e.message.tileKey;return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:s,data:{type:"update",addOrUpdate:null}})})),this._bufferData.delete(t.key.id));for(const t of e.added)this._bufferData.forEach((e=>{for(const s of e)s.message.tileKey===t.id&&this._updateTileMesh("append",t,m(s),[],!1,!1,null)}))}_addBufferData(e,t){this._bufferData.has(e)||this._bufferData.set(e,[]),this._bufferData.get(e).push(m(t))}_createFactory(e){const{geometryType:t,objectIdField:s,fields:r}=this.service,a={geometryType:t,fields:r,spatialReference:l.k.fromJSON(this.spatialReference)},n=new d.k(((e,t)=>this.remoteClient.invoke("tileRenderer.getMaterialItems",e,t)),this.tileStore.tileScheme.tileInfo),{matcher:o,aggregateMatcher:c}=e.mesh;return this._store=n,this._matchers.feature=(0,d.u)(o,n,a),this._matchers.aggregate=(0,i.A)(c,(e=>(0,d.u)(e,n,a))),new d.i(t,s,n)}async _onTileData(e,t,s,r){const{type:n,addOrUpdate:o,remove:l}=t,c=t.end;if(!o){const t={type:n,addOrUpdate:null,remove:l,clear:!1,end:c};return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:t},r)}const d=this._processFeatures(e,o,s,r);try{const s=await d;if((0,i.t)(s)){const t={type:n,addOrUpdate:null,remove:l,clear:!1,end:c};return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:t},r)}for(const t of s)e.key.id!==t.message.tileKey&&this._addBufferData(e.key.id,t);await(0,a.c)(s.map((s=>{const a=e.key.id===s.message.tileKey,i=a?t.remove:[],o=a&&t.end;return this._updateTileMesh(n,e,s,i,o,t.clear,r.signal)})))}catch(t){this._handleError(e,t,r)}}async _updateTileMesh(e,t,s,r,n,o,l){const c=e,d=s.message.tileKey;d!==t.key.id&&(n=!1);const h=(0,i.A)(s,(e=>e.message)),u=(0,i.A)(s,(e=>e.transferList))||[],f={type:c,addOrUpdate:h,remove:r,clear:!1,end:n},g={transferList:(0,i.f)(u)||[],signal:l};return(0,a.a)(g),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:d,data:f},g)}async _processFeatures(e,t,s,r){if((0,i.t)(t)||!t.hasFeatures)return null;const n={transform:e.transform,hasZ:!1,hasM:!1},o=this._factory,l={viewingMode:"",scale:e.scale},c=await this._matchers.feature,d=await this._matchers.aggregate;(0,a.a)(r);const h=this._getLabelInfos(e,t);return await o.analyze(t.getCursor(),c,d,n,l),(0,a.a)(r),this._writeFeatureSet(e,t,n,h,o,s)}_writeFeatureSet(e,t,s,r,a,n){const o=t.getSize(),l="simple"===this._schema.mesh.matcher.type&&this._schema.mesh.matcher.isDotDensity,c=new d.E(e.key.id,{features:o,records:o,metrics:0},l,n,!0),h={viewingMode:"",scale:e.scale},u=t.getCursor();for(;u.next();)try{const t=u.getDisplayId(),n=(0,i.r)(r)?r.get(t):null;a.writeCursor(c,u,s,h,e.level,n)}catch(e){}const f=e.tileInfoView.tileInfo.isWrappable;return c.serialize(f)}_handleError(e,t,s){if(!(0,a.g)(t)){const r={tileKey:e.id,error:t.message};return this.remoteClient.invoke("tileRenderer.onTileError",r,{signal:s.signal})}}_getLabelingSchemaForScale(e){const t=this._schema.mesh.labels;if((0,i.t)(t))return null;if("subtype"===t.type){const s={type:"subtype",classes:{}};let r=!1;for(const a in t.classes){const i=t.classes[a].filter((t=>g(t,e.scale)));r=r||!!i.length,s.classes[a]=i}return r?s:null}const s=t.classes.filter((t=>g(t,e.scale)));return s.length?{type:"simple",classes:s}:null}_getLabels(e,t){if("subtype"===t.type){var s;const r=this.service.subtypeField,a=(0,i.R)(r,"Expected to find subtype Field"),n=e.readAttribute(a);return null==n?[]:null!=(s=t.classes[n])?s:[]}return t.classes}_getLabelInfos(e,t){const s=this._getLabelingSchemaForScale(e);if((0,i.t)(s))return null;const r=new Map,a=t.getCursor();for(;a.next();){const e=a.getDisplayId(),t=[],i=(0,f.v)(e),n=i&&1!==a.readAttribute("cluster_count")?"aggregate":"feature",o=this._getLabels(a,s);for(const s of o){if(s.target!==n)continue;const r=a.getStorage(),o=i&&"feature"===n?r.getComputedStringAtIndex(a.readAttribute("referenceId"),s.fieldIndex):r.getComputedStringAtIndex(e,s.fieldIndex);if(!o)continue;const l=(0,h.n)(o.toString()),c=l[0],u=l[1];this._store.getMosaicItem(s.symbol,(0,d.c)(c)).then((e=>{t[s.index]={glyphs:e.glyphMosaicItems,rtl:u,index:s.index}}))}r.set(e,t)}return r}};y=(0,r.e)([(0,n.n)("esri.views.2d.layers.features.processors.SymbolProcessor")],y);const p=y}}]);