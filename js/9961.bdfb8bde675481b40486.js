(self.webpackChunk=self.webpackChunk||[]).push([[9961],{49961:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>q}),s(33807);var i=s(20215),n=s(80219),r=s(82030),a=s(15541),o=s(87682),l=s(11107),h=s(91507),c=s(78155),u=s(87405),f=s(76119);function d(e){return 746===e||747===e||!(e<4352)&&(e>=12704&&e<=12735||e>=12544&&e<=12591||e>=65072&&e<=65103&&!(e>=65097&&e<=65103)||e>=63744&&e<=64255||e>=13056&&e<=13311||e>=11904&&e<=12031||e>=12736&&e<=12783||e>=12288&&e<=12351&&!(e>=12296&&e<=12305||e>=12308&&e<=12319||12336===e)||e>=13312&&e<=19903||e>=19968&&e<=40959||e>=12800&&e<=13055||e>=12592&&e<=12687||e>=43360&&e<=43391||e>=55216&&e<=55295||e>=4352&&e<=4607||e>=44032&&e<=55215||e>=12352&&e<=12447||e>=12272&&e<=12287||e>=12688&&e<=12703||e>=12032&&e<=12255||e>=12784&&e<=12799||e>=12448&&e<=12543&&12540!==e||e>=65280&&e<=65519&&!(65288===e||65289===e||65293===e||e>=65306&&e<=65310||65339===e||65341===e||65343===e||e>=65371&&e<=65503||65507===e||e>=65512&&e<=65519)||e>=65104&&e<=65135&&!(e>=65112&&e<=65118||e>=65123&&e<=65126)||e>=5120&&e<=5759||e>=6320&&e<=6399||e>=65040&&e<=65055||e>=19904&&e<=19967||e>=40960&&e<=42127||e>=42128&&e<=42191)}function x(e){return!(e<11904)&&(e>=12704&&e<=12735||e>=12544&&e<=12591||e>=65072&&e<=65103||e>=63744&&e<=64255||e>=13056&&e<=13311||e>=11904&&e<=12031||e>=12736&&e<=12783||e>=12288&&e<=12351||e>=13312&&e<=19903||e>=19968&&e<=40959||e>=12800&&e<=13055||e>=65280&&e<=65519||e>=12352&&e<=12447||e>=12272&&e<=12287||e>=12032&&e<=12255||e>=12784&&e<=12799||e>=12448&&e<=12543||e>=65040&&e<=65055||e>=42128&&e<=42191||e>=40960&&e<=42127)}function y(e){switch(e){case 10:case 32:case 38:case 40:case 41:case 43:case 45:case 47:case 173:case 183:case 8203:case 8208:case 8211:case 8231:return!0}return!1}function g(e){switch(e){case 9:case 10:case 11:case 12:case 13:case 32:return!0}return!1}s(17762),s(60816),s(88903),s(34534),s(43356),s(2098);const p=24;class _{constructor(e,t,s,i,n,r,a){this._glyphItems=e,this._maxWidth=t,this._lineHeight=s,this._letterSpacing=i,this._hAnchor=n,this._vAnchor=r,this._justify=a}getShaping(e,t,s){const i=this._letterSpacing,n=this._lineHeight,r=this._justify,a=this._maxWidth,o=[];let l=0,h=0;const c=e.length;for(let t=0;t<c;t++){const n=e.charCodeAt(t),r=s&&d(n);let a;for(const e of this._glyphItems)if(a=e[n],a)break;o.push({codePoint:n,x:l,y:h,vertical:r,glyphMosaicItem:a}),a&&(l+=a.metrics.advance+i)}let u=l;a>0&&(u=l/Math.max(1,Math.ceil(l/a)));const f=e.indexOf("â€‹")>=0,p=[];for(let e=0;e<c-1;e++){const t=o[e].codePoint,s=x(t);if(y(t)||s){let i=0;if(10===t)i-=1e4;else if(s&&f)i+=150;else{40!==t&&65288!==t||(i+=50);const s=o[e+1].codePoint;41!==s&&65289!==s||(i+=50)}p.push(this._buildBreak(e+1,o[e].x,u,p,i,!1))}}const _=this._optimalBreaks(this._buildBreak(c,l,u,p,0,!0));let m=0;const I=t?-n:n;let b=0;for(let e=0;e<_.length;e++){const t=_[e];let s=b;for(;s<t&&g(o[s].codePoint);)o[s].glyphMosaicItem=null,++s;let i=t-1;for(;i>s&&g(o[i].codePoint);)o[i].glyphMosaicItem=null,--i;if(s<=i){const e=o[s].x;for(let t=s;t<=i;t++)o[t].x-=e,o[t].y=h;let t=o[i].x;o[i].glyphMosaicItem&&(t+=o[i].glyphMosaicItem.metrics.advance),m=Math.max(t,m),r&&this._applyJustification(o,s,i)}b=t,h+=I}if(o.length>0){const e=_.length-1,s=(r-this._hAnchor)*m;let i=(-this._vAnchor*(e+1)+.5)*n;t&&e&&(i+=e*n);for(const e of o)e.x+=s,e.y+=i}return o.filter((e=>e.glyphMosaicItem))}static getTextBox(e,t){if(!e.length)return null;let s=1/0,i=1/0,n=0,r=0;for(const a of e){const e=a.glyphMosaicItem.metrics.advance,o=a.x,l=a.y-17,h=o+e,c=l+t;s=Math.min(s,o),n=Math.max(n,h),i=Math.min(i,l),r=Math.max(r,c)}return{x:s,y:i,width:n-s,height:r-i}}static getBox(e){if(!e.length)return null;let t=1/0,s=1/0,i=0,n=0;for(const r of e){const{height:e,left:a,top:o,width:l}=r.glyphMosaicItem.metrics,h=r.x,c=r.y-(e-Math.abs(o)),u=h+l+a,f=c+e;t=Math.min(t,h),i=Math.max(i,u),s=Math.min(s,c),n=Math.max(n,f)}return{x:t,y:s,width:i-t,height:n-s}}static addDecoration(e,t){const s=e.length;if(0===s)return;let i=e[0].x+e[0].glyphMosaicItem.metrics.left,n=e[0].y;for(let r=1;r<s;r++){const s=e[r];if(s.y!==n){const o=e[r-1].x+e[r-1].glyphMosaicItem.metrics.left+e[r-1].glyphMosaicItem.metrics.width;e.push({codePoint:0,x:i,y:n+t-3,vertical:!1,glyphMosaicItem:{sdf:!0,rect:new a.t(4,0,4,8),metrics:{width:o-i,height:8,left:0,top:0,advance:0},page:0,code:0}}),n=s.y,i=s.x+s.glyphMosaicItem.metrics.left}}const r=e[s-1].x+e[s-1].glyphMosaicItem.metrics.left+e[s-1].glyphMosaicItem.metrics.width;e.push({codePoint:0,x:i,y:n+t-3,vertical:!1,glyphMosaicItem:{sdf:!0,rect:new a.t(4,0,4,8),metrics:{width:r-i,height:8,left:0,top:0,advance:0},page:0,code:0}})}_breakScore(e,t,s,i){const n=(e-t)*(e-t);return i?e<t?n/2:2*n:n+Math.abs(s)*s}_buildBreak(e,t,s,i,n,r){let a=null,o=this._breakScore(t,s,n,r);for(const e of i){const i=t-e.x,l=this._breakScore(i,s,n,r)+e.score;l<=o&&(a=e,o=l)}return{index:e,x:t,score:o,previousBreak:a}}_optimalBreaks(e){return e?this._optimalBreaks(e.previousBreak).concat(e.index):[]}_applyJustification(e,t,s){const i=e[s],n=i.vertical?p:i.glyphMosaicItem?i.glyphMosaicItem.metrics.advance:0,r=(i.x+n)*this._justify;for(let i=t;i<=s;i++)e[i].x-=r}}const m=.5;class I{constructor(e,t,s=0,i=-1,n=.5){this.x=e,this.y=t,this.angle=s,this.segment=i,this.minzoom=n}}class b{constructor(e,t,s,i,n,a=.5,o=r.n){this.anchor=e,this.labelAngle=t,this.glyphAngle=s,this.page=i,this.alternateVerticalGlyph=n,this.minzoom=a,this.maxzoom=o}}class w{constructor(e,t,s,i,n,r,a,o,l,h,c,u){this.tl=e,this.tr=t,this.bl=s,this.br=i,this.mosaicRect=n,this.labelAngle=r,this.minAngle=a,this.maxAngle=o,this.anchor=l,this.minzoom=h,this.maxzoom=c,this.page=u}}class M{constructor(e){this.shapes=e}}class P{getIconPlacement(e,t,s){const i=new l.t(e.x,e.y),n=0===s.rotationAlignment,a=s.keepUpright;let h=s.rotate*r.f;n&&(h+=e.angle);const c=new M([]);return s.allowOverlap&&s.ignorePlacement||!o.o||(c.iconColliders=[]),this._addIconPlacement(c,i,t,s,h),n&&a&&this._addIconPlacement(c,i,t,s,h+r.t),c}_addIconPlacement(e,t,s,i,n){const a=s.pixelRatio,h=s.width/a,c=s.height/a,u=i.offset;let f=u[0],d=u[1];switch(i.anchor){case 0:f-=h/2,d-=c/2;break;case 1:d-=c/2;break;case 2:f-=h,d-=c/2;break;case 3:f-=h/2;break;case 4:f-=h/2,d-=c;break;case 5:break;case 7:d-=c;break;case 6:f-=h;break;case 8:f-=h,d-=c}const x=s.rect,y=2/a,g=f-y,p=d-y,_=g+x.width/a,I=p+x.height/a,b=new l.t(g,p),M=new l.t(_,I),P=new l.t(g,I),D=new l.t(_,p);if(0!==n){const e=Math.cos(n),t=Math.sin(n);b.rotate(e,t),M.rotate(e,t),P.rotate(e,t),D.rotate(e,t)}const B=new w(b,D,P,M,x,n,0,256,t,m,r.n,0);if(e.shapes.push(B),(!i.allowOverlap||!i.ignorePlacement)&&o.o){const s=i.size,a=i.padding,o={xTile:t.x,yTile:t.y,dxPixels:f*s-a,dyPixels:d*s-a,hard:!i.optional,partIndex:0,width:h*s+2*a,height:c*s+2*a,angle:n,minLod:m,maxLod:r.n};e.iconColliders.push(o)}}getTextPlacement(e,t,s,i){const n=new l.t(e.x,e.y),a=i.rotate*r.f,o=0===i.rotationAlignment,h=i.keepUpright,c=i.padding;let u=m;const f=o?e.angle:0,d=e.segment>=0&&o,x=i.allowOverlap&&i.ignorePlacement?null:[],y=[],g=!d;let I=Number.POSITIVE_INFINITY,P=Number.NEGATIVE_INFINITY,D=I,B=P;const V=(d||o)&&h,k=i.size/p;let L=!1;for(const e of t)if(e.vertical){L=!0;break}let A,v=0,T=0;if(!d&&L){const e=_.getTextBox(t,i.lineHeight*p);switch(i.anchor){case 1:v=e.height/2,T=-e.width/2;break;case 2:v=-e.height/2,T=e.width/2;break;case 3:v=e.height/2,T=e.width/2;break;case 4:v=-e.height/2,T=-e.width/2;break;case 5:v=e.height;break;case 7:T=-e.width;break;case 6:T=e.width;break;case 8:v=-e.height}}v+=i.offset[0]*p,T+=i.offset[1]*p;for(const p of t){const t=p.glyphMosaicItem;if(!t||t.rect.isEmpty)continue;const _=t.rect,M=t.metrics,S=t.page;if(x&&g){if(void 0!==A&&A!==p.y){let t,s,n,o;L?(t=-B+v,s=I+T,n=B-D,o=P-I):(t=I+v,s=D+T,n=P-I,o=B-D);const l={xTile:e.x,yTile:e.y,dxPixels:t*k-c,dyPixels:s*k-c,hard:!i.optional,partIndex:1,width:n*k+2*c,height:o*k+2*c,angle:a,minLod:m,maxLod:r.n};x.push(l),I=Number.POSITIVE_INFINITY,P=Number.NEGATIVE_INFINITY,D=I,B=P}A=p.y}const C=[];if(d){const i=.5*t.metrics.width,n=(p.x+M.left-4+i)*k*8;if(u=this._placeGlyph(e,u,n,s,e.segment,1,p.vertical,S,C),h&&(u=this._placeGlyph(e,u,n,s,e.segment,-1,p.vertical,S,C)),u>=2)break}else C.push(new b(n,f,f,S,!1)),o&&h&&C.push(new b(n,f+r.t,f+r.t,S,!1));const z=p.x+M.left,F=p.y-17-M.top,E=z+M.width,U=F+M.height;let N,R,G,O,K,j,q,H;if(!d&&L)if(p.vertical){const e=(z+E)/2-M.height/2,t=(F+U)/2+M.width/2;N=new l.t(-t-4+v,e-4+T),R=new l.t(N.x+_.width,N.y+_.height),G=new l.t(N.x,R.y),O=new l.t(R.x,N.y)}else N=new l.t(4-F+v,z-4+T),R=new l.t(N.x-_.height,N.y+_.width),G=new l.t(R.x,N.y),O=new l.t(N.x,R.y);else N=new l.t(z-4+v,F-4+T),R=new l.t(N.x+_.width,N.y+_.height),G=new l.t(N.x,R.y),O=new l.t(R.x,N.y);for(const t of C){let s,n,r,o;if(t.alternateVerticalGlyph){if(!K){const e=(F+U)/2+T;K=new l.t((z+E)/2+v-M.height/2-4,e+M.width/2+4),j=new l.t(K.x+_.height,K.y-_.width),q=new l.t(j.x,K.y),H=new l.t(K.x,j.y)}s=K,n=q,r=H,o=j}else s=N,n=G,r=O,o=R;const h=F,u=U,f=t.glyphAngle+a;if(0!==f){const e=Math.cos(f),t=Math.sin(f);s=s.clone(),n=n.clone(),r=r.clone(),o=o.clone(),s.rotate(e,t),o.rotate(e,t),n.rotate(e,t),r.rotate(e,t)}let m=0,b=256;if(d&&L?p.vertical?t.alternateVerticalGlyph?(m=32,b=96):(m=224,b=32):(m=224,b=96):(m=192,b=64),y.push(new w(s,r,n,o,_,t.labelAngle,m,b,t.anchor,t.minzoom,t.maxzoom,t.page)),x&&(!V||this._legible(t.labelAngle)))if(g)z<I&&(I=z),h<D&&(D=h),E>P&&(P=E),u>B&&(B=u);else if(t.minzoom<2){const s={xTile:e.x,yTile:e.y,dxPixels:(z+v)*k-c,dyPixels:(h+v)*k-c,hard:!i.optional,partIndex:1,width:(E-z)*k+2*c,height:(u-h)*k+2*c,angle:f,minLod:t.minzoom,maxLod:t.maxzoom};x.push(s)}}}if(u>=2)return null;if(x&&g){let t,s,n,o;L?(t=-B+v,s=I+T,n=B-D,o=P-I):(t=I+v,s=D+T,n=P-I,o=B-D);const l={xTile:e.x,yTile:e.y,dxPixels:t*k-c,dyPixels:s*k-c,hard:!i.optional,partIndex:1,width:n*k+2*c,height:o*k+2*c,angle:a,minLod:m,maxLod:r.n};x.push(l)}const S=new M(y);return x&&x.length>0&&(S.textColliders=x),S}_legible(e){const t=(0,r.h)(e);return t<65||t>=193}_placeGlyph(e,t,s,i,n,a,o,h,c){let u=a;const f=u<0?(0,r.a)(e.angle+r.t,r.r):e.angle;let d=0;s<0&&(u*=-1,s*=-1,d=r.t),u>0&&++n;let x=new l.t(e.x,e.y),y=i[n],g=r.n;if(i.length<=n)return g;for(;;){const e=y.x-x.x,a=y.y-x.y,l=Math.sqrt(e*e+a*a),p=Math.max(s/l,t),_=e/l,m=a/l,I=(0,r.a)(Math.atan2(m,_)+d,r.r);if(c.push(new b(x,f,I,h,!1,p,g)),o&&c.push(new b(x,f,I,h,!0,p,g)),p<=t)return p;x=y.clone();do{if(n+=u,i.length<=n||n<0)return p;y=i[n]}while(x.isEqual(y));let w=y.x-x.x,M=y.y-x.y;const P=Math.sqrt(w*w+M*M);w*=l/P,M*=l/P,x.x-=w,x.y-=M,g=p}}}class D{constructor(e,t){this.values={};const s=t.keys,i=t.values;for(;e.next();)switch(e.tag()){case 1:this.id=e.getUInt64();break;case 2:{const t=e.getMessage(),n=this.values;for(;!t.empty();){const e=t.getUInt32(),r=t.getUInt32();n[s[e]]=i[r]}t.release();break}case 3:this.type=e.getUInt32();break;case 4:this._pbfGeometry=e.getMessage();break;default:e.skip()}}getGeometry(e){if(void 0!==this._geometry)return this._geometry;if(!this._pbfGeometry)return null;const t=this._pbfGeometry;let s,i;this._pbfGeometry=null,e?e.reset(this.type):s=[];let n,r=1,a=0,o=0,h=0;for(;!t.empty();){if(0===a){const e=t.getUInt32();r=7&e,a=e>>3}switch(a--,r){case 1:o+=t.getSInt32(),h+=t.getSInt32(),e?e.moveTo(o,h):(i&&s.push(i),i=[],i.push(new l.t(o,h)));break;case 2:o+=t.getSInt32(),h+=t.getSInt32(),e?e.lineTo(o,h):i.push(new l.t(o,h));break;case 7:e?e.close():i&&!i[0].equals(o,h)&&i.push(i[0].clone());break;default:throw t.release(),new Error("Invalid path operation")}}return e?n=e.result():(i&&s.push(i),n=s),t.release(),this._geometry=n,n}}class B extends r.b{constructor(){super(12)}add(e,t,s){const i=this.array;i.push(e),i.push(t),i.push(s)}}class V{constructor(e){for(this.extent=4096,this.keys=[],this.values=[],this._pbfLayer=e.clone();e.next();)switch(e.tag()){case 1:this.name=e.getString();break;case 3:this.keys.push(e.getString());break;case 4:this.values.push(e.processMessage(V._parseValue));break;case 5:this.extent=e.getUInt32();break;default:e.skip()}}getData(){return this._pbfLayer}static _parseValue(e){for(;e.next();)switch(e.tag()){case 1:return e.getString();case 2:return e.getFloat();case 3:return e.getDouble();case 4:return e.getInt64();case 5:return e.getUInt64();case 6:return e.getSInt64();case 7:return e.getBool();default:e.skip()}return null}}class k extends r.b{constructor(e){super(e)}add(e,t,s,i,n,a,o,l,h,c,u,f){const d=this.array;let x=r.b.i1616to32(e,t);d.push(x);const y=31;x=r.b.i8888to32(Math.round(y*s),Math.round(y*i),Math.round(y*n),Math.round(y*a)),d.push(x),x=r.b.i8888to32(Math.round(y*o),Math.round(y*l),Math.round(y*h),Math.round(y*c)),d.push(x),x=r.b.i1616to32(u,0),d.push(x),f&&d.push(...f)}}class L extends r.b{constructor(e){super(e)}add(e,t,s){const i=this.array;i.push(r.b.i1616to32(e,t)),s&&i.push(...s)}}class A extends r.b{constructor(e){super(e)}add(e,t,s,i,n,a,o){const l=this.array,h=this.index;let c=r.b.i1616to32(e,t);return l.push(c),c=r.b.i8888to32(Math.round(15*s),Math.round(15*i),n,a),l.push(c),o&&l.push(...o),h}}class v extends r.b{constructor(e){super(e)}add(e,t,s,i,n,a,o,l,h,c,u,f){const d=this.array;let x=r.b.i1616to32(e,t);d.push(x),x=r.b.i1616to32(Math.round(8*s),Math.round(8*i)),d.push(x),x=r.b.i8888to32(n/4,a/4,l,h),d.push(x),x=r.b.i8888to32(0,(0,r.h)(o),10*c,Math.min(10*u,255)),d.push(x),f&&d.push(...f)}}class T extends r.b{constructor(e){super(e)}add(e,t,s,i,n){const a=this.array,o=r.b.i1616to32(2*e+s,2*t+i);a.push(o),n&&a.push(...n)}}class S{constructor(e,t,s){this.layerExtent=4096,this._features=[],this.layer=e,this.zoom=t,this._spriteInfo=s,this._filter=e.getFeatureFilter()}pushFeature(e){this._filter&&!this._filter.filter(e,this.zoom)||this._features.push(e)}hasFeatures(){return this._features.length>0}getResources(e,t,s){}}class C extends S{constructor(e,t,s,i,n){super(e,t,s),this.type=4,this._circleVertexBuffer=i,this._circleIndexBuffer=n}get circleIndexStart(){return this._circleIndexStart}get circleIndexCount(){return this._circleIndexCount}processFeatures(e){const t=this._circleVertexBuffer,s=this._circleIndexBuffer;this._circleIndexStart=3*s.index,this._circleIndexCount=0;const i=this.layer,n=this.zoom;e&&e.setExtent(this.layerExtent);for(const r of this._features){const a=r.getGeometry(e);if(!a)continue;const o=i.circleMaterial.encodeAttributes(r,n,i);for(const e of a)if(e)for(const i of e){const e=t.index;t.add(i.x,i.y,0,0,o),t.add(i.x,i.y,0,1,o),t.add(i.x,i.y,1,0,o),t.add(i.x,i.y,1,1,o),s.add(e+0,e+1,e+2),s.add(e+1,e+2,e+3),this._circleIndexCount+=6}}}serialize(){let e=6;e+=this.layerUIDs.length,e+=this._circleVertexBuffer.array.length,e+=this._circleIndexBuffer.array.length;const t=new Uint32Array(e),s=new Int32Array(t.buffer);let i=0;t[i++]=this.type,t[i++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)t[i++]=this.layerUIDs[e];t[i++]=this._circleIndexStart,t[i++]=this._circleIndexCount,t[i++]=this._circleVertexBuffer.array.length;for(let e=0;e<this._circleVertexBuffer.array.length;e++)s[i++]=this._circleVertexBuffer.array[e];t[i++]=this._circleIndexBuffer.array.length;for(let e=0;e<this._circleIndexBuffer.array.length;e++)t[i++]=this._circleIndexBuffer.array[e];return t.buffer}}const z=new l.o;class F extends S{constructor(e,t,s,i,n,r,a){super(e,t,s),this.type=1,this._patternMap=new Map,this._fillVertexBuffer=i,this._fillIndexBuffer=n,this._outlineVertexBuffer=r,this._outlineIndexBuffer=a}get fillIndexStart(){return this._fillIndexStart}get fillIndexCount(){return this._fillIndexCount}get outlineIndexStart(){return this._outlineIndexStart}get outlineIndexCount(){return this._outlineIndexCount}getResources(e,t,s){const i=this.layer,n=this.zoom,r=i.getPaintProperty("fill-pattern");if(r)if(r.isDataDriven)for(const e of this._features)t.add({name:r.getValue(n,e),repeat:!0});else t.add({name:r.getValue(n),repeat:!0})}processFeatures(e){this._fillIndexStart=3*this._fillIndexBuffer.index,this._fillIndexCount=0,this._outlineIndexStart=3*this._outlineIndexBuffer.index,this._outlineIndexCount=0;const t=this.layer,s=this.zoom,{fillMaterial:i,outlineMaterial:n,hasDataDrivenFill:r,hasDataDrivenOutline:a}=t;e&&e.setExtent(this.layerExtent);const o=t.getPaintProperty("fill-pattern"),l=null==o?void 0:o.isDataDriven;let h=!o&&t.getPaintValue("fill-antialias",s);if(t.outlineUsesFillColor){if(h&&!t.hasDataDrivenOpacity){const e=t.getPaintValue("fill-opacity",s),i=t.getPaintValue("fill-opacity",s+1);e<1&&i<1&&(h=!1)}if(h&&!t.hasDataDrivenColor){const e=t.getPaintValue("fill-color",s),i=t.getPaintValue("fill-color",s+1);e[3]<1&&i[3]<1&&(h=!1)}}const c=this._features,u=null==e?void 0:e.validateTessellation;if(l){const r=[];for(const l of c){const c=o.getValue(s,l),f=this._spriteInfo[c];if(!f||!f.rect)continue;const d=i.encodeAttributes(l,s,t,f),x=h&&a?n.encodeAttributes(l,s,t):[],y=l.getGeometry(e);r.push({ddFillAttributes:d,ddOutlineAttributes:x,page:f.page,geometry:y}),r.sort(((e,t)=>e.page-t.page));for(const{ddFillAttributes:e,ddOutlineAttributes:s,page:i,geometry:n}of r)this._processFeature(n,h,t.outlineUsesFillColor,e,s,u,i)}}else for(const o of c){const l=r?i.encodeAttributes(o,s,t):null,c=h&&a?n.encodeAttributes(o,s,t):null,f=o.getGeometry(e);this._processFeature(f,h,t.outlineUsesFillColor,l,c,u)}}serialize(){let e=10;e+=this.layerUIDs.length,e+=this._fillVertexBuffer.array.length,e+=this._fillIndexBuffer.array.length,e+=this._outlineVertexBuffer.array.length,e+=this._outlineIndexBuffer.array.length,e+=3*this._patternMap.size+1;const t=new Uint32Array(e),s=new Int32Array(t.buffer);let i=0;t[i++]=this.type,t[i++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)t[i++]=this.layerUIDs[e];t[i++]=this._fillIndexStart,t[i++]=this._fillIndexCount,t[i++]=this._outlineIndexStart,t[i++]=this._outlineIndexCount;const n=this._patternMap,r=n.size;if(t[i++]=r,r>0)for(const[e,[s,r]]of n)t[i++]=e,t[i++]=s,t[i++]=r;t[i++]=this._fillVertexBuffer.array.length;for(let e=0;e<this._fillVertexBuffer.array.length;e++)s[i++]=this._fillVertexBuffer.array[e];t[i++]=this._fillIndexBuffer.array.length;for(let e=0;e<this._fillIndexBuffer.array.length;e++)t[i++]=this._fillIndexBuffer.array[e];t[i++]=this._outlineVertexBuffer.array.length;for(let e=0;e<this._outlineVertexBuffer.array.length;e++)s[i++]=this._outlineVertexBuffer.array[e];t[i++]=this._outlineIndexBuffer.array.length;for(let e=0;e<this._outlineIndexBuffer.array.length;e++)t[i++]=this._outlineIndexBuffer.array[e];return t.buffer}_processFeature(e,t,s,i,n,r,a){if(!e)return;const o=e.length,l=!n||0===n.length;if(t&&(!s||l))for(let t=0;t<o;t++)this._processOutline(e[t],n);let h;for(let t=0;t<o;t++){const s=F._area(e[t]);s>32?(void 0!==h&&this._processFill(e,h,i,r,a),h=[t]):s<-32&&void 0!==h&&h.push(t)}void 0!==h&&this._processFill(e,h,i,r,a)}_processOutline(e,t){const s=this._outlineVertexBuffer,i=this._outlineIndexBuffer,n=i.index;let r,a,o;const h=new l.t(0,0),c=new l.t(0,0),u=new l.t(0,0);let f=-1,d=-1,x=-1,y=-1,g=-1,p=!1,_=e.length;if(_<2)return;const m=e[0];let I=e[_-1];for(;_&&I.isEqual(m);)--_,I=e[_-1];if(!(_-0<2)){for(let n=0;n<_;++n){0===n?(r=e[_-1],a=e[0],o=e[1],h.assignSub(a,r),h.normalize(),h.rightPerpendicular()):(r=a,a=o,o=n!==_-1?e[n+1]:e[0],h.assign(c));const l=this._isClipEdge(r,a);-1===y&&(p=l),c.assignSub(o,a),c.normalize(),c.rightPerpendicular();const m=h.x*c.y-h.y*c.x;u.assignAdd(h,c),u.normalize();const I=-u.x*-h.x+-u.y*-h.y;let b=Math.abs(0!==I?1/I:1);b>8&&(b=8),m>=0?(x=s.add(a.x,a.y,h.x,h.y,0,1,t),-1===y&&(y=x),f>=0&&d>=0&&x>=0&&!l&&i.add(f,d,x),d=s.add(a.x,a.y,b*-u.x,b*-u.y,0,-1,t),-1===g&&(g=d),f>=0&&d>=0&&x>=0&&!l&&i.add(f,d,x),f=d,d=x,x=s.add(a.x,a.y,u.x,u.y,0,1,t),f>=0&&d>=0&&x>=0&&!l&&i.add(f,d,x),d=s.add(a.x,a.y,c.x,c.y,0,1,t),f>=0&&d>=0&&x>=0&&!l&&i.add(f,d,x)):(x=s.add(a.x,a.y,b*u.x,b*u.y,0,1,t),-1===y&&(y=x),f>=0&&d>=0&&x>=0&&!l&&i.add(f,d,x),d=s.add(a.x,a.y,-h.x,-h.y,0,-1,t),-1===g&&(g=d),f>=0&&d>=0&&x>=0&&!l&&i.add(f,d,x),f=d,d=x,x=s.add(a.x,a.y,-u.x,-u.y,0,-1,t),f>=0&&d>=0&&x>=0&&!l&&i.add(f,d,x),f=s.add(a.x,a.y,-c.x,-c.y,0,-1,t),f>=0&&d>=0&&x>=0&&!l&&i.add(f,d,x))}f>=0&&d>=0&&y>=0&&!p&&i.add(f,d,y),f>=0&&y>=0&&g>=0&&!p&&i.add(f,g,y),this._outlineIndexCount+=3*(i.index-n)}}_processFill(e,t,s,i,n){let r;t.length>1&&(r=[]);let a=0;for(const s of t)0!==a&&r.push(a),a+=e[s].length;const o=2*a,l=c.k.acquire();for(const s of t){const t=e[s],i=t.length;for(let e=0;e<i;++e)l.push(t[e].x,t[e].y)}const h=(0,u.r)(l,r,2);if(u.r.deviation(l,r,2,h)>0){const i=[],r=[];if(function(e,t,s,i){let n,r;z.beginPolygon(e,t);for(const e of i){const t=s[e];if(!(t.length<3)){z.beginContour();for(let e=0;e<t.length;++e){n=t[e].x,r=t[e].y;const s=[n,r,0];z.addVertex(s,s)}z.endContour()}}z.endPolygon()}(i,r,e,t),r.length>0){const e=this._fillVertexBuffer.index;let t=0;for(;t<i.length;)this._fillVertexBuffer.add(i[t++],i[t++],s);let a=0;for(;a<r.length;)this._fillIndexBuffer.add(e+r[a+0],e+r[a+1],e+r[a+2]),a+=3;if(void 0!==n){const e=this._patternMap,t=e.get(n);t?t[1]+=r.length:e.set(n,[this._fillIndexStart+this._fillIndexCount,r.length])}this._fillIndexCount+=r.length}}else{const e=h.length;if(e>0){const t=this._fillVertexBuffer.index;let i=0;for(;i<o;)this._fillVertexBuffer.add(l[i++],l[i++],s);let r=0;for(;r<e;)this._fillIndexBuffer.add(t+h[r++],t+h[r++],t+h[r++]);if(void 0!==n){const t=this._patternMap,s=t.get(n);s?s[1]+=e:t.set(n,[this._fillIndexStart+this._fillIndexCount,e])}this._fillIndexCount+=e}}c.k.release(l)}_isClipEdge(e,t){return e.x===t.x?e.x<=-64||e.x>=4160:e.y===t.y&&(e.y<=-64||e.y>=4160)}static _area(e){let t=0;const s=e.length-1;for(let i=0;i<s;i++)t+=(e[i].x-e[i+1].x)*(e[i].y+e[i+1].y);return t+=(e[s].x-e[0].x)*(e[s].y+e[0].y),.5*t}}class E extends S{constructor(e,t,s,i,n){super(e,t,s),this.type=2,this._tessellationOptions={pixelCoordRatio:8,halfWidth:0,offset:0},this._patternMap=new Map,this.tessellationProperties={_lineVertexBuffer:null,_lineIndexBuffer:null,_ddValues:null},this.tessellationProperties._lineVertexBuffer=i,this.tessellationProperties._lineIndexBuffer=n,this._lineTessellator=new l.a(U(this.tessellationProperties),N(this.tessellationProperties),e.canUseThinTessellation)}get lineIndexStart(){return this._lineIndexStart}get lineIndexCount(){return this._lineIndexCount}getResources(e,t,s){const i=this.layer,n=this.zoom,r=i.hasDataDrivenLine,a=i.getPaintProperty("line-pattern"),o=i.getPaintProperty("line-dasharray"),l=i.getLayoutProperty("line-cap");if(!a&&!o)return;const h=(null==l?void 0:l.getValue(n))||0,c=null==l?void 0:l.isDataDriven;if(r){const e=null==a?void 0:a.isDataDriven,s=null==o?void 0:o.isDataDriven;if(!e&&!s)return;for(const s of this._features)e?t.add(a.getValue(n,s)):t.add({name:this._getDashArrayKey(s,n,i,o,c,l,h)})}else if(a)t.add(a.getValue(n));else if(o){const e=o.getValue(n);t.add({name:i.getDashKey(e,h)})}}processFeatures(e){var t,s,i,n,r,a;this._lineIndexStart=3*this.tessellationProperties._lineIndexBuffer.index,this._lineIndexCount=0;const o=this.layer,l=this.zoom,h=this._features,c=this._tessellationOptions,{hasDataDrivenLine:u,lineMaterial:f}=o;e&&e.setExtent(this.layerExtent);const d=o.getPaintProperty("line-pattern"),x=o.getPaintProperty("line-dasharray"),y=null==d?void 0:d.isDataDriven,g=null==x?void 0:x.isDataDriven;let p;p=o.getLayoutProperty("line-cap");const _=null!=(t=p)&&t.isDataDriven?p:null,m=_?null:o.getLayoutValue("line-cap",l),I=m||0,b=!!_;p=o.getLayoutProperty("line-join");const w=null!=(s=p)&&s.isDataDriven?p:null,M=w?null:o.getLayoutValue("line-join",l);p=o.getLayoutProperty("line-miter-limit");const P=null!=(i=p)&&i.isDataDriven?p:null,D=P?null:o.getLayoutValue("line-miter-limit",l);p=o.getLayoutProperty("line-round-limit");const B=null!=(n=p)&&n.isDataDriven?p:null,V=B?null:o.getLayoutValue("line-round-limit",l);p=o.getPaintProperty("line-width");const k=null!=(r=p)&&r.isDataDriven?p:null,L=k?null:o.getPaintValue("line-width",l);p=o.getPaintProperty("line-offset");const A=null!=(a=p)&&a.isDataDriven?p:null,v=A?null:o.getPaintValue("line-offset",l);if(y||g){const t=[];for(const s of h){const i=y?d.getValue(l,s):this._getDashArrayKey(s,l,o,x,b,_,I),n=this._spriteInfo[i];if(!n||!n.rect)continue;const r=f.encodeAttributes(s,l,o,n),a=s.getGeometry(e);t.push({ddAttributes:r,page:n.page,cap:_?_.getValue(l,s):m,join:w?w.getValue(l,s):M,miterLimit:P?P.getValue(l,s):D,roundLimit:B?B.getValue(l,s):V,halfWidth:.5*(k?k.getValue(l,s):L),offset:A?A.getValue(l,s):v,geometry:a})}t.sort(((e,t)=>e.page-t.page)),c.textured=!0;for(const{ddAttributes:e,page:s,cap:i,join:n,miterLimit:r,roundLimit:a,halfWidth:o,offset:l,geometry:h}of t)c.capType=i,c.joinType=n,c.miterLimit=r,c.roundLimit=a,c.halfWidth=o,c.offset=l,this._processFeature(h,e,s)}else{c.textured=!(!d&&!x),c.capType=m,c.joinType=M,c.miterLimit=D,c.roundLimit=V,c.halfWidth=.5*L,c.offset=v;for(const t of h){const s=u?f.encodeAttributes(t,l,o):null;_&&(c.capType=_.getValue(l,t)),w&&(c.joinType=w.getValue(l,t)),P&&(c.miterLimit=P.getValue(l,t)),B&&(c.roundLimit=B.getValue(l,t)),k&&(c.halfWidth=.5*k.getValue(l,t)),A&&(c.offset=A.getValue(l,t));const i=t.getGeometry(e);this._processFeature(i,s)}}}serialize(){let e=6;e+=this.layerUIDs.length,e+=this.tessellationProperties._lineVertexBuffer.array.length,e+=this.tessellationProperties._lineIndexBuffer.array.length,e+=3*this._patternMap.size+1;const t=new Uint32Array(e),s=new Int32Array(t.buffer);let i=0;t[i++]=this.type,t[i++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)t[i++]=this.layerUIDs[e];t[i++]=this._lineIndexStart,t[i++]=this._lineIndexCount;const n=this._patternMap,r=n.size;if(t[i++]=r,r>0)for(const[e,[s,r]]of n)t[i++]=e,t[i++]=s,t[i++]=r;t[i++]=this.tessellationProperties._lineVertexBuffer.array.length;for(let e=0;e<this.tessellationProperties._lineVertexBuffer.array.length;e++)s[i++]=this.tessellationProperties._lineVertexBuffer.array[e];t[i++]=this.tessellationProperties._lineIndexBuffer.array.length;for(let e=0;e<this.tessellationProperties._lineIndexBuffer.array.length;e++)t[i++]=this.tessellationProperties._lineIndexBuffer.array[e];return t.buffer}_processFeature(e,t,s){if(!e)return;const i=e.length;for(let n=0;n<i;n++)this._processGeometry(e[n],t,s)}_processGeometry(e,t,s){if(e.length<2)return;let i,n,r=e[0],a=1;for(;a<e.length;)i=e[a].x-r.x,n=e[a].y-r.y,i*i+n*n<1e-6?e.splice(a,1):(r=e[a],++a);if(e.length<2)return;const o=this.tessellationProperties._lineIndexBuffer,l=3*o.index;this._tessellationOptions.initialDistance=0,this._tessellationOptions.wrapDistance=65535,this.tessellationProperties._ddValues=t,this._lineTessellator.tessellate(e,this._tessellationOptions);const h=3*o.index-l;if(void 0!==s){const e=this._patternMap,t=e.get(s);t?t[1]+=h:e.set(s,[l+this._lineIndexCount,h])}this._lineIndexCount+=h}_getDashArrayKey(e,t,s,i,n,r,a){const o=n?r.getValue(t,e):a,l=i.getValue(t,e);return s.getDashKey(l,o)}}const U=e=>(t,s,i,n,r,a,o,l,h,c,u)=>(e._lineVertexBuffer.add(t,s,o,l,i,n,r,a,h,c,u,e._ddValues),e._lineVertexBuffer.index-1),N=e=>(t,s,i)=>{e._lineIndexBuffer.add(t,s,i)};function R(e,t){return e.iconMosaicItem&&t.iconMosaicItem?e.iconMosaicItem.page===t.iconMosaicItem.page?0:e.iconMosaicItem.page-t.iconMosaicItem.page:e.iconMosaicItem&&!t.iconMosaicItem?1:!e.iconMosaicItem&&t.iconMosaicItem?-1:0}class G extends S{constructor(e,t,s,i,n,r,a,o){super(e,t,o.getSpriteItems()),this.type=3,this._markerMap=new Map,this._glyphMap=new Map,this._glyphBufferDataStorage=new Map,this._isIconSDF=!1,this._iconVertexBuffer=s,this._iconIndexBuffer=i,this._textVertexBuffer=n,this._textIndexBuffer=r,this._placementEngine=a,this._workerTileHandler=o}get markerPageMap(){return this._markerMap}get glyphsPageMap(){return this._glyphMap}get symbolInstances(){return this._symbolInstances}getResources(e,t,s){const i=this.layer,r=this.zoom;e&&e.setExtent(this.layerExtent);const a=i.getLayoutProperty("icon-image"),o=i.getLayoutProperty("text-field");let l=i.getLayoutProperty("text-transform"),h=i.getLayoutProperty("text-font");const c=[];let u,f,d,x;a&&!a.isDataDriven&&(u=a.getValue(r)),o&&!o.isDataDriven&&(f=o.getValue(r)),l&&l.isDataDriven||(d=i.getLayoutValue("text-transform",r),l=null),h&&h.isDataDriven||(x=i.getLayoutValue("text-font",r),h=null);for(const y of this._features){const g=y.getGeometry(e);if(!g||0===g.length)continue;let p,_;a&&(p=a.isDataDriven?a.getValue(r,y):this._replaceKeys(u,y.values),p&&t.add({name:p}));let m=!1;if(o&&(_=o.isDataDriven?o.getValue(r,y):this._replaceKeys(f,y.values),_)){switch(_=_.replace(/\\n/g,"\n"),l&&(d=l.getValue(r,y)),d){case 2:_=_.toLowerCase();break;case 1:_=_.toUpperCase()}if(G._bidiEngine.hasBidiChar(_)){let e;e="rtl"===G._bidiEngine.checkContextual(_)?"IDNNN":"ICNNN",_=G._bidiEngine.bidiTransform(_,e,"VLYSN"),m=!0}const e=_.length;if(e>0){h&&(x=h.getValue(r,y));for(const t of x){let i=s[t];i||(i=s[t]=new Set);for(let t=0;t<e;t++){const e=_.charCodeAt(t);i.add(e)}}}}if(!p&&!_)continue;const I=i.getLayoutValue("symbol-sort-key",r,y),b={feature:y,sprite:p,label:_,rtl:m,geometry:g,hash:(_?(0,n.w)(_):0)^(p?(0,n.w)(p):0),priority:I,textFont:x};c.push(b)}this._symbolFeatures=c}processFeatures(e){e&&e.setExtent(this.layerExtent);const t=this.layer,s=this.zoom,i=t.getLayoutValue("symbol-placement",s),n=0!==i,a=8*t.getLayoutValue("symbol-spacing",s),o=t.getLayoutProperty("icon-image"),l=t.getLayoutProperty("text-field"),h=o?new r.d(t,s,n):null,c=l?new r.c(t,s,n):null,u=this._workerTileHandler;let f;o&&(f=u.getSpriteItems()),this._iconIndexStart=3*this._iconIndexBuffer.index,this._textIndexStart=3*this._textIndexBuffer.index,this._iconIndexCount=0,this._textIndexCount=0,this._markerMap.clear(),this._glyphMap.clear();const d=[];let x=1;c&&c.size&&(x=c.size/p);const y=c?c.maxAngle*r.f:0,g=c?8*c.size:0;for(const e of this._symbolFeatures){let t,r;h&&f&&e.sprite&&(t=f[e.sprite],t&&t.sdf&&(this._isIconSDF=!0)),t&&h.update(s,e.feature);let o=0;const l=e.label;if(l){c.update(s,e.feature);const t=n?c.keepUpright:c.writingMode&&c.writingMode.indexOf(1)>=0;let i=.5;switch(c.anchor){case 5:case 1:case 7:i=0;break;case 6:case 2:case 8:i=1}let a=.5;switch(c.anchor){case 5:case 3:case 6:a=0;break;case 7:case 4:case 8:a=1}let h=.5;switch(c.justify){case 0:h=i;break;case 1:h=0;break;case 3:h=1}const f=c.letterSpacing*p,d=n?0:c.maxWidth*p,y=c.lineHeight*p,g=e.textFont.map((e=>u.getGlyphItems(e)));if(r=new _(g,d,y,f,i,a,h).getShaping(l,e.rtl,t),r&&r.length>0){let e=1e30,t=-1e30;for(const s of r)e=Math.min(e,s.x),t=Math.max(t,s.x);o=(t-e+48)*x*8}}for(let s of e.geometry){const l=[];if(1===i){if(r&&r.length>0&&c&&c.size){const e=8*c.size*(2+Math.min(2,4*Math.abs(c.offset[1])));s=G._smoothVertices(s,e)}G._pushAnchors(l,s,a,o)}else 2===i?G._pushCenterAnchor(l,s):3===e.feature.type?G._pushCentroid(l,s):l.push(new I(s[0].x,s[0].y));for(const i of l){if(i.x<0||i.x>4096||i.y<0||i.y>4096)continue;if(n&&o>0&&0===c.rotationAlignment&&!G._honorsTextMaxAngle(s,i,o,y,g))continue;const a={shaping:r,line:s,iconMosaicItem:t,anchor:i,symbolFeature:e,textColliders:[],iconColliders:[],textVertexRanges:[],iconVertexRanges:[]};d.push(a),this._processFeature(a,h,c)}}}d.sort(R),this._addPlacedGlyphs(),this._symbolInstances=d}serialize(){let e=11;e+=this.layerUIDs.length,e+=3*this.markerPageMap.size,e+=3*this.glyphsPageMap.size,e+=G.symbolsSerializationLength(this._symbolInstances),e+=this._iconVertexBuffer.array.length,e+=this._iconIndexBuffer.array.length,e+=this._textVertexBuffer.array.length,e+=this._textIndexBuffer.array.length;const t=new Uint32Array(e),s=new Int32Array(t.buffer),i=new Float32Array(t.buffer);let n=0;t[n++]=this.type,t[n++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)t[n++]=this.layerUIDs[e];t[n++]=this._isIconSDF?1:0,t[n++]=this.markerPageMap.size;for(const[e,[s,i]]of this.markerPageMap)t[n++]=e,t[n++]=s,t[n++]=i;t[n++]=this.glyphsPageMap.size;for(const[e,[s,i]]of this.glyphsPageMap)t[n++]=e,t[n++]=s,t[n++]=i;t[n++]=this._iconVertexBuffer.index/4,t[n++]=this._textVertexBuffer.index/4,n=G.serializeSymbols(t,s,i,n,this._symbolInstances),t[n++]=this._iconVertexBuffer.array.length;for(let e=0;e<this._iconVertexBuffer.array.length;e++)s[n++]=this._iconVertexBuffer.array[e];t[n++]=this._iconIndexBuffer.array.length;for(let e=0;e<this._iconIndexBuffer.array.length;e++)t[n++]=this._iconIndexBuffer.array[e];t[n++]=this._textVertexBuffer.array.length;for(let e=0;e<this._textVertexBuffer.array.length;e++)s[n++]=this._textVertexBuffer.array[e];t[n++]=this._textIndexBuffer.array.length;for(let e=0;e<this._textIndexBuffer.array.length;e++)t[n++]=this._textIndexBuffer.array[e];return t.buffer}static symbolsSerializationLength(e){let t=0;t+=1;for(const s of e||[]){t+=4,t+=1;for(const e of s.textColliders)t+=10;for(const e of s.iconColliders)t+=10;t+=1,t+=2*s.textVertexRanges.length,t+=1,t+=2*s.iconVertexRanges.length}return t}static serializeSymbols(e,t,s,i,n){n=n||[],t[i++]=n.length;for(const e of n){t[i++]=e.anchor.x,t[i++]=e.anchor.y,t[i++]=e.symbolFeature.hash,t[i++]=e.symbolFeature.priority,t[i++]=e.textColliders.length+e.iconColliders.length;for(const n of e.textColliders)t[i++]=n.xTile,t[i++]=n.yTile,t[i++]=n.dxPixels,t[i++]=n.dyPixels,t[i++]=n.hard?1:0,t[i++]=n.partIndex,s[i++]=n.minLod,s[i++]=n.maxLod,t[i++]=n.width,t[i++]=n.height;for(const n of e.iconColliders)t[i++]=n.xTile,t[i++]=n.yTile,t[i++]=n.dxPixels,t[i++]=n.dyPixels,t[i++]=n.hard?1:0,t[i++]=n.partIndex,s[i++]=n.minLod,s[i++]=n.maxLod,t[i++]=n.width,t[i++]=n.height;t[i++]=e.textVertexRanges.length;for(const[s,n]of e.textVertexRanges)t[i++]=s,t[i++]=n;t[i++]=e.iconVertexRanges.length;for(const[s,n]of e.iconVertexRanges)t[i++]=s,t[i++]=n}return i}_replaceKeys(e,t){return e.replace(/{([^{}]+)}/g,(function(e,s){return s in t?t[s]:""}))}_processFeature(e,t,s){const{line:i,iconMosaicItem:n,shaping:a,anchor:o}=e,l=this.zoom,h=this.layer,c=!!n;let u=!0;c&&(u=t.optional||!n);const f=a&&a.length>0;let d,x,y=!0;if(f&&(y=s.optional),c&&(d=this._placementEngine.getIconPlacement(o,n,t)),(d||u)&&(f&&(x=this._placementEngine.getTextPlacement(o,a,i,s)),x||y)){if(d&&x||(y||u?y||x?u||d||(x=null):d=null:(d=null,x=null)),x){const t=h.hasDataDrivenText?h.textMaterial.encodeAttributes(e.symbolFeature.feature,l,h):null;if(this._storePlacedGlyphs(e,x.shapes,l,s.rotationAlignment,t),x.textColliders){e.textColliders=x.textColliders;for(const e of x.textColliders){e.minLod=Math.max(l+(0,r.P)(e.minLod),0),e.maxLod=Math.min(l+(0,r.P)(e.maxLod),25);const t=e.angle;if(t){const s=Math.cos(t),i=Math.sin(t),n=e.dxPixels*s-e.dyPixels*i,r=e.dxPixels*i+e.dyPixels*s,a=(e.dxPixels+e.width)*s-e.dyPixels*i,o=(e.dxPixels+e.width)*i+e.dyPixels*s,l=e.dxPixels*s-(e.dyPixels+e.height)*i,h=e.dxPixels*i+(e.dyPixels+e.height)*s,c=(e.dxPixels+e.width)*s-(e.dyPixels+e.height)*i,u=(e.dxPixels+e.width)*i+(e.dyPixels+e.height)*s,f=Math.min(n,a,l,c),d=Math.max(n,a,l,c),x=Math.min(r,o,h,u),y=Math.max(r,o,h,u);e.dxPixels=f,e.dyPixels=x,e.width=d-f,e.height=y-x}}}}if(d){const s=h.hasDataDrivenIcon?h.iconMaterial.encodeAttributes(e.symbolFeature.feature,l,h):null;if(this._addPlacedIcons(e,d.shapes,l,n.page,1===t.rotationAlignment,s),d.iconColliders){e.iconColliders=d.iconColliders;for(const e of d.iconColliders){e.minLod=Math.max(l+(0,r.P)(e.minLod),0),e.maxLod=Math.min(l+(0,r.P)(e.maxLod),25);const t=e.angle;if(t){const s=Math.cos(t),i=Math.sin(t),n=e.dxPixels*s-e.dyPixels*i,r=e.dxPixels*i+e.dyPixels*s,a=(e.dxPixels+e.width)*s-e.dyPixels*i,o=(e.dxPixels+e.width)*i+e.dyPixels*s,l=e.dxPixels*s-(e.dyPixels+e.height)*i,h=e.dxPixels*i+(e.dyPixels+e.height)*s,c=(e.dxPixels+e.width)*s-(e.dyPixels+e.height)*i,u=(e.dxPixels+e.width)*i+(e.dyPixels+e.height)*s,f=Math.min(n,a,l,c),d=Math.max(n,a,l,c),x=Math.min(r,o,h,u),y=Math.max(r,o,h,u);e.dxPixels=f,e.dyPixels=x,e.width=d-f,e.height=y-x}}}}}}_addPlacedIcons(e,t,s,i,n,a){const o=Math.max(s-1,0),l=this._iconVertexBuffer,h=this._iconIndexBuffer,c=this._markerMap;for(const u of t){const t=n?0:Math.max(s+(0,r.P)(u.minzoom),o),f=n?25:Math.min(s+(0,r.P)(u.maxzoom),25);if(f<=t)continue;const d=u.tl,x=u.tr,y=u.bl,g=u.br,p=u.mosaicRect,_=u.labelAngle,m=u.minAngle,I=u.maxAngle,b=u.anchor,w=l.index,M=p.x,P=p.y,D=M+p.width,B=P+p.height,V=l.index;l.add(b.x,b.y,d.x,d.y,M,P,_,m,I,t,f,a),l.add(b.x,b.y,x.x,x.y,D,P,_,m,I,t,f,a),l.add(b.x,b.y,y.x,y.y,M,B,_,m,I,t,f,a),l.add(b.x,b.y,g.x,g.y,D,B,_,m,I,t,f,a),e.iconVertexRanges.length>0&&e.iconVertexRanges[0][0]+e.iconVertexRanges[0][1]===V?e.iconVertexRanges[0][1]+=4:e.iconVertexRanges.push([V,4]),h.add(w+0,w+1,w+2),h.add(w+1,w+2,w+3),c.has(i)?c.get(i)[1]+=6:c.set(i,[this._iconIndexStart+this._iconIndexCount,6]),this._iconIndexCount+=6}}_addPlacedGlyphs(){const e=this._textVertexBuffer,t=this._textIndexBuffer,s=this._glyphMap;for(const[i,n]of this._glyphBufferDataStorage)for(const r of n){const n=e.index,a=r.symbolInstance,o=r.ddAttributes,l=e.index;e.add(r.glyphAnchor[0],r.glyphAnchor[1],r.tl[0],r.tl[1],r.xmin,r.ymin,r.labelAngle,r.minAngle,r.maxAngle,r.minLod,r.maxLod,o),e.add(r.glyphAnchor[0],r.glyphAnchor[1],r.tr[0],r.tr[1],r.xmax,r.ymin,r.labelAngle,r.minAngle,r.maxAngle,r.minLod,r.maxLod,o),e.add(r.glyphAnchor[0],r.glyphAnchor[1],r.bl[0],r.bl[1],r.xmin,r.ymax,r.labelAngle,r.minAngle,r.maxAngle,r.minLod,r.maxLod,o),e.add(r.glyphAnchor[0],r.glyphAnchor[1],r.br[0],r.br[1],r.xmax,r.ymax,r.labelAngle,r.minAngle,r.maxAngle,r.minLod,r.maxLod,o),a.textVertexRanges.length>0&&a.textVertexRanges[0][0]+a.textVertexRanges[0][1]===l?a.textVertexRanges[0][1]+=4:a.textVertexRanges.push([l,4]),t.add(n+0,n+1,n+2),t.add(n+1,n+2,n+3),s.has(i)?s.get(i)[1]+=6:s.set(i,[this._textIndexStart+this._textIndexCount,6]),this._textIndexCount+=6}this._glyphBufferDataStorage.clear()}_storePlacedGlyphs(e,t,s,i,n){const a=Math.max(s-1,0),o=1===i;let l,h,c,u,f,d,x,y,g,p,_;for(const i of t)l=o?0:Math.max(s+(0,r.P)(i.minzoom),a),h=o?25:Math.min(s+(0,r.P)(i.maxzoom),25),h<=l||(c=i.tl,u=i.tr,f=i.bl,d=i.br,x=i.labelAngle,y=i.minAngle,g=i.maxAngle,p=i.anchor,_=i.mosaicRect,this._glyphBufferDataStorage.has(i.page)||this._glyphBufferDataStorage.set(i.page,[]),this._glyphBufferDataStorage.get(i.page).push({glyphAnchor:[p.x,p.y],tl:[c.x,c.y],tr:[u.x,u.y],bl:[f.x,f.y],br:[d.x,d.y],xmin:_.x,ymin:_.y,xmax:_.x+_.width,ymax:_.y+_.height,labelAngle:x,minAngle:y,maxAngle:g,minLod:l,maxLod:h,placementLod:a,symbolInstance:e,ddAttributes:n}))}static _pushAnchors(e,t,s,i){s+=i;let n=0;const a=t.length-1;for(let e=0;e<a;e++)n+=l.t.distance(t[e],t[e+1]);let o=i||s;if(o*=.5,n<=o)return;const h=o/n;let c=0,u=-(s=n/Math.max(Math.round(n/s),1))/2;const f=t.length-1;for(let i=0;i<f;i++){const n=t[i],a=t[i+1],o=a.x-n.x,l=a.y-n.y,f=Math.sqrt(o*o+l*l);let d;for(;u+s<c+f;){u+=s;const t=(u-c)/f,x=(0,r.e)(n.x,a.x,t),y=(0,r.e)(n.y,a.y,t);void 0===d&&(d=Math.atan2(l,o)),e.push(new I(x,y,d,i,h))}c+=f}}static _pushCenterAnchor(e,t){let s=0;const i=t.length-1;for(let e=0;e<i;e++)s+=l.t.distance(t[e],t[e+1]);const n=s/2;let a=0;const o=t.length-1;for(let s=0;s<o;s++){const i=t[s],o=t[s+1],l=o.x-i.x,h=o.y-i.y,c=Math.sqrt(l*l+h*h);if(n<a+c){const t=(n-a)/c,u=(0,r.e)(i.x,o.x,t),f=(0,r.e)(i.y,o.y,t),d=Math.atan2(h,l);return void e.push(new I(u,f,d,s,0))}a+=c}}static _deviation(e,t,s){const i=(t.x-e.x)*(s.x-t.x)+(t.y-e.y)*(s.y-t.y),n=(t.x-e.x)*(s.y-t.y)-(t.y-e.y)*(s.x-t.x);return Math.atan2(n,i)}static _honorsTextMaxAngle(e,t,s,i,n){let r=0;const a=s/2;let o=new l.t(t.x,t.y),h=t.segment+1;for(;r>-a;){if(--h,h<0)return!1;r-=l.t.distance(e[h],o),o=e[h]}r+=l.t.distance(e[h],e[h+1]);const c=[];let u=0;const f=e.length;for(;r<a;){const t=e[h];let s,a=h;do{if(++a,a===f)return!1;s=e[a]}while(s.isEqual(t));let o,d=a;do{if(++d,d===f)return!1;o=e[d]}while(o.isEqual(s));const x=this._deviation(t,s,o);for(c.push({deviation:x,distToAnchor:r}),u+=x;r-c[0].distToAnchor>n;)u-=c.shift().deviation;if(Math.abs(u)>i)return!1;r+=l.t.distance(s,o),h=a}return!0}static _smoothVertices(e,t){if(t<=0)return e;let s=e.length;if(s<3)return e;const i=[];let n=0,r=0;i.push(0);for(let t=1;t<s;t++){const s=l.t.distance(e[t],e[t-1]);s>0&&(n+=s,i.push(n),r++,r!==t&&(e[r]=e[t]))}if(s=r+1,s<3)return e;t=Math.min(t,.2*n);const a=e[0].x,o=e[0].y,h=e[s-1].x,c=e[s-1].y,u=l.t.sub(e[0],e[1]);u.normalize(),e[0].x+=t*u.x,e[0].y+=t*u.y,u.assignSub(e[s-1],e[s-2]),u.normalize(),e[s-1].x+=t*u.x,e[s-1].y+=t*u.y,i[0]-=t,i[s-1]+=t;const f=[];f.push(new l.t(a,o));const d=1e-6,x=.5*t;for(let n=1;n<s-1;n++){let r=0,a=0,o=0;for(let s=n-1;s>=0;s--){const l=x+i[s+1]-i[n];if(l<0)break;const h=i[s+1]-i[s],c=i[n]-i[s]<x?1:l/h;if(c<d)break;const u=c*c,f=c*l-.5*u*h,y=c*h/t,g=e[s+1],p=e[s].x-g.x,_=e[s].y-g.y;r+=y/f*(g.x*c*l+.5*u*(l*p-h*g.x)-u*c*h*p/3),a+=y/f*(g.y*c*l+.5*u*(l*_-h*g.y)-u*c*h*_/3),o+=y}for(let l=n+1;l<s;l++){const s=x-i[l-1]+i[n];if(s<0)break;const h=i[l]-i[l-1],c=i[l]-i[n]<x?1:s/h;if(c<d)break;const u=c*c,f=c*s-.5*u*h,y=c*h/t,g=e[l-1],p=e[l].x-g.x,_=e[l].y-g.y;r+=y/f*(g.x*c*s+.5*u*(s*p-h*g.x)-u*c*h*p/3),a+=y/f*(g.y*c*s+.5*u*(s*_-h*g.y)-u*c*h*_/3),o+=y}f.push(new l.t(r/o,a/o))}return f.push(new l.t(h,c)),e[0].x=a,e[0].y=o,e[s-1].x=h,e[s-1].y=c,f}static _pushCentroid(e,t){const s=4096,i=4096,n=t.length-1;let r=0,a=0,o=0,l=t[0].x,h=t[0].y;l>s&&(l=s),l<0&&(l=0),h>i&&(h=i),h<0&&(h=0);for(let e=1;e<n;e++){let n=t[e].x,c=t[e].y,u=t[e+1].x,f=t[e+1].y;n>s&&(n=s),n<0&&(n=0),c>i&&(c=i),c<0&&(c=0),u>s&&(u=s),u<0&&(u=0),f>i&&(f=i),f<0&&(f=0);const d=(n-l)*(f-h)-(u-l)*(c-h);r+=d*(l+n+u),a+=d*(h+c+f),o+=d}r/=3*o,a/=3*o,isNaN(r)||isNaN(a)||e.push(new I(r,a))}}var O;G._bidiEngine=new f.C,function(e){e[e.INITIALIZED=0]="INITIALIZED",e[e.NO_DATA=1]="NO_DATA",e[e.READY=2]="READY",e[e.MODIFIED=3]="MODIFIED",e[e.INVALID=4]="INVALID"}(O||(O={}));class K{constructor(e,t,s,i,n){if(this._pbfTiles={},this._tileClippers={},this._client=s,this._tile=t,n){this._styleLayerUIDs=new Set;for(const e of n)this._styleLayerUIDs.add(e)}this._styleRepository=i,this._layers=this._styleRepository.layers;const[r,a,o]=t.tileKey.split("/").map(parseFloat);this._level=r;const c=8+Math.max(5*(this._level-14),0);for(const t of Object.keys(e)){const s=e[t];if(this._pbfTiles[t]=new h.n(new Uint8Array(s.protobuff),new DataView(s.protobuff)),s.refKey){const[e]=s.refKey.split("/").map(parseFloat),i=r-e;if(i>0){const e=(1<<i)-1,s=a&e,n=o&e;this._tileClippers[t]=new l.n(i,s,n,8,c)}}this._tileClippers[t]||(this._tileClippers[t]=new l.e)}}_canParseStyleLayer(e){return!this._styleLayerUIDs||this._styleLayerUIDs.has(e)}async parse(e){const t=this._initialize(e),{returnedBuckets:s}=t;this._processLayers(t),this._linkReferences(t),this._filterFeatures(t);const i=new Set,n={};for(const e of s)e.getResources(e.tileClipper,i,n);if(this._tile.status===O.INVALID)return Promise.resolve([]);const r=this._fetchResources(i,n,e);return Promise.all(r).then((()=>this._processFeatures(t.returnedBuckets)))}_initialize(e){return{signal:e&&e.signal,sourceNameToTileData:this._parseTileData(this._pbfTiles),layers:this._layers,zoom:this._level,sourceNameToTileClipper:this._tileClippers,sourceNameToUniqueSourceLayerBuckets:{},sourceNameToUniqueSourceLayers:{},returnedBuckets:[],layerIdToBucket:{},referencerUIDToReferencedId:new Map}}_processLayers(e){const{sourceNameToTileData:t,layers:s,zoom:i,sourceNameToTileClipper:n,sourceNameToUniqueSourceLayerBuckets:r,sourceNameToUniqueSourceLayers:a,returnedBuckets:o,layerIdToBucket:l,referencerUIDToReferencedId:h}=e;for(let e=s.length-1;e>=0;e--){const c=s[e];if(!this._canParseStyleLayer(c.uid)||c.minzoom&&i<Math.floor(c.minzoom)||c.maxzoom&&i>=c.maxzoom||0===c.type)continue;if(!t[c.source]||!n[c.source])continue;const u=t[c.source],f=n[c.source],d=c.sourceLayer,x=u[d];if(x){let e=a[c.source];if(e||(e=a[c.source]=new Set),e.add(c.sourceLayer),c.refLayerId)h.set(c.uid,c.refLayerId);else{const e=this._createBucket(c);if(e){e.layerUIDs=[c.uid],e.layerExtent=x.extent,e.tileClipper=f;let t=r[c.source];t||(t=r[c.source]={});let s=t[d];s||(s=t[d]=[]),s.push(e),o.push(e),l[c.id.toLowerCase()]=e}}}}}_linkReferences(e){const{layerIdToBucket:t,referencerUIDToReferencedId:s}=e;s.forEach(((e,s)=>{e=e.toLowerCase(),t[e]&&t[e].layerUIDs.push(s)}))}_filterFeatures(e){const{signal:t,sourceNameToTileData:s,sourceNameToUniqueSourceLayerBuckets:n,sourceNameToUniqueSourceLayers:r}=e,a=10*this._level,o=10*(this._level+1),l=[],h=[];for(const e of Object.keys(r))r[e].forEach((t=>{l.push(t),h.push(e)}));for(let e=0;e<l.length;e++){const r=h[e],c=l[e];if(!s[r]||!n[r])continue;const u=s[r][c],f=n[r][c];if(!f||0===f.length)continue;if((0,i.b)(t))return;const d=u.getData();for(;d.nextTag(2);){const e=d.getMessage(),t=new D(e,u);e.release();const s=t.values;if(s){const e=s._minzoom;if(e&&e>=o)continue;const t=s._maxzoom;if(t&&t<=a)continue}for(const e of f)e.pushFeature(t)}}}_fetchResources(e,t,s){const i=[],n=this._tile.getWorkerTileHandler();let r,a;e.size>0&&(r=n.fetchSprites(e,this._client,s),i.push(r));for(const e in t){const r=t[e];r.size>0&&(a=n.fetchGlyphs(this._tile.tileKey,e,r,this._client,s),i.push(a))}return i}_processFeatures(e){const t=e.filter((e=>e.hasFeatures()||this._canParseStyleLayer(e.layer.uid)));for(const e of t)e.processFeatures(e.tileClipper);return t}_parseTileData(e){const t={};for(const s of Object.keys(e)){const i=e[s],n={};for(;i.next();)switch(i.tag()){case 3:{const e=i.getMessage(),t=new V(e);e.release(),n[t.name]=t;break}default:i.skip()}t[s]=n}return t}_createBucket(e){switch(e.type){case 0:return null;case 1:return this._createFillBucket(e);case 2:return this._createLineBucket(e);case 4:return this._createCircleBucket(e);case 3:return this._createSymbolBucket(e)}}_createFillBucket(e){return new F(e,this._level,this._tile.getWorkerTileHandler().getSpriteItems(),new L(e.fillMaterial.getStride()),new B,new A(e.outlineMaterial.getStride()),new B)}_createLineBucket(e){return new E(e,this._level,this._tile.getWorkerTileHandler().getSpriteItems(),new k(e.lineMaterial.getStride()),new B)}_createCircleBucket(e){return new C(e,this._level,this._tile.getWorkerTileHandler().getSpriteItems(),new T(e.circleMaterial.getStride()),new B)}_createSymbolBucket(e){const t=this._tile;return new G(e,this._level,new v(e.iconMaterial.getStride()),new B,new v(e.textMaterial.getStride()),new B,t.placementEngine,t.getWorkerTileHandler())}}class j{constructor(e,t,s,i){this.status=O.INITIALIZED,this.placementEngine=new P,this.tileKey=e,this.refKeys=t,this._workerTileHandler=s,this._styleRepository=i}release(){this.tileKey="",this.refKeys=null,this.status=O.INITIALIZED,this._workerTileHandler=null}async parse(e,t,s){const r=s&&s.signal;if((0,n.r)(r)){const e=()=>{r.removeEventListener("abort",e),this.status=O.INVALID};r.addEventListener("abort",e)}let a;try{a=await this._parse(e,s)}catch(e){if((0,i.g)(e))throw e;return{result:[],transferList:[]}}this.status=O.READY;const o=[];for(const e of a){const t=e.serialize();o.push(t)}return{result:o,transferList:o.length<=t&&o}}setObsolete(){this.status=O.INVALID}getLayers(){return this._workerTileHandler.getLayers()}getWorkerTileHandler(){return this._workerTileHandler}async _parse(e,t){const s=e.sourceName2DataAndRefKey;return 0===Object.keys(s).length?[]:(this.status=O.MODIFIED,new K(s,this,t.client,this._styleRepository,e.styleLayerUIDs).parse(t))}}const q=class{constructor(){this._spriteInfo={},this._glyphInfo={}}reset(){return this._spriteInfo={},this._glyphInfo={},Promise.resolve()}getLayers(){var e;return null==(e=this._styleRepository)?void 0:e.layers}async createTileAndParse(e,t){const{key:s}=e,n={};for(const t of Object.keys(e.sourceName2DataAndRefKey)){const s=e.sourceName2DataAndRefKey[t];n[t]=s.refKey}const r=new j(s,n,this,this._styleRepository);try{return await r.parse(e,this._vectorTileLayerMaxBuffers,t)}catch(e){if(r.setObsolete(),r.release(),!(0,i.g)(e))throw e;return null}}updateStyle(e){if(!e||0===e.length||!this._styleRepository)return;const t=this._styleRepository;for(const s of e){const e=s.type,i=s.data;switch(e){case 0:t.setPaintProperties(i.layer,i.paint);break;case 1:t.setLayoutProperties(i.layer,i.layout);break;case 3:t.deleteStyleLayer(i.layer);break;case 2:t.setStyleLayer(i.layer,i.index)}}}setStyle(e){this._styleRepository=new r.g(e.style),this._spriteInfo={},this._glyphInfo={},this._vectorTileLayerMaxBuffers=e.vectorTileLayerMaxBuffers}fetchSprites(e,t,s){const i=[],n=this._spriteInfo;return e.forEach((e=>{void 0===n[e.name]&&i.push(e)})),0===i.length?Promise.resolve():t.invoke("getSprites",i,{signal:s&&s.signal}).then((e=>{for(const t in e){const s=e[t];n[t]=s}}))}getSpriteItems(){return this._spriteInfo}fetchGlyphs(e,t,s,i,n){const r=[];let a=this._glyphInfo[t];return a?s.forEach((e=>{a[e]||r.push(e)})):(a=this._glyphInfo[t]=[],s.forEach((e=>r.push(e)))),0===r.length?Promise.resolve():i.invoke("getGlyphs",{tileID:e,font:t,codePoints:r},n).then((e=>{for(let t=0;t<e.length;t++)e[t]&&(a[t]=e[t])}))}getGlyphItems(e){return this._glyphInfo[e]}}}}]);