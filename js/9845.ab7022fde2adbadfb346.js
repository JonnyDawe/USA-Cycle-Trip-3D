(self.webpackChunk=self.webpackChunk||[]).push([[9845],{89845:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>w});var o=i(78155),r=i(80987),n=i(88903),s=i(80219),l=i(4169),a=i(16040),u=i(26779),d=i(52737),y=i(98548),c=i(93028),p=i(18143),h=i(29832),f=i(92858);i(20215),i(20736),i(31531),i(82906),i(40130),i(52957),i(29126),i(6585),i(3621),i(63358),i(62121),i(34396),i(81135),i(94527),i(17762),i(60816),i(61888),i(31516),i(52109),i(5250),i(49878),i(84271),i(48643),i(73574),i(89710),i(30316),i(4618),i(65352),i(80657),i(94449),i(97325),i(3629),i(83731),i(79506),i(82361),i(41290),i(85289),i(98843),i(98420),i(54223),i(8725),i(51218),i(21793),i(13895),i(91236),i(15576),i(9612),i(76326),i(28941),i(19438),i(15022),i(56416),i(92758),i(78435),i(53902),i(40481),i(78730),i(2570),i(71666),i(72257),i(47365),i(67079),i(41822),i(91790),i(99987),i(16408);let m=class extends r.f{constructor(e){super(e),this.type="csv"}load(e){const t=(0,s.r)(e)?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){var e;null==(e=this._connection)||e.close(),this._connection=null}openPorts(){return this.load().then((()=>this._connection.openPorts()))}queryFeatures(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t))).then((e=>d.default.fromJSON(e)))}queryFeaturesJSON(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t)))}queryFeatureCount(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)))}queryObjectIds(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)))}queryExtent(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t))).then((e=>({count:e.count,extent:y.M.fromJSON(e.extent)})))}querySnapping(e,t={}){return this.load(t).then((()=>this._connection.invoke("querySnapping",e,t)))}async _startWorker(e){this._connection=await(0,u.p)("CSVSourceWorker",{strategy:(0,s.c)("feature-layers-workers")?"dedicated":"local",signal:e});const t=await this._connection.invoke("load",{url:this.url,parsing:{columnDelimiter:this.delimiter,fields:this.fields&&this.fields.map((e=>e.toJSON())),latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference&&this.spatialReference.toJSON(),timeInfo:this.timeInfo&&this.timeInfo.toJSON()}},{signal:e});this.locationInfo=t.locationInfo,this.sourceJSON=t.layerDefinition,this.columnDelimiter=t.columnDelimiter}};(0,o.e)([(0,n.y)()],m.prototype,"type",void 0),(0,o.e)([(0,n.y)()],m.prototype,"url",void 0),(0,o.e)([(0,n.y)()],m.prototype,"delimiter",void 0),(0,o.e)([(0,n.y)()],m.prototype,"fields",void 0),(0,o.e)([(0,n.y)()],m.prototype,"latitudeField",void 0),(0,o.e)([(0,n.y)()],m.prototype,"longitudeField",void 0),(0,o.e)([(0,n.y)()],m.prototype,"spatialReference",void 0),(0,o.e)([(0,n.y)()],m.prototype,"timeInfo",void 0),(0,o.e)([(0,n.y)()],m.prototype,"locationInfo",void 0),(0,o.e)([(0,n.y)()],m.prototype,"sourceJSON",void 0),(0,o.e)([(0,n.y)()],m.prototype,"columnDelimiter",void 0),m=(0,o.e)([(0,n.n)("esri.layers.graphics.sources.CSVSource")],m);var g=m;let v=class extends a.W{constructor(...e){super(...e),this.capabilities=(0,c.a)(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.customParameters=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.portalItem=null,this.spatialReference=f.k.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}get isTable(){return this.loaded&&null==this.geometryType}readWebMapLabelsVisible(e,t){return null!=t.showLabels?t.showLabels:!!(t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.labelingInfo)}set url(e){this._set("url",e)}async createGraphicsSource(e){const t=new g({delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference,timeInfo:this.timeInfo,url:this.url});return this._set("source",t),await t.load({signal:e}),this.read({locationInfo:t.locationInfo,columnDelimiter:t.columnDelimiter},{origin:"service",url:this.parsedUrl}),t}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(p.b.from(e)||this.createQuery()))).then((e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this.load().then((()=>this.source.queryObjectIds(p.b.from(e)||this.createQuery())))}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(p.b.from(e)||this.createQuery())))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(p.b.from(e)||this.createQuery())))}write(e,t){return super.write(e,{...t,writeLayerSchema:!0})}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};(0,o.e)([(0,n.y)({readOnly:!0,json:{read:!1,write:!1}})],v.prototype,"capabilities",void 0),(0,o.e)([(0,n.y)({type:[","," ",";","|","\t"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],v.prototype,"delimiter",void 0),(0,o.e)([(0,n.y)({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],v.prototype,"editingEnabled",void 0),(0,o.e)([(0,n.y)({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],v.prototype,"fields",void 0),(0,o.e)([(0,n.y)({type:Boolean,readOnly:!0})],v.prototype,"isTable",null),(0,o.e)([(0,l.e)("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],v.prototype,"readWebMapLabelsVisible",null),(0,o.e)([(0,n.y)({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],v.prototype,"latitudeField",void 0),(0,o.e)([(0,n.y)({json:{write:!0,origins:{"web-scene":{write:!1,read:!1}}}})],v.prototype,"customParameters",void 0),(0,o.e)([(0,n.y)({type:["show","hide"]})],v.prototype,"listMode",void 0),(0,o.e)([(0,n.y)({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],v.prototype,"locationType",void 0),(0,o.e)([(0,n.y)({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],v.prototype,"longitudeField",void 0),(0,o.e)([(0,n.y)({type:["CSV"]})],v.prototype,"operationalLayerType",void 0),(0,o.e)([(0,n.y)()],v.prototype,"outFields",void 0),(0,o.e)([(0,n.y)({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],v.prototype,"path",void 0),(0,o.e)([(0,n.y)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],v.prototype,"portalItem",void 0),(0,o.e)([(0,n.y)({json:{read:!1},cast:null,type:g,readOnly:!0})],v.prototype,"source",void 0),(0,o.e)([(0,n.y)({json:{read:!1},value:"csv",readOnly:!0})],v.prototype,"type",void 0),(0,o.e)([(0,n.y)({json:{read:h.m,write:{isRequired:!0,ignoreOrigin:!0,writer:h.p}}})],v.prototype,"url",null),v=(0,o.e)([(0,n.n)("esri.layers.CSVLayer")],v);const w=v}}]);