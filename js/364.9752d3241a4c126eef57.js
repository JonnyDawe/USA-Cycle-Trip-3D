(self.webpackChunk=self.webpackChunk||[]).push([[364],{40364:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>Pe}),i(33807);var r=i(78155),n=i(82906),s=i(71252),a=i(20215),o=i(80219),l=i(79506),u=i(88903),f=i(29126),c=i(4169),h=i(41290),d=i(51218),p=i(21793),m=i(80987),y=i(92858),g=i(8725),x=i(13895),w=i(25290),I=i(25681),v=i(98548),b=i(15576),S=i(28941),T=i(19438),C=i(47365),R=i(69284),_=i(84935),k=i(43231),M=i(20736),P=i(52737),F=i(28190),O=i(21779),D=i(99987);i(40130),i(52957),i(31531),i(6585),i(3621),i(63358),i(62121),i(26779),i(17762),i(60816),i(34396),i(81135),i(94527),i(61888),i(29832),i(31516),i(52109),i(5250),i(49878),i(84271),i(48643),i(73574),i(89710),i(30316),i(4618),i(65352),i(80657),i(71470),i(84581),i(11838),i(9612),i(39068),i(3629),i(91236),i(58404),i(77606),i(76326),i(67079),i(7571),i(93242),i(83731),i(97325),i(36845);const B=o.n.getLogger("esri.layers.mixins.ImageryTileMixin"),z=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e)}set url(e){this._set("url",(0,g.x)(e,B))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=(0,s.Q)(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!(i&&i.pixels&&i.pixels.length>0))return null;let r;this.updateRenderer();const n=this._rasterJobHandler.instance,{bandIds:s}=this;return r=n?await n.symbolize({...e,simpleStretchParams:t,bandIds:s}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:s}),r}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t,i=!1){if(!this.loaded)return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const r=(0,y.S)(e);return w.S.create({size:256,spatialReference:e,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,r={}){if(r.requestAsImageElement){const n=this.getTileUrl(e,t,i);return(0,m.L)(n,{responseType:"image",query:{sliceId:this._sliceId,_ts:r.timestamp,...this.raster.ioConfig.customFetchParameters},signal:r.signal}).then((e=>e.data))}await this._initJobHandler();const n="raster-shaded-relief"===this.renderer.type?{cols:1,rows:1}:null;if(this.multidimensionalDefinition){const e=this._sliceId;r={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,buffer:n,...r}}return this.raster.fetchTile(e,t,i,r)}async fetchPixels(e,t,i,r){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;r={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...r}}return this.raster.fetchPixels(e,t,i,r)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var e;const t=this.rasterInfo.multidimensionalInfo;if(!(0,o.r)(t)||"standard-time"!==this.rasterInfo.dataType)return!1;const i=null==(e=this.multidimensionalDefinition[0])?void 0:e.variableName;return t.variables.some((e=>e.name===i&&e.dimensions.some((e=>"StdTime"===e.name))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new s.c;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=(0,s.V)(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if((0,o.r)(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],i=[];t.dimensions.forEach((e=>{i.push(new s.a({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))})),this.multidimensionalDefinition=i}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t,i;this.bandIds||(this.bandIds=(0,s.S)(e)),this.renderer||(this.renderer=(0,s.M)(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)||null==(i=t[0])?void 0:i.variableName})),this.symbolizer?(this.symbolizer.rendererJSON=(0,s.Q)(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new I.N({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||B.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")}};return(0,r.e)([(0,u.y)()],t.prototype,"_cachedRendererJson",void 0),(0,r.e)([(0,u.y)()],t.prototype,"_sliceId",void 0),(0,r.e)([(0,u.y)()],t.prototype,"_compatibleFullExtent",void 0),(0,r.e)([(0,u.y)()],t.prototype,"_rasterJobHandler",void 0),(0,r.e)([(0,u.y)()],t.prototype,"bandIds",void 0),(0,r.e)([(0,u.y)()],t.prototype,"copyright",void 0),(0,r.e)([(0,u.y)({type:v.M}),(0,n.o)("rasterInfo.extent")],t.prototype,"fullExtent",void 0),(0,r.e)([(0,u.y)()],t.prototype,"interpolation",void 0),(0,r.e)([(0,u.y)()],t.prototype,"ioConfig",void 0),(0,r.e)([(0,u.y)({type:[s.a]})],t.prototype,"multidimensionalDefinition",null),(0,r.e)([(0,u.y)()],t.prototype,"raster",void 0),(0,r.e)([(0,u.y)({readOnly:!0}),(0,n.o)("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),(0,r.e)([(0,u.y)()],t.prototype,"sourceJSON",void 0),(0,r.e)([(0,u.y)({type:y.k}),(0,n.o)("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),(0,r.e)([(0,u.y)({type:w.S}),(0,n.o)("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),(0,r.e)([(0,u.y)(x.p)],t.prototype,"url",null),(0,r.e)([(0,u.y)({types:s.d})],t.prototype,"renderer",null),(0,r.e)([(0,u.y)()],t.prototype,"symbolizer",void 0),t=(0,r.e)([(0,u.n)("esri.layers.ImageryTileMixin")],t),t};let A=class extends((0,m.d)(r.a)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=(0,k.y)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:w.S.create(),...e.ioConfig}}),e}set url(e){this._set("url",(0,g.x)(e,o.n.getLogger(this.declaredClass)))}async open(e){throw new a.s("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,r={}){var n;const{tileInfo:s}=r,a=s.lodAt(e),l=this.getTileExtent({x:a.resolution,y:a.resolution},t,i,s.origin,s.spatialReference,s.size);return null!=(n=r.multidimensionalDefinition)&&n.length&&(0,o.r)(this.rasterInfo.multidimensionalInfo)&&null==r.sliceId&&(r={...r,sliceId:this.getSliceIndex(r.multidimensionalDefinition)||0}),this.fetchPixels(l,s.size[0],s.size[1],r)}async identify(e,t={}){const{spatialReference:i,extent:r}=this.rasterInfo,{datumTransformation:n}=t;let s=(0,k.w)(e,i,n);if(!r.intersects(s))return{location:s,value:null};if((0,o.r)(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(s);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};s=e}let a=0;if(t.srcResolution)a=(0,k.C)(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(a=await this.computeBestPyramidLevelForLocation(e,t),null==a)return{location:s,value:null};const l=this.identifyPixelLocation(s,a,null);if(null===l)return{location:s,value:null};const{row:u,col:f,rowOffset:c,colOffset:h}=l,d=(0,R.i)(this.url,t.sliceId),p=`${a}/${u}/${f}`;let m=(0,R.m)(d,null,p);(0,o.r)(m)||(m=this.fetchRawTile(a,u,f,t),(0,R.x)(d,null,p,m));const y=await m;if(!(y&&y.pixels&&y.pixels.length>0))return{location:s,value:null};const g=c*this.rasterInfo.storageInfo.blockHeight+h;return{location:s,value:!y.mask||y.mask[g]?y.pixels.map((e=>e[g])):null,pyramidLevel:a}}async fetchPixels(e,t,i,r={}){e=(0,k.P)(e);const n=(0,k.W)(e),s=this.rasterInfo.spatialReference,a=!e.spatialReference.equals(s),{datumTransformation:l}=r,u=new M.b({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),f=r.srcResolution||(a?(0,k.g)(u,s,e,l):u);if(!f)return null;const{pyramidLevel:c,pyramidResolution:h,excessiveReading:d}=(0,k.C)(f,this.rasterInfo,this.ioConfig.sampling);if(d)return null;const p=this.rasterInfo.storageInfo;let m=a?(0,k.j)(e,s,l):e;const y=(0,o.f)(this.rasterInfo.transform);if(y&&(m=y.inverseTransform(m)),null==m)return null;const g={x:Math.floor((m.xmin-p.origin.x)/h.x+.1),y:Math.floor((p.origin.y-m.ymax)/h.y+.1)},x=Math.ceil((m.xmax-m.xmin)/h.x-.1),w=Math.ceil((m.ymax-m.ymin)/h.y-.1);if(x/t>8||w/i>8||n>=2)return null;const I=await this.fetchRawPixels(c,g,{width:x,height:w,wrapCount:n},r);if(!I)return null;const v=c>0?p.pyramidBlockWidth:p.blockWidth,b=c>0?p.pyramidBlockHeight:p.blockHeight;if(!a&&1===I.pixelBlocks.length&&v===t&&b===i&&f.x===u.x&&f.y===u.y)return{extent:e,srcExtent:m,pixelBlock:I.pixelBlocks[0]};const S=(0,k.G)(e,I.extent,u,l,y,n>0);let T;const C=!r.requestRawData,R={rows:S.spacing[0],cols:S.spacing[1]},P=(0,o.f)(this._getRasterTileAlignmentInfo(c,I.extent.xmin)),{pixelBlocks:F,mosaicSize:O,isPartiallyFilled:D}=I;if(this.rasterJobHandler)T=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:F,srcMosaicSize:O,destDimension:C?{width:t,height:i}:null,coefs:C?S.coefficients:null,sampleSpacing:C?R:null,interpolation:r.interpolation,alignmentInfo:P},r);else{const e=(0,_.d)(F,O,null,null,P);T=C?(0,_.T)(e,{width:t,height:i},S.coefficients,R,r.interpolation):e}return r.requestRawData?{srcExtent:m,pixelBlock:T,transformGrid:S,extent:e,isPartiallyFilled:D}:{srcExtent:m,extent:e,pixelBlock:T}}async fetchRawPixels(e,t,i,r){const{origin:n,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(e);let{x:u,y:f}=t,{width:c,height:h,wrapCount:d}=i;const p=(0,o.f)(this._getRasterTileAlignmentInfo(e,0));r.buffer&&(u-=r.buffer.cols,f-=r.buffer.rows,c+=2*r.buffer.cols,h+=2*r.buffer.rows);const m=Math.floor(u/a),y=Math.floor(f/l),g=Math.floor((u+c-1)/a),x=Math.floor((f+h-1)/l),w=s[e];if(!w)return null;const{minRow:I,minCol:b,maxCol:S,maxRow:T}=w;if(x<I||g<b||y>T||m>S)return null;const C=[];let R,_=!1;for(let t=y;t<=x;t++)for(let i=m;i<=g;i++){const n=0===d||null==p||i<p.worldColumnCountFromOrigin?i:i%p.worldColumnCountFromOrigin-p.originColumnOffset;t>=I&&n>=b&&T>=t&&S>=n?(R=this._fetchRawTile(e,t,n,r),this.ioConfig.allowPartialFill&&(R=new Promise((e=>{R.then((t=>e(t))).catch((()=>{_=!0,e(null)}))}))),C.push(R)):C.push(null)}if(0===C.length)return null;const k=await Promise.all(C),M={height:(x-y+1)*l,width:(g-m+1)*a},{spatialReference:P}=this.rasterInfo,F=this.getPyramidPixelSize(e),{x:O,y:D}=F;return{extent:new v.M({xmin:n.x+m*a*O,xmax:n.x+(g+1)*a*O,ymin:n.y-(x+1)*l*D,ymax:n.y-y*l*D,spatialReference:P}),pixelBlocks:k,mosaicSize:M,isPartiallyFilled:_}}async fetchRawTile(e,t,i,r){throw new a.s("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return(0,k.j)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,I.T)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var r,n;const{customFetchParameters:s}=this.ioConfig,{range:a,query:o,headers:l}=t;i=null!=(r=null!=(n=i)?n:t.retryCount)?r:this.ioConfig.retryCount;const u=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return await(0,m.L)(e,{...t,query:{...o,...s},headers:{...l,...u}})}catch(r){if(i>0)return i--,this.request(e,t,i);throw r}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!(0,o.r)(t)||null==e||!e.length)return null;let i=0;const r=e[0].variableName;for(let n=0;n<t.variables.length;n++){const s=t.variables[n],a=s.dimensions;if(s.name!==r){i+=a.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const o=a.map((e=>this._getDimensionValuesCount(e))),l=a.length;for(let t=0;t<l;t++){const r=e.filter((e=>e.dimensionName===a[t].name))[0];if(null==r)return null;const n=Array.isArray(r.values[0])?r.values[0][0]:r.values[0],s=this._getIndexFromDimensions(n,a[t]);if(-1===s)return null;o.shift(),i+=t===l-1?s:s*o.reduce(((e,t)=>e+t))}}return i}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:r}=this.rasterInfo;if(!e.tileInfo){const n=[],s=e.maximumPyramidLevel||0;let a=Math.max(r.x,r.y),o=1/.0254*96*a;for(let e=0;e<=s;e++)n.push({level:s-e,resolution:a,scale:o}),a*=2,o*=2;const l=new M.b({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new w.S({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:n}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,r){const{width:n,height:s,nativeExtent:a,pixelSize:o,spatialReference:l}=e,u=new M.b({x:a.xmin,y:a.ymax,spatialReference:l});null==r&&(r=Math.max(0,Math.round(Math.log(Math.max(n,s))/Math.LN2-8)));const f=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],r);e.storageInfo=new I.s({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:u,firstPyramidLevel:1,maximumPyramidLevel:r,blockBoundary:f})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,r,n,s=0,a=2){if(1===n.length&&s>0){n=[...n];let{x:e,y:t}=n[0];for(let i=0;i<s;i++)e*=a,t*=a,n.push({x:e,y:t})}const o=[],{x:l,y:u}=r;for(let r=0;r<n.length;r++){const{x:s,y:a}=n[r];o.push({minCol:Math.floor((e.xmin-l+.1*s)/t/s),maxCol:Math.floor((e.xmax-l-.1*s)/t/s),minRow:Math.floor((u-e.ymax+.1*a)/i/a),maxRow:Math.floor((u-e.ymin-.1*a)/i/a)})}return o}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:r}=this.rasterInfo.storageInfo;if(0===e)return t;if((0,o.r)(i)&&i.length)return i[e-1];const n=r**e;return{x:t.x*n,y:t.y*n}}identifyPixelLocation(e,t,i){const{spatialReference:r,nativeExtent:n}=this.rasterInfo,{blockWidth:s,blockHeight:a,maximumPyramidLevel:o,origin:l}=this.rasterInfo.storageInfo,u=(0,k.w)(e,r,i);if(!n.intersects(u))return null;if(t<0||t>o)return null;const f=this.getPyramidPixelSize(t),{x:c,y:h}=f,d=(l.y-u.y)/h/a,p=(u.x-l.x)/c/s,m=Math.min(a-1,Math.floor((d-Math.floor(d))*a)),y=Math.min(s-1,Math.floor((p-Math.floor(p))*s));return{pyramidLevel:t,row:Math.floor(d),col:Math.floor(p),rowOffset:m,colOffset:y,srcLocation:u}}getTileExtent(e,t,i,r,n,s){const[a,o]=s,l=r.x+i*a*e.x,u=l+a*e.x,f=r.y-t*o*e.y,c=f-o*e.y;return new v.M({xmin:l,xmax:u,ymin:c,ymax:f,spatialReference:n})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const r=this.rasterInfo.storageInfo.blockBoundary[e];return!r||r.maxRow<t||r.maxCol<i||r.minRow>t||r.minCol>i}_fetchRawTile(e,t,i,r){const n=this.rasterInfo.storageInfo.blockBoundary[e];if(!n)return Promise.resolve(null);const{minRow:s,minCol:l,maxCol:u,maxRow:f}=n;if(t<s||i<l||t>f||i>u)return Promise.resolve(null);const c=(0,R.i)(this.url,r.sliceId),h=`${e}/${t}/${i}`;let d=(0,R.m)(c,r.registryId,h);if(!(0,o.r)(d)){const n=(0,a.h)();d=this.fetchRawTile(e,t,i,{...r,signal:n.signal}),(0,R.x)(c,r.registryId,h,d,n),d.catch((()=>{(0,R.d)(c,r.registryId,h)}))}return r.signal&&(0,a.v)(r,(()=>{(0,R.h)(c,r.registryId,h)})),d}_getIndexFromDimensions(e,t){const{extent:i,interval:r,unit:n,values:s}=t;if(null!=s&&s.length)return Array.isArray(s[0])?s.findIndex((t=>t[0]<=e&&t[1]>=e)):s.indexOf(e);if(e>i[1])return-1;const a=i[0];let o=-1;if("ISO8601"===n){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((e-a)/1e3/r);break;case"minutes":o=Math.round((e-a)/6e4/r);break;case"hours":o=Math.round((e-a)/36e5/r);break;case"days":o=Math.round((e-a)/864e5/r);break;case"years":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/r);break;case"decades":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/10/r)}return o}return Math.round((e-a)/r)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:r,values:n}=e;let s=(null==n?void 0:n.length)||0;if(s)return s;const a=t[0];if(0===s&&"ISO8601"===r){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":s=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":s=Math.round((t[1]-t[0])/6e4/i);break;case"hours":s=Math.round((t[1]-t[0])/36e5/i);break;case"days":s=Math.round((t[1]-t[0])/864e5/i);break;case"years":s=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/i);break;case"decades":s=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/10/i)}return s}return Math.round((t[1]-t[0])/i)}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,k.z)(this.rasterInfo)),(0,o.r)(this._rasterTileAlighmentInfo.pyramidsInfo)?{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}:null}};(0,r.e)([(0,u.y)()],A.prototype,"_rasterTileAlighmentInfo",void 0),(0,r.e)([(0,u.y)(x.p)],A.prototype,"url",null),(0,r.e)([(0,u.y)({type:String,json:{write:!0}})],A.prototype,"datasetName",void 0),(0,r.e)([(0,u.y)({type:String,json:{write:!0}})],A.prototype,"datasetFormat",void 0),(0,r.e)([(0,u.y)()],A.prototype,"rasterInfo",void 0),(0,r.e)([(0,u.y)()],A.prototype,"ioConfig",void 0),(0,r.e)([(0,u.y)()],A.prototype,"sourceJSON",void 0),A=(0,r.e)([(0,u.n)("esri.layers.support.rasterDatasets.BaseRaster")],A);var E=A;function N(e){const t=e.fields,i=e.records,r=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",n=[{name:r,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=n.map((e=>e.name)),a=[];let o=0,l=0;return i.forEach((e=>{const t={};for(t[r]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:n,features:a}}let L=class extends r.a{constructor(){super(...arguments),this.affectsPixelSize=!1}forwardTransform(e){return e}inverseTransform(e){return e}};(0,r.e)([(0,u.y)()],L.prototype,"affectsPixelSize",void 0),(0,r.e)([(0,u.y)({json:{write:!0}})],L.prototype,"spatialReference",void 0),L=(0,r.e)([(0,u.n)("esri.layers.support.rasterTransforms.BaseRasterTransform")],L);var H=L;let J=class extends H{constructor(){super(...arguments),this.type="identity"}};(0,r.e)([(0,f.r)({IdentityXform:"identity"})],J.prototype,"type",void 0),J=(0,r.e)([(0,u.n)("esri.layers.support.rasterTransforms.IdentityTransform")],J);var q=J;function U(e,t,i){const{x:r,y:n}=t;if(i<2)return{x:e[0]+r*e[2]+n*e[4],y:e[1]+r*e[3]+n*e[5]};if(2===i){const t=r*r,i=n*n,s=r*n;return{x:e[0]+r*e[2]+n*e[4]+t*e[6]+s*e[8]+i*e[10],y:e[1]+r*e[3]+n*e[5]+t*e[7]+s*e[9]+i*e[11]}}const s=r*r,a=n*n,o=r*n,l=s*r,u=s*n,f=r*a,c=n*a;return{x:e[0]+r*e[2]+n*e[4]+s*e[6]+o*e[8]+a*e[10]+l*e[12]+u*e[14]+f*e[16]+c*e[18],y:e[1]+r*e[3]+n*e[5]+s*e[7]+o*e[9]+a*e[11]+l*e[13]+u*e[15]+f*e[17]+c*e[19]}}function W(e,t,i){const{xmin:r,ymin:n,xmax:s,ymax:a,spatialReference:o}=t;let l=[];if(i<2)l.push({x:r,y:a}),l.push({x:s,y:a}),l.push({x:r,y:n}),l.push({x:s,y:n});else{let e=10;for(let t=0;t<e;t++)l.push({x:r,y:n+(a-n)*t/(e-1)}),l.push({x:s,y:n+(a-n)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:r+(s-r)*t/e,y:n}),l.push({x:r+(s-r)*t/e,y:a})}l=l.map((t=>U(e,t,i)));const u=l.map((e=>e.x)),f=l.map((e=>e.y));return new v.M({xmin:Math.min.apply(null,u),xmax:Math.max.apply(null,u),ymin:Math.min.apply(null,f),ymax:Math.max.apply(null,f),spatialReference:o})}let G=class extends H{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:i,coeffY:r}=t;if(null==i||!i.length||null==r||!r.length||i.length!==r.length)return null;const n=[];for(let e=0;e<i.length;e++)n.push(i[e]),n.push(r[e]);return n}writeForwardCoefficients(e,t,i){const r=[],n=[];for(let t=0;t<(null==e?void 0:e.length);t++)t%2==0?r.push(e[t]):n.push(e[t]);t.coeffX=r,t.coeffY=n}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,r,n,s,a]=e,o=r*a-s*n,l=s*n-r*a;return[(s*i-t*a)/o,(r*i-t*n)/l,a/o,n/l,-s/o,-r/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:i,inverseCoeffY:r}=t;if(null==i||!i.length||null==r||!r.length||i.length!==r.length)return null;const n=[];for(let e=0;e<i.length;e++)n.push(i[e]),n.push(r[e]);return n}writeInverseCoefficients(e,t,i){const r=[],n=[];for(let t=0;t<(null==e?void 0:e.length);t++)t%2==0?r.push(e[t]):n.push(e[t]);t.inverseCoeffX=r,t.inverseCoeffY=n}forwardTransform(e){if("point"===e.type){const t=U(this.forwardCoefficients,e,this.polynomialOrder);return new M.b({x:t.x,y:t.y,spatialReference:e.spatialReference})}return W(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=U(this.inverseCoefficients,e,this.polynomialOrder);return new M.b({x:t.x,y:t.y,spatialReference:e.spatialReference})}return W(this.inverseCoefficients,e,this.polynomialOrder)}};(0,r.e)([(0,u.y)({json:{write:!0}})],G.prototype,"polynomialOrder",void 0),(0,r.e)([(0,u.y)()],G.prototype,"forwardCoefficients",void 0),(0,r.e)([(0,c.e)("forwardCoefficients",["coeffX","coeffY"])],G.prototype,"readForwardCoefficients",null),(0,r.e)([(0,r.o)("forwardCoefficients")],G.prototype,"writeForwardCoefficients",null),(0,r.e)([(0,u.y)({json:{write:!0}})],G.prototype,"inverseCoefficients",null),(0,r.e)([(0,c.e)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],G.prototype,"readInverseCoefficients",null),(0,r.e)([(0,r.o)("inverseCoefficients")],G.prototype,"writeInverseCoefficients",null),(0,r.e)([(0,u.y)()],G.prototype,"affectsPixelSize",void 0),(0,r.e)([(0,f.r)({PolynomialXform:"polynomial"})],G.prototype,"type",void 0),G=(0,r.e)([(0,u.n)("esri.layers.support.rasterTransforms.PolynomialTransform")],G);var j=G;const $={PolynomialXform:j,IdentityXform:q},V=Object.keys($);function Y(e){const t=null==e?void 0:e.type;return!e||V.includes(t)}const X=new Map;X.set("int16","esriFieldTypeSmallInteger"),X.set("int32","esriFieldTypeInteger"),X.set("int64","esriFieldTypeInteger"),X.set("float32","esriFieldTypeSingle"),X.set("float64","esriFieldTypeDouble"),X.set("text","esriFieldTypeString");let K=class extends E{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new a.s("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:r}=this._parseHeader(t);if("thematic"===r.dataType){const e=await this._fetchAuxiliaryInformation();r.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",r),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,r={}){const n=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(n<0)return null;const s=this._buildCacheFilePath(n,t,i,r.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,i),o=await this.request(s,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:r.signal});if(!o)return null;const l=new Uint8Array(o.data),u=this._getTileEndAndContentType(l,a);if(0===u.recordSize)return null;const f=await this.request(s,{range:{from:u.position,to:u.position+u.recordSize},responseType:"array-buffer",signal:r.signal});return f?this.decodePixelBlock(f.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t,i;const r=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:n,histograms:s,colormap:a,blockWidth:o,blockHeight:l,firstPyramidLevel:u,maximumPyramidLevel:f}=e,c=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),h=e.extent.spatialReference,d=null==(t=e.geodataXform)?void 0:t.spatialReference,p=new y.k(null!=h&&h.wkid||null!=h&&h.wkt?h:d);let m=new v.M({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:p});const g=new M.b({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:p}),x=Math.round((m.xmax-m.xmin)/g.x),b=Math.round((m.ymax-m.ymin)/g.y),S=this._parseTransform(e.geodataXform),T=S?m:null;S&&(m=S.forwardTransform(m),g.x=(m.xmax-m.xmin)/x,g.y=(m.ymax-m.ymin)/b);const C=null!=(i=e.properties)?i:{},R=e.format.toLowerCase().replace("cache/",""),_=new M.b(e.origin.x,e.origin.y,p);let k,P,F,O;if(a&&a.colors)for(k=[],P=0;P<a.colors.length;P++)F=a.colors[P],O=a.values?a.values[P]:P,k.push([O,255&F,F<<16>>>24,F<<8>>>24,F>>>24]);const D=e.LODInfos,B=[];for(P=0;P<D.levels.length;P++)B.push({level:D.levels[P],resolution:D.resolutions[P],scale:96/.0254*D.resolutions[P]});const z=new w.S({dpi:96,lods:B,format:R,origin:_,size:[o,l],spatialReference:p}),A={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},E=[{maxCol:Math.ceil(x/o)-1,maxRow:Math.ceil(b/l)-1,minCol:0,minRow:0}];let N=2;if(f>0)for(P=0;P<f;P++)E.push({maxCol:Math.ceil(x/N/o)-1,maxRow:Math.ceil(b/N/l)-1,minCol:0,minRow:0}),N*=2;const L=e.mdInfo;return{storageInfo:A,rasterInfo:new I.l({width:x,height:b,pixelType:r,bandCount:n,extent:m,nativeExtent:T,transform:S,spatialReference:p,pixelSize:g,keyProperties:C,statistics:c,histograms:s,multidimensionalInfo:L,colormap:k,storageInfo:new I.s({blockWidth:o,blockHeight:l,pyramidBlockWidth:o,pyramidBlockHeight:l,origin:_,tileInfo:z,firstPyramidLevel:u,maximumPyramidLevel:f,blockBoundary:E})})}}_parseTransform(e){var t,i;if(!Y(e))throw new a.s("cloudraster:open","the data contains unsupported geodata transform types");const r=function(e){if(!(null==e?void 0:e.type))return null;const t=$[null==e?void 0:e.type];if(t){const i=new t;return i.read(e),i}return null}(e);if("identity"===r.type)return null;if("polynomial"!==r.type||null==(t=r.forwardCoefficients)||!t.length||null==(i=r.inverseCoefficients)||!i.length)throw new a.s("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return r}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),r=await Promise.all([t,i]);let n;if(r[0]){let e=r[0].fields;const t=r[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":X.get(e.type),name:e.name,alias:e.alias||e.name})));const i=t.map((e=>({attributes:e})));e&&t&&(n={fields:e,features:i})}}return!n&&r[1]&&(n=class{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const r=t.getUint32(4,!0),n=t.getUint16(8,!0),s=t.getUint16(10,!0),a={version:i,recordCount:r,headerByteCount:n,recordByteCount:s};let o=32;const l=[],u=[];let f;if(3===i){for(;13!==t.getUint8(o);)f=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,I.r)(new Uint8Array(e,o,11)),type:f,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(f)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;u.length<r&&e.byteLength-o>s;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)i.push((0,I.r)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const r=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(r.substring(0,4),10),parseInt(r.substring(4,6),10)-1,parseInt(r.substring(6,8),10)))}o+=t.length})),u.push(i)):o+=s}}return{header:a,fields:l,records:u,recordSet:N({fields:l,records:u})}}}.parse(r[1]).recordSet),P.default.fromJSON(n)}_buildCacheFilePath(e,t,i,r){const n=this.storageInfo.packetSize,s=Math.floor(t/n)*n,a=Math.floor(i/n)*n,l="R"+this._toHexString4(s)+"C"+this._toHexString4(a);let u="L";u+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:f}=this.rasterInfo,c=null==r?void 0:r[0];if(!(0,o.r)(f)||!c)return`${this.url}/_alllayers/${u}/${l}.bundle`;let h=f.variables.filter((e=>e.name===c.variableName))[0].dimensions[0].values.indexOf(c.values[0]).toString(16);const d=4-h.length;for(let e=0;e<d;e++)h="0"+h;return h="S"+h,`${this.url}/_alllayers/${c.variableName}/${h}/${u}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,r=i*(e%i)+t%i;if(r<0)throw"Invalid level / row / col";return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let r,n=0;for(r=0;r<5;r++)n|=(255&i[r])<<8*r;const s=0xffffffffff&n;for(n=0,r=5;r<8;r++)n|=(255&i[r])<<8*(r-5);return{position:s,recordSize:0xffffffffff&n}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};(0,r.e)([(0,u.y)({readOnly:!0})],K.prototype,"storageInfo",void 0),(0,r.e)([(0,u.y)({type:String,json:{write:!0}})],K.prototype,"datasetFormat",void 0),K=(0,r.e)([(0,u.n)("esri.layers.support.rasterDatasets.CloudRaster")],K);var Q=K;let Z=class extends E{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:r,histograms:n,name:s,keyProperties:a,nativeExtent:o,transform:l}=this.data,{width:u,height:f,pixelType:c}=i,h=this.data.extent||new v.M({xmin:-.5,ymin:.5,xmax:u-.5,ymax:f-.5,spatialReference:new y.k({wkid:3857})}),d=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,p={x:h.width/u,y:h.height/f},m=new I.l({width:u,height:f,pixelType:c,extent:h,nativeExtent:o,transform:l,pixelSize:p,spatialReference:h.spatialReference,bandCount:3,keyProperties:a||{},statistics:r,isPseudoSpatialReference:d,histograms:n});this.createRemoteDatasetStorageInfo(m,512,512),this._set("rasterInfo",m),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=s,this.url="/InMemory/"+s}fetchRawTile(e,t,i,r={}){const n=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(n)}async _buildInMemoryRaster(e,t,i){const r=this.rasterInfo.storageInfo.maximumPyramidLevel,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:r},i):Promise.resolve((0,_.C)(e,t,r)),s=(0,o.r)(this.rasterInfo.statistics),l=(0,o.r)(this.rasterInfo.histograms),u=s&&l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,_.r)(e)),f=await(0,a.A)([n,u]);if(!f[0].value&&f[1].value)throw new a.s("inmemory-raster:open","failed to build in memory raster");var c,h;this._pixelBlockTiles=f[0].value,s||(this.rasterInfo.statistics=null==(c=f[1].value)?void 0:c.statistics),l&&(this.rasterInfo.histograms=null==(h=f[1].value)?void 0:h.histograms)}};(0,r.e)([(0,u.y)({type:String,json:{write:!0}})],Z.prototype,"datasetFormat",void 0),(0,r.e)([(0,u.y)()],Z.prototype,"data",void 0),Z=(0,r.e)([(0,u.n)("esri.layers.support.rasterDatasets.InMemoryRaster")],Z);var ee=Z;function te(e,t){if(!e||!t)return[];let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=[];if(t){const n=te(e,i);for(let e=0;e<n.length;e++)te(n[e],t).forEach((e=>r.push(e)));return r}const n=e.getElementsByTagNameNS("*",i);if(!n||0===n.length)return[];for(let e=0;e<n.length;e++)r.push(n[e]||n.item[e]);return r}function ie(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=te(e,i);return r.length>0?t?ie(r[0],t):r[0]:null}function re(e,t=null){const i=t?ie(e,t):e;let r;return i?(r=i.textContent||i.nodeValue,r?r.trim():null):null}function ne(e,t){return function(e,t){const i=te(e,t),r=[];let n;for(let e=0;e<i.length;e++)n=i[e].textContent||i[e].nodeValue,n&&(n=n.trim(),""!==n&&r.push(n));return r}(e,t).map((e=>Number(e)))}function se(e,t){const i=re(e,t);return Number(i)}function ae(e,t){var i;const r=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),n=t.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===n}function oe(e,t){if(!e||!t)return null;const i=[];for(let r=0;r<e.length;r++)i.push(e[r]),i.push(t[r]);return i}function le(e){var t;const i=ie(e,"GeodataXform"),r=fe(se(i,"SpatialReference/WKID")||re(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:r,transform:null};const n=null!=(t=se(i,"PolynomialOrder"))?t:1,s=ne(i,"CoeffX/Double"),a=ne(i,"CoeffY/Double"),o=ne(i,"InverseCoeffX/Double"),l=ne(i,"InverseCoeffY/Double"),u=oe(s,a),f=oe(o,l);return{spatialReference:r,transform:new j({spatialReference:r,polynomialOrder:n,forwardCoefficients:u,inverseCoefficients:f})}}function ue(e){var t;const i=se(e,"NoDataValue"),r=ie(e,"Histograms/HistItem"),n=se(r,"HistMin"),s=se(r,"HistMax"),a=se(r,"BucketCount"),o=null==(t=re(r,"HistCounts"))?void 0:t.split("|").map((e=>Number(e)));let l,u,f,c;te(e,"Metadata/MDI").forEach((e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":u=i;break;case"STATISTICS_MEAN":f=i;break;case"STATISTICS_STDDEV":c=i}}));const h=se(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!=o&&o.length&&null!=l&&null!=u?{min:n,max:s,size:a||o.length,counts:o}:null,sourceBandIndex:h,statistics:null!=l&&null!=u?{min:l,max:u,avg:f,stddev:c}:null}}function fe(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new y.k({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.indexOf("VERTCS"),r=e.indexOf("PROJCS"),n=r>-1?r:e.indexOf("GEOGCS");if(-1===n)return null;const s=e.slice(n,e.lastIndexOf("]",i)+1).trim(),a=e.slice(n,e.lastIndexOf("]")).trim();t=ce(s);const o=new y.k(t?{wkid:t}:{wkt:s}),l=ce(a);return l&&(o.vcsWkid=l),o}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=ce(e),new y.k(0!==t?{wkid:t}:{wkt:e})):null}function ce(e){const t=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),i=t[t.length-1].split(",");if("EPSG"===i[0]&&e.endsWith('"]]')){const e=Number(i[1]);if(!isNaN(e)&&0!==e)return e}return 0}function he(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(ae(e,"SRS")){if(!i.spatialReference){const t=re(e);i.spatialReference=fe(t)}}else if(ae(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:r}=le(e);i.transform=r,i.spatialReference||(i.spatialReference=t)}else te(e,"MDI").forEach((e=>i.metadata[e.getAttribute("key")]=re(e)));else if(ae(e,"PAMRasterBand")){const t=ue(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}}));const r=i.rasterBands;if(r){const e=!!r[0].statistics;i.statistics=e?r.map((e=>e.statistics)):null;const t=!!r[0].histogram;i.histograms=t?r.map((e=>e.histogram)):null}return i}let de=class extends E{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:r,histograms:n,transform:s}=await this._fetchAuxiliaryData(e);const a=!i;a&&(i=new y.k({wkid:3857})),null!=n&&n.length&&null==r&&(r=(0,_.o)(n));const{width:o,height:l}=t;let u=new v.M({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const f=s?s.forwardTransform(u):u;let c=!0;if(s){const e=s.forwardCoefficients;c=e&&0===e[1]&&0===e[2],c&&(s=null,u=f)}const h=new ee({data:{extent:f,nativeExtent:u,transform:s,pixelBlock:t,statistics:r,histograms:n,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await h.open(),this._set("rasterInfo",h.rasterInfo),this._inMemoryRaster=h}fetchRawTile(e,t,i,r={}){return this._inMemoryRaster.fetchRawTile(e,t,i,r)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=(0,I.v)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new a.s("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,i;const r=(0,o.f)(null==e?void 0:e.signal),n=null!=(t=this.ioConfig.skipExtensions)?t:[],s=n.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:r}),l=this.datasetFormat,u="JPG"===l?"jgw":"PNG"===l?"pgw":"BMP"===l?"bpw":null,f=n.indexOf(u)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+u,{responseType:"text",signal:r}),c=await(0,a.A)([s,f]);if(null!=r&&r.aborted)throw(0,a.m)();const h=he(null==(i=c[0].value)?void 0:i.data);if(!h.transform){const e=c[1].value?c[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;h.transform=6===(null==e?void 0:e.length)?new j({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return h}};(0,r.e)([(0,u.y)({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),de=(0,r.e)([(0,u.n)("esri.layers.support.rasterDatasets.ImageAuxRaster")],de);var pe=de;let me=class extends H{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}};(0,r.e)([(0,f.r)({GCSShiftXform:"gcs-shift"})],me.prototype,"type",void 0),(0,r.e)([(0,u.y)()],me.prototype,"tolerance",void 0),me=(0,r.e)([(0,u.n)("esri.layers.support.rasterTransforms.GCSShiftTransform")],me);var ye=me;let ge=class extends E{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=i.data;if(this.sourceJSON=r,!r)throw new a.s("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!r.tileInfo)throw new a.s("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo(),this.tileType=r.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(r.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===r.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=r.name.slice(r.name.indexOf("/")+1);const n=await this._fetchRasterInfo({signal:t});if(!(0,o.r)(n))throw new a.s("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?(0,F.n)(r.tileInfo,r):w.S.fromJSON(r.tileInfo),{extent:t,pixelSize:i}=n,s=.5/n.width*i.x;let a,o;const l=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==r.maxScale&&("Raster"===this.tileType?(a=e.lods.filter((e=>e.resolution===i.x))[0],a||(a=e.lods[e.lods.length-1])):(a=e.lods.filter((e=>Math.abs(e.scale-r.maxScale)<s))[0],a||(a=e.lods.filter((e=>e.scale>r.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=a.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),a||(a=l);const u=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==r.minScale&&"Elevation"===this.tileType&&(o=e.lods.filter((e=>Math.abs(e.scale-r.minScale)<s))[0],this._levelOffset=o.level-u.level),o||(o=u);const f=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>s||!e.lods.some((e=>Math.abs(e.resolution-f)<s)))&&(i.x=i.y=a.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const c=a.level-o.level,[h,d]=e.size,p=[];e.lods.forEach((e=>{e.level>=o.level&&e.level<=a.level&&p.push({x:e.resolution,y:e.resolution})})),p.sort(((e,t)=>e.x-t.x));const m=this.computeBlockBoundary(t,h,d,e.origin,p,c),y=p.length>1?p.slice(1):null;n.storageInfo=new I.s({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:y,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:c,tileInfo:e,blockBoundary:m}),this._fixGCSShift(n),this._set("rasterInfo",n)}if(r.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:n.storageInfo.tileInfo,parsedUrl:(0,m.U)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new O.j({layer:e})}}async fetchRawTile(e,t,i,r={}){const{storageInfo:n,extent:s}=this.rasterInfo,a=n.maximumPyramidLevel-e+this._levelOffset,o=`${this.url}/tile/${a}/${t}/${i}`,l=this._slices?{sliceId:r.sliceId||0}:null,{data:u}=await this.request(o,{query:l,responseType:"array-buffer",signal:r.signal});if(!u)return null;const f=await this.decodePixelBlock(u,{width:n.tileInfo.size[0],height:n.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),c=n.blockBoundary[e];if("jpg"!==n.compression||i>c.minCol&&i<c.maxCol&&t>c.minRow&&t<c.maxRow)return f;const{origin:h,blockWidth:d,blockHeight:p}=n,{x:m,y}=this.getPyramidPixelSize(e),g=Math.round((s.xmin-h.x)/m)%d,x=Math.round((s.xmax-h.x)/m)%d,w=Math.round((h.y-s.ymax)/y)%p,I=Math.round((h.y-s.ymin)/y)%p,v=i===c.minCol?g:0,b=t===c.minRow?w:0,S=i===c.maxCol?x:d,T=t===c.maxRow?I:p;return(0,_.g)(f,{x:v,y:b},{width:S-v,height:T-b}),f}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let e=0;e<this._slices.length;e++){const i=this._slices[e].multidimensionalDefinition;if(i.length===t.length&&!i.some((e=>{const i=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];return!i||(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])})))return e}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),r=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),n=await Promise.all([i,r]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,(0,o.f)(t.datumTransformation));if(null===i)return null;let r=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let s=n-r+this._levelOffset;const a=i.srcLocation;for(;s>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(s,i.row,i.col,t))break}catch{}if(s--,r++,i=this.identifyPixelLocation(a,r,(0,o.f)(t.datumTransformation)),null===i)return null}return-1===s||null==i?null:r}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),r=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=y.k.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new I.l({width:i,height:r,bandCount:3,extent:v.M.fromJSON(t.extent),spatialReference:n,pixelSize:new M.b({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:s,signal:a}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:s,f:"json"},signal:a}).then((e=>P.default.fromJSON(e.data))).catch((()=>null)),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:s,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),u=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:s,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),f=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:a}).then((e=>e.data)).catch((()=>{})),c=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),h=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:a}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Promise.all([o,l,u,f,c,h]).then((e=>{let s=null;if(t.minValues&&t.minValues.length===t.bandCount){s=[];for(let e=0;e<t.minValues.length;e++)s.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new I.l({width:i,height:r,bandCount:t.bandCount,extent:v.M.fromJSON(t.extent),spatialReference:n,pixelSize:new M.b({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:s,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=i.variables)&&t.length&&i.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;0===t.xmin&&360===t.xmax&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new ye,e.extent=e.transform.forwardTransform(t))}};(0,r.e)([(0,u.y)({type:String,json:{write:!0}})],ge.prototype,"datasetFormat",void 0),(0,r.e)([(0,u.y)()],ge.prototype,"tileType",void 0),ge=(0,r.e)([(0,u.n)("esri.layers.support.rasterDatasets.ImageServerRaster")],ge);var xe=ge;const we=new Map;we.set("Int8","s8"),we.set("UInt8","u8"),we.set("Int16","s16"),we.set("UInt16","u16"),we.set("Int32","s32"),we.set("UInt32","u32"),we.set("Float32","f32"),we.set("Float64","f32"),we.set("Double64","f32");const Ie=new Map;Ie.set("lerc",".lrc"),Ie.set("none",".til"),Ie.set("deflate",".pzp"),Ie.set("jpeg",".jzp");let ve=class extends E{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?(0,o.f)(e.signal):null,r=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:n,files:s}=this._parseHeader(r.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var a;null!=t&&(n.statistics=null!=(a=t.statistics)?a:n.statistics,n.histograms=t.histograms,t.histograms&&!(0,o.r)(n.statistics)&&(n.statistics=(0,_.o)(t.histograms)))}this._set("rasterInfo",n),this._files=s;const l=await this.request(s.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(l.data);let u,f,c=0,h=-1;const{blockWidth:d,blockHeight:p,compression:m}=this.rasterInfo.storageInfo,y=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:g,height:x,bandCount:w}=this.rasterInfo,I=[],v="none"===m?1:w;for(;c<this._storageIndex.length;)h++,u=Math.ceil(g/d/y**h),f=Math.ceil(x/p/y**h),c+=u*f*v*4,I.push({maxRow:f,maxCol:u,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=I,h>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=h),this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){const{blockWidth:n,blockHeight:s,blockBoundary:a,compression:o}=this.rasterInfo.storageInfo,l=a[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:u,pixelType:f}=this.rasterInfo,{ranges:c,actualTileWidth:h,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!c||0===c.length)return null;if(0===c[0].from&&0===c[0].to){const e=new Uint8Array(n*s);return new _.u({width:n,height:s,pixels:null,mask:e,validPixelCount:0})}const{bandIds:p}=this.ioConfig,m="none"===o?1:u,y=[];let g=0;for(g=0;g<m;g++)(!p||p.indexOf[g]>-1)&&y.push(this.request(this._files.data,{range:{from:c[g].from,to:c[g].to},responseType:"array-buffer",signal:r.signal}));const x=await Promise.all(y),w=x.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),I=new Uint8Array(w);let v=0;for(g=0;g<m;g++)I.set(new Uint8Array(x[g].data),v),v+=x[g].data.byteLength;const b="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",S=await this.decodePixelBlock(I.buffer,{width:n,height:s,format:b,pixelType:f});let T=0,C=0;if(h!==n||d!==s){let e=S.mask;if(e)for(g=0;g<s;g++)if(C=g*n,g<d)for(T=h;T<n;T++)e[C+T]=0;else for(T=0;T<n;T++)e[C+T]=0;else for(e=new Uint8Array(n*s),S.mask=e,g=0;g<d;g++)for(C=g*n,T=0;T<h;T++)e[C+T]=1}return S}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,r,n,s,a;if(I.b){for(i=new Uint8Array(e),n=new ArrayBuffer(e.byteLength),r=new Uint8Array(n),s=0;s<e.byteLength/4;s++)for(a=0;a<4;a++)r[4*s+a]=i[4*s+3-a];t=new Uint32Array(n)}else t=new Uint32Array(e);return t}_getTileLocation(e,t,i){const{blockWidth:r,blockHeight:n,pyramidScalingFactor:s,compression:a}=this.rasterInfo.storageInfo,{width:o,height:l,bandCount:u}=this.rasterInfo,f="none"===a?1:u;let c,h,d,p=0,m=0;for(d=0;d<e;d++)m=s**d,c=Math.ceil(o/r/m),h=Math.ceil(l/n/m),p+=c*h;m=s**e,c=Math.ceil(o/r/m),h=Math.ceil(l/n/m),p+=t*c+i,p*=4*f;const y=this._storageIndex.subarray(p,p+4*f);let g=0,x=0;const w=[];for(let e=0;e<f;e++)g=y[4*e+0]*2**32+y[4*e+1],x=g+y[4*e+2]*2**32+y[4*e+3],w.push({from:g,to:x});return{ranges:w,actualTileWidth:i<c-1?r:Math.ceil(o/m)-r*(c-1),actualTileHeight:t<h-1?n:Math.ceil(l/m)-n*(h-1)}}_parseHeader(e){const t=ie(e,"MRF_META/Raster");if(!t)throw new a.s("mrf:open","not a valid MRF format");const i=ie(t,"Size"),r=parseInt(i.getAttribute("x"),10),n=parseInt(i.getAttribute("y"),10),s=parseInt(i.getAttribute("c"),10),o=(re(t,"Compression")||"none").toLowerCase();if(!o||-1===["none","lerc"].indexOf(o))throw new a.s("mrf:open","currently does not support compression "+o);const l=re(t,"DataType")||"UInt8",u=we.get(l);if(null==u)throw new a.s("mrf:open","currently does not support pixel type "+l);const f=ie(t,"PageSize"),c=parseInt(f.getAttribute("x"),10),h=parseInt(f.getAttribute("y"),10),d=ie(t,"DataValues");let p,m;if(d&&(m=d.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map((e=>parseFloat(e))))),ie(e,"MRF_META/CachedSource"))throw new a.s("mrf:open","currently does not support MRF referencing other data files");const g=ie(e,"MRF_META/GeoTags"),x=ie(g,"BoundingBox");if(null==x)throw new a.s("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const w=parseFloat(x.getAttribute("minx")),b=parseFloat(x.getAttribute("miny")),S=parseFloat(x.getAttribute("maxx")),T=parseFloat(x.getAttribute("maxy")),C=re(g,"Projection")||"",R=re(e,"datafile"),_=re(e,"IndexFile");let k;if("LOCAL_CS[]"!==C)if(C.toLowerCase().startsWith("epsg:")){const e=Number(C.slice(5));isNaN(e)||0===e||(k=new y.k({wkid:e}))}else k=fe(C);const P=new v.M(w,b,S,T);P.spatialReference=k;const F=ie(e,"MRF_META/Rsets"),O=parseInt(F&&F.getAttribute("scale")||"2",10),D=new I.s({origin:new M.b({x:P.xmin,y:P.ymax,spatialReference:k}),blockWidth:c,blockHeight:h,pyramidBlockWidth:c,pyramidBlockHeight:h,compression:o,pyramidScalingFactor:O}),B=new M.b({x:(S-w)/r,y:(T-b)/n,spatialReference:k});return{rasterInfo:new I.l({width:r,height:n,extent:P,spatialReference:k,bandCount:s,pixelType:u,pixelSize:B,noDataValue:p,storageInfo:D}),files:{mrf:this.url,index:_||this.url.replace(".mrf",".idx"),data:R||this.url.replace(".mrf",Ie.get(o))}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return he(t)}catch{return null}}};(0,r.e)([(0,u.y)()],ve.prototype,"_files",void 0),(0,r.e)([(0,u.y)()],ve.prototype,"_storageIndex",void 0),(0,r.e)([(0,u.y)({type:String,json:{write:!0}})],ve.prototype,"datasetFormat",void 0),ve=(0,r.e)([(0,u.n)("esri.layers.support.rasterIO.MRFRaster")],ve);var be=ve;const Se=function(e,t){const i=e.get(t);return i&&i.values},Te=function(e,t){const i=e.get(t);return i&&i.values[0]};let Ce=class extends E{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t,i,r;await this.init();const n=e?(0,o.f)(e.signal):null,{data:s}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:n});if(!s)throw new a.s("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:l,firstIFD:u,isBigTiff:f}=(0,I.C)(s),c=[];await this.readIFDs(c,s,l,u,0,f?8:4,n);const h=(0,I.P)(c),{width:d,height:p,tileWidth:m,tileHeight:g,planes:x,pixelType:w,compression:b,firstPyramidLevel:S,maximumPyramidLevel:T,pyramidBlockWidth:C,pyramidBlockHeight:R,tileBoundary:k,affine:P,metadata:F}=h;let O=fe((null==(t=h.extent.spatialReference)?void 0:t.wkt)||(null==(i=h.extent.spatialReference)?void 0:i.wkid)),D=!1;null==O&&(D=!0,O=new y.k({wkid:3857}));const B=new v.M({...h.extent,spatialReference:O}),z=new M.b(B?{x:B.xmin,y:B.ymax,spatialReference:O}:{x:0,y:0}),A=new I.s({blockWidth:m,blockHeight:g,pyramidBlockWidth:C,pyramidBlockHeight:R,compression:b,origin:z,firstPyramidLevel:S,maximumPyramidLevel:T,blockBoundary:k}),E=new M.b({x:(B.xmax-B.xmin)/d,y:(B.ymax-B.ymin)/p,spatialReference:O}),N=F?{BandProperties:F.bandProperties,DataType:F.dataType}:{},L=new I.l({width:d,height:p,bandCount:x,pixelType:w,compression:b,pixelSize:E,storageInfo:A,spatialReference:O,isPseudoSpatialReference:D,keyProperties:N,extent:B,statistics:F?F.statistics:null});if(null!=P&&P.length&&(L.nativeExtent=new v.M({xmin:-.5,ymin:.5-p,xmax:d-.5,ymax:.5,spatialReference:O}),L.transform=new j({polynomialOrder:1,forwardCoefficients:[P[2]+P[0]/2,P[5]-P[3]/2,P[0],P[3],-P[1],-P[4]]}),L.extent=L.transform.forwardTransform(L.nativeExtent),L.pixelSize=new M.b({x:(B.xmax-B.xmin)/d,y:(B.ymax-B.ymin)/p,spatialReference:O}),A.origin.x=-.5,A.origin.y=.5),null==(r=this.ioConfig.skipExtensions)||!r.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var H;if(L.statistics=null!=(H=t.statistics)?H:L.statistics,L.histograms=t.histograms,t.histograms&&!(0,o.r)(L.statistics)&&(L.statistics=(0,_.o)(t.histograms)),t.transform&&!P){L.transform=t.transform,L.nativeExtent=L.extent;const e=L.transform.forwardTransform(L.nativeExtent);L.pixelSize=new M.b({x:(e.xmax-e.xmin)/d,y:(e.ymax-e.ymin)/p,spatialReference:O}),L.extent=e}L.spatialReference||(L.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",L),this._headerInfo={littleEndian:l,isBigTiff:f,ifds:c,...h},!this._headerInfo.isSupported)throw new a.s("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){var n;if(null==(n=this._headerInfo)||!n.isSupported||this.isBlockOutside(e,t,i))return null;const s=this.getTileLocation(e,t,i);if(!s)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:u}=s,f=a.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:r.signal}))),c=await Promise.all(f),h=c.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),d=1===c.length?c[0].data:new ArrayBuffer(h),p=[0],m=[0];if(c.length>1){const e=new Uint8Array(d);for(let t=0,i=0;t<c.length;t++){const r=c[t].data;e.set(new Uint8Array(r),i),p[t]=i,i+=r.byteLength,m[t]=r.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:u,offsets:p,sizes:m},width:y,height:g,planes:null,pixelType:null});let w,I,v;if(o!==y||l!==g){let e=x.mask;if(e)for(w=0;w<g;w++)if(v=w*y,w<l)for(I=o;I<y;I++)e[v+I]=0;else for(I=0;I<y;I++)e[v+I]=0;else for(e=new Uint8Array(y*g),x.mask=e,w=0;w<l;w++)for(v=w*y,I=0;I<o;I++)e[v+I]=1}return x}async readIFDs(e,t,i,r,n,s=4,a){if(!r)return null;(r>=t.byteLength||r<0)&&(t=(await this.request(this.url,{range:{from:r+n,to:r+n+this._bufferSize},responseType:"array-buffer",signal:a})).data,n=r+n,r=0);const o=await this.readIFD(t,i,r,n,I.c.TIFF_TAGS,s,a);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,i,o.nextIFD-n,n,s,a)}async readIFD(e,t,i,r,n=I.c.TIFF_TAGS,s=4,a){if(!e)return null;const o=(0,I.d)(e,t,i,r,n,s);if(o.success){const i=[];if(o.ifd.forEach((e=>{e.values||i.push(e)})),i.length>0){const n=i.map((e=>e.offlineOffsetSize)),s=Math.min.apply(null,n.map((e=>e[0])));if(Math.min.apply(null,n.map((e=>e[0]+e[1])))-s<=this._bufferSize){const{data:n}=await this.request(this.url,{range:{from:s,to:s+this._bufferSize},responseType:"array-buffer",signal:a});e=n,r=s,i.forEach((i=>(0,I.D)(e,t,i,r)))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),n=i.values;if(n&&n.length>4){const s=n[0]+"."+n[1]+"."+n[2],o=await this.readIFD(e,t,i.valueOffset+6-r,r,I.c.GEO_KEYS,2,a);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[s]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:r,to:r+o.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(e=i.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,r,I.c.TIFF_TAGS,4,a)}}getTileLocation(e,t,i){const{firstPyramidLevel:r,blockBoundary:n}=this.rasterInfo.storageInfo,s=0===e?0:e-(r-1),a=this._headerInfo.ifds[s];if(!a)return null;const o=(0,I.O)(a,this._headerInfo),l=Se(a,"TILEOFFSETS");if(void 0===l)return null;const u=Se(a,"TILEBYTECOUNTS"),{minRow:f,minCol:c,maxRow:h,maxCol:d}=n[s];if(t>h||i>d||t<f||i<c)return null;const p=Te(a,"IMAGEWIDTH"),m=Te(a,"IMAGELENGTH"),y=Te(a,"TILEWIDTH"),g=Te(a,"TILELENGTH"),x=o?this.rasterInfo.bandCount:1,w=x*t*(d+1)+i,v=[{from:l[w],to:l[w+x-1]+u[w+x-1]-1}];if(o){let e=!0;for(let t=0;t<x;t++)if(l[w+t]+u[w+t]!==l[w+t+1]){e=!1;break}if(!e)for(let e=0;e<x;e++)v[e]={from:l[w+e],to:l[w+e]+u[w+e]-1}}const b=l[w],S=u[w];return null==b||null==S?null:{ranges:v,ifd:a,actualTileWidth:i===d?p%y:y,actualTileHeight:t===h?m%g:g}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return he(t)}catch{return null}}};(0,r.e)([(0,u.y)()],Ce.prototype,"_files",void 0),(0,r.e)([(0,u.y)()],Ce.prototype,"_headerInfo",void 0),(0,r.e)([(0,u.y)()],Ce.prototype,"_bufferSize",void 0),(0,r.e)([(0,u.y)({type:String,json:{write:!0}})],Ce.prototype,"datasetFormat",void 0),Ce=(0,r.e)([(0,u.n)("esri.layers.support.rasterDatasets.TIFFRaster")],Ce);var Re=Ce;const _e=new Map;function ke(){return{enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}_e.set("CRF",{desc:"Cloud Raster Format",constructor:Q}),_e.set("MRF",{desc:"Meta Raster Format",constructor:be}),_e.set("TIFF",{desc:"GeoTIFF",constructor:Re}),_e.set("RasterTileServer",{desc:"Raster Tile Server",constructor:xe}),_e.set("JPG",{desc:"JPG Raster Format",constructor:pe}),_e.set("PNG",{desc:"PNG Raster Format",constructor:pe}),_e.set("GIF",{desc:"GIF Raster Format",constructor:pe}),_e.set("BMP",{desc:"BMP Raster Format",constructor:pe});let Me=class extends((0,d.t)((0,T.s)((0,S.o)((0,x.l)((0,b.w)((0,p.e)(z((0,l.l)(h.b))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,o.r)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(a.w).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;let i=[new C.y({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const r=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(r){const e=r.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));i=i.concat(e)}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const r=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,n=(0,s.p)(r,i)||void 0;if(null!=n)return n}createPopupTemplate(e){return(0,D.a)({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new a.s("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return _e.forEach(((t,i)=>e.add(i))),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:r}=e;let n=e.datasetFormat;null==n&&t.lastIndexOf(".")&&(n=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===n||"TIF"===n?n="TIFF":"JPG"!==n&&"JPEG"!==n&&"JFIF"!==n||(n="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(n="RasterTileServer");const s={url:t,sourceJSON:r,datasetFormat:n,ioConfig:i||{bandIds:null,sampling:null}};let o,l;if(this.supportedFormats.has(n))return o=_e.get(n).constructor,l=new o(s),await l.open({signal:e.signal}),l;if(n)throw new a.s("rasterfactory:open","not a supported format "+n);const u=Array.from(_e.keys());let f=0;const c=function(){return n=u[f++],n?(o=_e.get(n).constructor,l=new o(s),l.open({signal:e.signal}).then((()=>l)).catch((()=>c()))):null};return c()}static register(e,t,i){_e.has(e.toUpperCase())||_e.set(e.toUpperCase(),{desc:t,constructor:i})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new a.s("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.watch("customParameters",(e=>this.raster.ioConfig.customFetchParameters=e))}};(0,r.e)([(0,u.y)({type:[u.N],json:{write:{overridePolicy:ke}}})],Me.prototype,"bandIds",void 0),(0,r.e)([(0,u.y)({json:{write:{overridePolicy:ke}}}),(0,f.r)(s.o)],Me.prototype,"interpolation",void 0),(0,r.e)([(0,u.y)({json:{write:!0}})],Me.prototype,"multidimensionalDefinition",void 0),(0,r.e)([(0,u.y)(x.f)],Me.prototype,"legendEnabled",void 0),(0,r.e)([(0,u.y)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Me.prototype,"isReference",void 0),(0,r.e)([(0,u.y)({type:["show","hide"]})],Me.prototype,"listMode",void 0),(0,r.e)([(0,u.y)()],Me.prototype,"sourceJSON",void 0),(0,r.e)([(0,u.y)({readOnly:!0})],Me.prototype,"version",void 0),(0,r.e)([(0,u.y)()],Me.prototype,"title",void 0),(0,r.e)([(0,u.y)({readOnly:!0,json:{read:!1}})],Me.prototype,"type",void 0),(0,r.e)([(0,u.y)({type:["ArcGISTiledImageServiceLayer"]})],Me.prototype,"operationalLayerType",void 0),(0,r.e)([(0,u.y)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:ke,writer(e,t,i){t[i]=!e}}}})],Me.prototype,"popupEnabled",void 0),(0,r.e)([(0,u.y)({type:n.M,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:ke}}})],Me.prototype,"popupTemplate",void 0),(0,r.e)([(0,u.y)({readOnly:!0})],Me.prototype,"defaultPopupTemplate",null),(0,r.e)([(0,u.y)({readOnly:!0,type:[C.y]})],Me.prototype,"fields",void 0),(0,r.e)([(0,u.y)({readOnly:!0,type:[C.y]})],Me.prototype,"rasterFields",null),(0,r.e)([(0,u.y)({types:s.d,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:ke},origins:{"web-scene":{types:s.b,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],Me.prototype,"renderer",null),(0,r.e)([(0,c.e)("renderer")],Me.prototype,"readRenderer",null),Me=(0,r.e)([(0,u.n)("esri.layers.ImageryTileLayer")],Me);const Pe=Me}}]);