(self.webpackChunk=self.webpackChunk||[]).push([[1671],{11671:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>Le}),r(33807);var i,n=r(78155),s=r(82906),o=r(80219),a=r(79506),l=r(20215),u=r(88903),p=r(41290),c=r(80987),d=r(73574),m=r(71252),y=r(31531),h=r(4169),f=r(13895),g=r(29126),v=r(25681),w=r(34396),R=r(20736),b=r(47365),x=r(2502),S=r(84935),I=r(71470),N=r(2903),O=r(52737),T=r(91236),_=r(89710),P=r(98548),j=r(18143),F=r(56803),C=r(92858),D=r(54223),M=r(51218),A=r(21793),V=r(15576),J=r(28941),L=r(19438),z=r(15022),E=r(99987);r(40130),r(52957),r(6585),r(3621),r(63358),r(62121),r(81135),r(94527),r(17762),r(60816),r(61888),r(29832),r(31516),r(52109),r(26779),r(84581),r(48643),r(30316),r(4618),r(65352),r(11838),r(9612),r(39068),r(3629),r(77606),r(5250),r(49878),r(84271),r(80657),r(67079),r(85570),r(80136),r(91507),r(85289),r(98843),r(91790),r(29831),r(8725),r(76326),r(56416);const q=new Set(["raster","raster2","dem","fillraster"]),k=new Set(["rasters"]),U=e=>e&&e.rasterFunction?W.fromJSON(e):e,B=e=>e&&e instanceof W?e.toJSON():e,Q=e=>(null==e?void 0:e.functionName)&&!e.declaredClass,H=e=>Q(e)?new W(e):e;var G;!function(e){e[e.MOSAIC=0]="MOSAIC",e[e.GROUP=1]="GROUP",e[e.ITEM=2]="ITEM"}(G||(G={}));let W=i=class extends n.a{constructor(e){super(e),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.description=null,this.functionDefinition=null,this.thumbnail=null}set functionArguments(e){if(e){const t=Object.keys(e);if(t.some((t=>q.has(t.toLowerCase())&&Q(e[t])))||t.some((t=>k.has(t.toLowerCase())&&Array.isArray(e[t])&&e[t].some((e=>Q(e)))))){e=(0,o.y)(e);for(const r of t)q.has(r.toLowerCase())?e[r]=H(e[r]):k.has(r.toLowerCase())&&Array.isArray(e[r])&&(e[r]=e[r].map((e=>H(e))))}}this._set("functionArguments",e)}readFunctionArguments(e,t){return(e=>{if(null==e)return null;e=(0,o.y)(e);const t={};for(const r of Object.keys(e))q.has(r.toLowerCase())?t[r]=U(e[r]):k.has(r.toLowerCase())&&Array.isArray(e[r])?t[r]=e[r].map(U):t[r]=e[r];return t})(t.arguments||t.rasterFunctionArguments)}writeFunctionArguments(e,t,r){const i={};for(const t of Object.keys(e))q.has(t.toLowerCase())?i[t]=B(e[t]):k.has(t.toLowerCase())&&Array.isArray(e[t])?i[t]=e[t].map(B):i[t]=B(e[t]);this.functionDefinition?t.arguments=i:t[r]=i}readFunctionName(e,t){const r=t.rasterFunctionInfos;return t.name||(r&&r.length&&"None"!==r[0].name?r[0].name:t.rasterFunction)}writeFunctionName(e,t,r){this.functionDefinition?t.name=e:t[r]=e}readFunctionType(e){return G[e]}writeFunctionType(e,t,r){t[r]=G[e]}clone(){return new i({functionName:this.functionName,functionArguments:(0,o.y)(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,description:this.description,functionType:this.functionType,functionDefinition:this.functionDefinition,thumbnail:this.thumbnail})}};(0,n.e)([(0,u.y)({json:{type:Object,write:{target:"rasterFunctionArguments"}}})],W.prototype,"functionArguments",null),(0,n.e)([(0,h.e)("functionArguments",["rasterFunctionArguments","arguments"])],W.prototype,"readFunctionArguments",null),(0,n.e)([(0,n.o)("functionArguments")],W.prototype,"writeFunctionArguments",null),(0,n.e)([(0,u.y)({json:{type:String,write:{target:"rasterFunction"}}})],W.prototype,"functionName",void 0),(0,n.e)([(0,h.e)("functionName",["rasterFunction","rasterFunctionInfos","name"])],W.prototype,"readFunctionName",null),(0,n.e)([(0,n.o)("functionName")],W.prototype,"writeFunctionName",null),(0,n.e)([(0,g.r)({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),(0,u.y)({json:{default:"unknown"}})],W.prototype,"outputPixelType",void 0),(0,n.e)([(0,u.y)({type:String,json:{read:!0,write:!0}})],W.prototype,"variableName",void 0),(0,n.e)([(0,u.y)({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],W.prototype,"description",void 0),(0,n.e)([(0,u.y)({json:{origins:{"web-document":{read:!1,write:!1}}}})],W.prototype,"functionType",void 0),(0,n.e)([(0,h.e)("functionType")],W.prototype,"readFunctionType",null),(0,n.e)([(0,n.o)("functionType")],W.prototype,"writeFunctionType",null),(0,n.e)([(0,u.y)({type:Object,json:{read:{source:"function"},write:{target:"function"},origins:{"web-document":{read:!1,write:!1}}}})],W.prototype,"functionDefinition",void 0),(0,n.e)([(0,u.y)({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],W.prototype,"thumbnail",void 0),W=i=(0,n.e)([(0,u.n)("esri.layers.support.RasterFunction")],W);var X=W;const $={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},Y={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},K=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function Z(e){return K.has(e.type)}function ee(e,t){if(!e||!t)return(0,o.y)(e||t);const r=(0,o.y)(e);return"none"!==t.functionName.toLowerCase()&&(te(r.functionArguments).Raster=t),r}function te(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?te(t.functionArguments):e}const re={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function ie(e,t){const r=$[String(t).toLowerCase()];return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function ne(e){if(!e)return;const{fields:t}=e,r=t&&t.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return r&&r.name}function se(e){const t=[];return e.forEach((e=>{const r=e;if(Array.isArray(r))t.push(r);else{if(null==r.min||null==r.max)return;const e=[r.min,r.max,r.avg||0,r.stddev||0];t.push(e)}})),t}var oe;const ae=(0,y.s)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),le=(0,y.s)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let ue=oe=class extends n.a{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return function(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;case"none":default:t="esriMosaicNone"}return le.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const r=t.mosaicOperation,i=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),n=r||(i?ae.toJSON(i):null);return ae.fromJSON(n)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`}clone(){return new oe({ascending:this.ascending,itemRenderingRule:(0,o.y)(this.itemRenderingRule),lockRasterIds:(0,o.y)(this.lockRasterIds),method:this.method,multidimensionalDefinition:(0,o.y)(this.multidimensionalDefinition),objectIds:(0,o.y)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:(0,o.y)(this.viewpoint),where:this.where})}};(0,n.e)([(0,u.y)({type:Boolean,json:{write:!0}})],ue.prototype,"ascending",void 0),(0,n.e)([(0,h.e)("ascending",["ascending","sortAscending"])],ue.prototype,"readAscending",null),(0,n.e)([(0,u.y)({type:X,json:{write:!0}})],ue.prototype,"itemRenderingRule",void 0),(0,n.e)([(0,u.y)({type:[u.N],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],ue.prototype,"lockRasterIds",void 0),(0,n.e)([(0,u.y)({type:String,json:{type:le.jsonValues,write:{target:"mosaicMethod",writer:le.write}}})],ue.prototype,"method",void 0),(0,n.e)([(0,h.e)("method",["mosaicMethod","defaultMosaicMethod"])],ue.prototype,"readMethod",null),(0,n.e)([(0,u.y)({type:[m.a],json:{write:!0}})],ue.prototype,"multidimensionalDefinition",void 0),(0,n.e)([(0,u.y)({type:[u.N],json:{name:"fids",write:!0}})],ue.prototype,"objectIds",void 0),(0,n.e)([(0,u.y)({json:{type:ae.jsonValues,read:{reader:ae.read},write:{target:"mosaicOperation",writer:ae.write}}})],ue.prototype,"operation",void 0),(0,n.e)([(0,h.e)("operation",["mosaicOperation","mosaicOperator"])],ue.prototype,"readOperation",null),(0,n.e)([(0,u.y)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],ue.prototype,"sortField",void 0),(0,n.e)([(0,u.y)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],ue.prototype,"sortValue",void 0),(0,n.e)([(0,R.c)("sortValue")],ue.prototype,"castSortValue",null),(0,n.e)([(0,u.y)({type:R.b,json:{write:!0}})],ue.prototype,"viewpoint",void 0),(0,n.e)([(0,u.y)({type:String,json:{write:!0}})],ue.prototype,"where",void 0),ue=oe=(0,n.e)([(0,u.n)("esri.layers.support.MosaicRule")],ue);var pe=ue;let ce=class extends n.a{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("renderer"),e.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new pe({where:r})),t}get renderingRule(){const e=this.layer;let t=e.renderingRule;const r=e.pixelFilter,i=!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1;return t=this._addResampleRasterFunction(t),i&&!r&&(t=this.combineRendererWithRenderingRule()),t}combineRendererWithRenderingRule(){var e;const t=this.layer,{rasterInfo:r,renderingRule:i,renderer:n}=t;return n&&Z(n)?ee(function(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const r=new X;r.functionName="Stretch";const i=re[m.n.toJSON(e.stretchType)],n="u8",s={StretchType:i,Statistics:se(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(s.Min=e.outputMin),null!=e.outputMax&&(s.Max=e.outputMax),i===re.standardDeviation?(s.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType=n):i===re.percentClip?(s.MinPercent=e.minPercent,s.MaxPercent=e.maxPercent,r.outputPixelType=n):i===re.minMax?r.outputPixelType=n:i===re.sigmoid&&(s.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=s,r.variableName="Raster",e.colorRamp){const i=e.colorRamp,n=new X,s=(0,v.n)(i);return s?n.functionArguments={colorRamp:s}:!t.convertColorRampToColormap||"algorithmic"!==i.type&&"multipart"!==i.type?n.functionArguments={colorRamp:e.colorRamp.toJSON()}:n.functionArguments={Colormap:(0,v.f)(i,256)},n.variableName="Raster",n.functionName="Colormap",n.functionArguments.Raster=r,n}return r}(e,t);case"class-breaks":return function(e,t){const r=[],i=[],n=[],s=[],o=1e-6,{pixelType:a,rasterAttributeTable:l}=t,u=l&&l.features,p=ne(l);if(u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,r)=>{const i=t.symbol.color;let n;i.a&&u.forEach((o=>{n=o.attributes[e.field],(n>=t.minValue&&n<t.maxValue||r===e.classBreakInfos.length-1&&n>=t.minValue)&&s.push([o.attributes[p],i.r,i.g,i.b])}))}));const t=a?ie(s,a):s,r=new X;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=t,r.variableName="Raster",r}e.classBreakInfos.forEach(((e,t)=>{const a=e.symbol&&e.symbol.color;a.a?(0===t?r.push(e.minValue,e.maxValue+o):r.push(e.minValue+o,e.maxValue+o),i.push(t),s.push([t,a.r,a.g,a.b])):n.push(e.minValue,e.maxValue)}));const c=a?ie(s,a):s,d=new X;d.functionName="Remap",d.functionArguments={InputRanges:r,OutputValues:i,NoDataRanges:n},d.variableName="Raster";const m=new X;return m.functionName="Colormap",m.functionArguments={Colormap:c,Raster:d},m}(e,t);case"unique-value":return function(e,t){const r=[],{pixelType:i,rasterAttributeTable:n}=t,s=n&&n.features,o=ne(n);let a=!1;if(e.uniqueValueInfos&&e.uniqueValueInfos.forEach((t=>{const i=t.symbol.color;null!=i&&i.a&&(e.field!==o&&s?s&&s.forEach((n=>{String(n.attributes[e.field])===String(t.value)&&r.push([n.attributes[o],i.r,i.g,i.b])})):isNaN(+t.value)?a=!0:r.push([+t.value,i.r,i.g,i.b]))})),a)return null;const l=i&&r.length>0?ie(r,i):r,u=new X;return u.functionName="Colormap",u.functionArguments={},u.functionArguments.Colormap=l,u.variableName="Raster",u}(e,t);case"raster-colormap":return function(e,t){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:i}=t,n=i?ie(r,i):r,s=new X;return s.functionName="Colormap",s.functionArguments={},s.functionArguments.Colormap=n,s}(e,t);case"vector-field":return function(e,t){const r=new X;r.functionName="VectorFieldRenderer";const{dataType:i,bandProperties:n}=t,s="vector-uv"===i;let o,a;n&&2===n.length&&(o=n.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),a=n.map((e=>e.BandName.toLowerCase())).indexOf("direction")),-1!==o&&null!==o||(o=0,a=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.filter((e=>"Magnitude"===e.field))[0]:new w.b,c={magnitudeBandID:o,directionBandID:a,isUVComponents:s,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:Y[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};return r.functionArguments=c,r}(e,t);case"raster-shaded-relief":return function(e,t){if("elevation"!==t.dataType)return new X;const r=new X;r.functionName="Hillshade";const i="traditional"===e.hillshadeType?0:1,n="none"===e.scalingType?1:3,s={HillshadeType:i,SlopeType:n,ZFactor:e.zFactor};return 0===i&&(s.Azimuth=e.azimuth,s.Altitude=e.altitude),3===n&&(s.PSPower=e.pixelSizePower,s.PSZFactor=e.pixelSizeFactor),r.functionArguments=s,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",s.Colormap=(0,v.f)(e.colorRamp,256)),r}(e,t)}}(n,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandProperties:null==(e=r.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:t.version<10.6}),i):i}_addResampleRasterFunction(e){var t;if("vector-field"!==(null==(t=this.layer.renderer)?void 0:t.type)||"Resample"===(null==e?void 0:e.functionName))return e;const r="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10;return ee(new X({functionName:"Resample",functionArguments:{ResamplingType:r,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}}),e)}};(0,n.e)([(0,u.y)()],ce.prototype,"layer",void 0),(0,n.e)([(0,u.y)({json:{write:!0}})],ce.prototype,"adjustAspectRatio",void 0),(0,n.e)([(0,n.o)("adjustAspectRatio")],ce.prototype,"writeAdjustAspectRatio",null),(0,n.e)([(0,u.y)({json:{write:!0}}),(0,s.o)("layer.bandIds")],ce.prototype,"bandIds",void 0),(0,n.e)([(0,u.y)({json:{write:!0}})],ce.prototype,"compression",void 0),(0,n.e)([(0,u.y)({json:{write:!0}}),(0,s.o)("layer.compressionQuality")],ce.prototype,"compressionQuality",void 0),(0,n.e)([(0,n.o)("compressionQuality")],ce.prototype,"writeCompressionQuality",null),(0,n.e)([(0,u.y)({json:{write:!0}}),(0,s.o)("layer.compressionTolerance")],ce.prototype,"compressionTolerance",void 0),(0,n.e)([(0,n.o)("compressionTolerance")],ce.prototype,"writeCompressionTolerance",null),(0,n.e)([(0,u.y)({json:{write:!0}}),(0,s.o)("layer.format")],ce.prototype,"format",void 0),(0,n.e)([(0,u.y)({type:String,json:{read:{reader:m.o.read},write:{writer:m.o.write}}}),(0,s.o)("layer.interpolation")],ce.prototype,"interpolation",void 0),(0,n.e)([(0,u.y)({json:{write:!0}}),(0,s.o)("layer.noData")],ce.prototype,"noData",void 0),(0,n.e)([(0,u.y)({type:String,json:{read:{reader:m.i.read},write:{writer:m.i.write}}}),(0,s.o)("layer.noDataInterpretation")],ce.prototype,"noDataInterpretation",void 0),(0,n.e)([(0,u.y)({json:{write:!0}})],ce.prototype,"pixelType",void 0),(0,n.e)([(0,u.y)({json:{write:!0}})],ce.prototype,"lercVersion",void 0),(0,n.e)([(0,n.o)("lercVersion")],ce.prototype,"writeLercVersion",null),(0,n.e)([(0,u.y)({type:Number})],ce.prototype,"version",null),(0,n.e)([(0,u.y)({json:{write:!0}})],ce.prototype,"mosaicRule",null),(0,n.e)([(0,u.y)({json:{write:!0}})],ce.prototype,"renderingRule",null),ce=(0,n.e)([(0,u.n)("esri.layers.mixins.ExportImageServiceParameters")],ce);let de=class extends n.a{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,n.e)([(0,u.y)({json:{write:!0}})],de.prototype,"catalogItemVisibilities",void 0),(0,n.e)([(0,u.y)({type:O.default,json:{write:!0}})],de.prototype,"catalogItems",void 0),(0,n.e)([(0,u.y)({type:R.b,json:{write:!0}})],de.prototype,"location",void 0),(0,n.e)([(0,u.y)({json:{write:!0}})],de.prototype,"name",void 0),(0,n.e)([(0,u.y)({json:{write:!0}})],de.prototype,"objectId",void 0),(0,n.e)([(0,u.y)({json:{write:!0}})],de.prototype,"processedValues",void 0),(0,n.e)([(0,u.y)({json:{write:!0}})],de.prototype,"properties",void 0),(0,n.e)([(0,u.y)({json:{write:!0}})],de.prototype,"value",void 0),de=(0,n.e)([(0,u.n)("esri.rest.support.ImageIdentifyResult")],de);var me=de;let ye=class extends n.a{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,n.e)([(0,u.y)({json:{write:!0}})],ye.prototype,"attributes",void 0),(0,n.e)([(0,u.y)({type:R.b,json:{write:!0}})],ye.prototype,"location",void 0),(0,n.e)([(0,u.y)({json:{write:!0}})],ye.prototype,"locationId",void 0),(0,n.e)([(0,u.y)({json:{write:!0}})],ye.prototype,"rasterId",void 0),(0,n.e)([(0,u.y)({json:{write:!0}})],ye.prototype,"resolution",void 0),(0,n.e)([(0,u.y)({json:{write:!0}})],ye.prototype,"pixelValue",void 0),ye=(0,n.e)([(0,u.n)("esri.rest.support.ImageSample")],ye);var he=ye;let fe=class extends n.a{constructor(){super(...arguments),this.samples=null}};(0,n.e)([(0,u.y)({type:[he],json:{write:!0}})],fe.prototype,"samples",void 0),fe=(0,n.e)([(0,u.n)("esri.rest.support.ImageSampleResult")],fe);var ge,ve=fe;function we(e){const t=null==e?void 0:e.time;if(t&&(null!=t.start||null!=t.end)){const r=[];null!=t.start&&r.push(t.start),null!=t.end&&-1===r.indexOf(t.end)&&r.push(t.end),e.time=r.join(",")}}async function Re(e,t,r){const i=(0,N.e)(e),n=t.geometry?[t.geometry]:[],s=await(0,I.L)(n),a=t.toJSON();we(a);const l=s&&s[0];(0,o.r)(l)&&(a.geometry=l.toJSON());const u=(0,N.n)({...i.query,f:"json",...a});return(0,N.r)(u,r)}async function be(e,t,r){var i,n;const s=t.toJSON();we(s),null!=(i=s.outFields)&&i.length&&(s.outFields=s.outFields.join(","));const a=await(0,I.L)(t.geometry),l=null==a?void 0:a[0];(0,o.r)(l)&&(s.geometry=l.toJSON());const u=(0,N.e)(e),p=(0,N.n)({...u.query,f:"json",...s}),d=(0,N.r)(p,r),{data:m}=await(0,c.L)(`${u.path}/getSamples`,d),y=null==m||null==(n=m.samples)?void 0:n.map((e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map((e=>Number(e)));return{...e,pixelValue:t}}));return ve.fromJSON({samples:y})}let xe=ge=class extends n.a{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,_.d)(e),t[r]=e.toJSON())}clone(){return new ge((0,o.y)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};(0,n.e)([(0,u.y)({types:c.e,json:{read:_.p}})],xe.prototype,"geometry",void 0),(0,n.e)([(0,n.o)("geometry")],xe.prototype,"writeGeometry",null),(0,n.e)([(0,u.y)({type:pe,json:{write:!0}})],xe.prototype,"mosaicRule",void 0),(0,n.e)([(0,u.y)({type:X,json:{write:!0}})],xe.prototype,"renderingRule",void 0),(0,n.e)([(0,u.y)({type:R.b,json:{write:!0}})],xe.prototype,"pixelSize",void 0),(0,n.e)([(0,u.y)({json:{write:!0}})],xe.prototype,"raster",void 0),(0,n.e)([(0,u.y)({type:T.y,json:{read:{source:"time"},write:{target:"time"}}})],xe.prototype,"timeExtent",void 0),xe=ge=(0,n.e)([(0,u.n)("esri.rest.support.ImageHistogramParameters")],xe);var Se,Ie=xe;let Ne=Se=class extends n.a{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,_.d)(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=pe.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=X.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}writeRenderingRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}writeRenderingRules(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((e=>e.toJSON()))))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e))}writeTimeExtent(e,t,r){if(null!=e){const i=(0,o.r)(e.start)?e.start.getTime():null,n=(0,o.r)(e.end)?e.end.getTime():null;t[r]=null!=i?null!=n?`${i},${n}`:`${i}`:null}}clone(){return new Se((0,o.y)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,n.e)([(0,u.y)({json:{write:!0}})],Ne.prototype,"geometry",void 0),(0,n.e)([(0,n.o)("geometry")],Ne.prototype,"writeGeometry",null),(0,n.e)([(0,u.y)({type:pe,json:{write:!0}})],Ne.prototype,"mosaicRule",null),(0,n.e)([(0,n.o)("mosaicRule")],Ne.prototype,"writeMosaicRule",null),(0,n.e)([(0,u.y)({type:X,json:{write:!0}})],Ne.prototype,"renderingRule",null),(0,n.e)([(0,n.o)("renderingRule")],Ne.prototype,"writeRenderingRule",null),(0,n.e)([(0,u.y)({type:[X],json:{write:!0}})],Ne.prototype,"renderingRules",void 0),(0,n.e)([(0,n.o)("renderingRules")],Ne.prototype,"writeRenderingRules",null),(0,n.e)([(0,u.y)({type:R.b,json:{write:!0}})],Ne.prototype,"pixelSize",void 0),(0,n.e)([(0,n.o)("pixelSize")],Ne.prototype,"writePixelSize",null),(0,n.e)([(0,u.y)({type:Boolean,json:{write:!0}})],Ne.prototype,"returnGeometry",void 0),(0,n.e)([(0,u.y)({type:Boolean,json:{write:!0}})],Ne.prototype,"returnCatalogItems",void 0),(0,n.e)([(0,u.y)({type:Boolean,json:{write:!0}})],Ne.prototype,"returnPixelValues",void 0),(0,n.e)([(0,u.y)({type:Number,json:{write:!0}})],Ne.prototype,"maxItemCount",void 0),(0,n.e)([(0,u.y)({type:T.y,json:{write:{target:"time"}}})],Ne.prototype,"timeExtent",void 0),(0,n.e)([(0,n.o)("timeExtent")],Ne.prototype,"writeTimeExtent",null),(0,n.e)([(0,u.y)({json:{write:!0}})],Ne.prototype,"raster",void 0),(0,n.e)([(0,u.y)({json:{write:!0}})],Ne.prototype,"viewId",void 0),Ne=Se=(0,n.e)([(0,u.n)("esri.rest.support.ImageIdentifyParameters")],Ne);var Oe,Te=Ne;let _e=Oe=class extends n.a{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,_.d)(e),t[r]=e.toJSON())}set locations(e){if(null!=e&&e.length){const t=new P.u({spatialReference:e[0].spatialReference});t.points=e.map((e=>[e.x,e.y])),this._set("locations",e),this.geometry=t}}clone(){return new Oe((0,o.y)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};(0,n.e)([(0,u.y)({types:c.e,json:{read:_.p}})],_e.prototype,"geometry",void 0),(0,n.e)([(0,n.o)("geometry")],_e.prototype,"writeGeometry",null),(0,n.e)([(0,u.y)({type:String,json:{type:m.o.jsonValues,read:m.o.read,write:m.o.write}})],_e.prototype,"interpolation",void 0),(0,n.e)([(0,u.y)({type:pe,json:{write:!0}})],_e.prototype,"mosaicRule",void 0),(0,n.e)([(0,u.y)({type:[String],json:{write:!0}})],_e.prototype,"outFields",void 0),(0,n.e)([(0,u.y)({type:R.b,json:{write:!0}})],_e.prototype,"pixelSize",void 0),(0,n.e)([(0,u.y)({type:String,json:{write:!0}})],_e.prototype,"raster",void 0),(0,n.e)([(0,u.y)({type:Boolean,json:{write:!0}})],_e.prototype,"returnFirstValueOnly",void 0),(0,n.e)([(0,u.y)({type:Number,json:{write:!0}})],_e.prototype,"sampleDistance",void 0),(0,n.e)([(0,u.y)({type:Number,json:{write:!0}})],_e.prototype,"sampleCount",void 0),(0,n.e)([(0,u.y)({type:Number,json:{write:!0}})],_e.prototype,"sliceId",void 0),(0,n.e)([(0,u.y)({type:T.y,json:{read:{source:"time"},write:{target:"time"}}})],_e.prototype,"timeExtent",void 0),_e=Oe=(0,n.e)([(0,u.n)("esri.rest.support.ImageSampleParameters")],_e);var Pe=_e;let je=class extends N.p{execute(e,t){return async function(e,t,r){const i=(0,N.e)(e),n=t.geometry?[t.geometry]:[];return(0,I.L)(n).then((e=>{const n=t.toJSON(),s=e&&e[0];(0,o.r)(s)&&(n.geometry=JSON.stringify(s.toJSON()));const a=(0,N.n)({...i.query,f:"json",...n}),l=(0,N.r)(a,r);return(0,c.L)(i.path+"/identify",l)})).then((e=>me.fromJSON(e.data)))}(this.url,e,t)}};je=(0,n.e)([(0,u.n)("esri.tasks.ImageIdentifyTask")],je);var Fe=je;const Ce=o.n.getLogger("esri.layers.mixins.ArcGISImageService"),De=(0,y.s)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Me=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Ae=(0,u.H)(u.u,{min:0,max:255}),Ve=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._symbolizer=null,this._defaultServiceMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.renderer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=null}initialize(){this._set("exportImageServiceParameters",new ce({layer:this}))}readDefaultServiceMosaicRule(e,t){return pe.fromJSON(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos.length<1||this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)})),e}get queryTask(){return new F.Q({url:this.url})}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new x.e(this.fields):null}set format(e){e&&Me.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=pe.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){return pe.fromJSON(e||t.mosaicRule||t)}writeMosaicRule(e,t,r){let i=this.mosaicRule;const n=this.definitionExpression;i?n&&n!==i.where&&(i=i.clone(),i.where=n):n&&(i=new pe({where:n})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=Ae(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?(0,c.U)(this.url):null}readRenderer(e,t,r){var i,n;const s=null==t||null==(i=t.layerDefinition)||null==(n=i.drawingInfo)?void 0:n.renderer,o=(0,m.p)(s,r);return null==o?null:("vector-field"===o.type&&t.symbolTileSize&&!s.symbolTileSize&&(o.symbolTileSize=t.symbolTileSize),Z(o)||Ce.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),o)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new b.y({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new b.y({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new b.y({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let n=this.fields?(0,o.y)(this.fields):[];n.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&n.push(t),this.version>=10.4&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&n.push(i),this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{n.push(new b.y({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(n.push(new b.y({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),n.push(new b.y({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const s=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(s&&s.length>0){const t=s.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const r=(0,o.y)(t);return r.name=e+t.name,r}));n=n.concat(t)}return n}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=X.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?X.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON())}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?C.k.fromJSON(r):null}readPixelType(e){return De.fromJSON(e)||e}writePixelType(e,t,r){((0,o.t)(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=De.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),n=this._rasterJobHandler.instance,{bandIds:s}=this;if(n){i&&(this._symbolizer.bind(),await n.updateSymbolizer(this._symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const o=await n.symbolize({bandIds:s,...e},t);r={extent:e.extent,pixelBlock:o}}else r={extent:e.extent,pixelBlock:this._symbolizer.symbolize({bandIds:s,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeHistograms)throw new l.s("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=(0,u.B)(Ie,e).clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),async function(e,t,r){const i=await Re(e,t,r),n=(0,N.e)(e),{data:s}=await(0,c.L)(`${n.path}/computeHistograms`,i);return{histograms:s.histograms}}(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new l.s("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=(0,u.B)(Ie,e).clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),async function(e,t,r){const i=await Re(e,t,r),n=(0,N.e)(e),{data:s}=await(0,c.L)(`${n.path}/computeStatisticsHistograms`,i),{statistics:o}=s;return null!=o&&o.length&&o.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:o,histograms:s.histograms}}(this.url,e,this._getRequestOptions(t))}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return Promise.reject(new l.s("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const n=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return(0,l.q)(n).then((n=>{n&&(this.rasterInfo=n);const s={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(s)}))}fetchKeyProperties(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return(0,c.L)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>e.data))}fetchRasterAttributeTable(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?Promise.reject(new l.s("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,c.L)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>O.default.fromJSON(e.data)))}async getCatalogItemRasterInfo(e,t){const r=(0,c.L)(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t}).then((e=>e.data)),i=(0,c.L)(this.parsedUrl.path+"/"+e+"/info/keyProperties",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>{})),n=await Promise.all([r,i]);if(!n[0])return;const s=P.M.fromJSON(n[0].extent),o=n[0].statistics?n[0].statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))):null;return new v.l({bandCount:n[0].bandCount,extent:s,spatialReference:s.sr,pixelSize:new R.b({x:n[0].pixelSizeX,y:n[0].pixelSizeY,spatialReference:s.sr}),pixelType:n[0].pixelType.toLowerCase(),statistics:o,histograms:n[0].histograms,keyProperties:n[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:r}=await(0,c.L)(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let n=null;try{n=(await(0,c.L)(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!n||!n.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const s=this.version>=10.7?(0,c.L)(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},o=n.spatialReference,a={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[n]}),inSR:o.wkid||JSON.stringify(o),outSR:"0:"+e},l=(0,c.L)(this.parsedUrl.path+"/project",{query:this._getQueryParams(a),...t}).then((e=>e.data)).catch((()=>({}))),u=(n.xmin+n.xmax)/2,p=(n.ymax-n.ymin)/6,d=n.ymin+p,m=[];for(let e=0;e<5;e++)m.push({x:u,y:d+p*e});const y={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:m}),inSR:o.wkid||JSON.stringify(o),outSR:"0:"+e},h=(0,c.L)(this.parsedUrl.path+"/project",{query:this._getQueryParams(y),...t}).then((e=>e.data)).catch((()=>({}))),f=await Promise.all([s,l,h]);let g=f[0].ipxf;if(null==g){var v,w,R;const e=null==(v=i.geodataXform)?void 0:v.xf_0;"topup"===(null==e||null==(w=e.name)?void 0:w.toLowerCase())&&6===(null==e||null==(R=e.coefficients)?void 0:R.length)&&(g={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const b=P.M.fromJSON(f[1]&&f[1].geometries&&f[1].geometries[0]);b&&(b.spatialReference=new C.k({wkid:0,imageCoordinateSystem:i}));const x=f[2].geometries?f[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],S=x.length;if(S<3)return{ics:i,icsToPixelTransform:g,icsExtent:b,northDirection:null};let I=0,N=0,O=0,T=0;for(let e=0;e<S;e++)I+=x[e].x,N+=x[e].y,O+=x[e].x*x[e].x,T+=x[e].x*x[e].y;const _=(S*T-I*N)/(S*O-I*I);let j=0;const F=x[4].x>x[0].x,D=x[4].y>x[0].y;return _===1/0?j=D?90:270:0===_?j=F?0:180:_>0?j=F?180*Math.atan(_)/Math.PI:180*Math.atan(_)/Math.PI+180:_<0&&(j=D?180+180*Math.atan(_)/Math.PI:360+180*Math.atan(_)/Math.PI),{ics:i,icsToPixelTransform:g,icsExtent:b,northDirection:j}}async generateRasterInfo(e,t){if((!e||"none"===e.functionName.toLowerCase()||this._isVectorFieldResampleFunction(e))&&(0,o.r)(this.serviceRasterInfo))return this.serviceRasterInfo;const r=function(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return r?r.join("/"):null}(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return await i}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,i){const n=(e=e.clone().shiftCentralMeridian()).spatialReference;let s;if(n.imageCoordinateSystem){const{id:e,referenceServiceName:t}=n.imageCoordinateSystem;s=null!=e?t?this.parsedUrl.path.toLowerCase().indexOf("/"+t.toLowerCase()+"/")>-1?"0:"+e:JSON.stringify({icsid:e,icsns:t}):"0:"+e:JSON.stringify({ics:n.imageCoordinateSystem})}else s=n.wkid||JSON.stringify(n.toJSON());(0,o.r)(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const a=this.exportImageServiceParameters.toJSON(),{bandIds:l,noData:u,mosaicRule:p}=a;let{renderingRule:c}=a;if(l instanceof Array&&l.length>0&&!this.renderingRule?a.bandIds=l.join(","):a.bandIds=void 0,null!=l&&l.length&&this.renderingRule)if("Colormap"===c.rasterFunction){const e=new X({functionName:"ExtractBand",functionArguments:{BandIds:l,raster:c.rasterFunctionArguments.Raster}});c.rasterFunctionArguments.Raster=e}else c=new X({functionName:"ExtractBand",functionArguments:{BandIds:l,raster:c}});u instanceof Array&&u.length>0&&(a.noData=u.join(","));const d=this.timeInfo;p&&p.multidimensionalDefinition&&i&&d&&d.startField&&(p.multidimensionalDefinition=p.multidimensionalDefinition.filter((e=>e.dimensionName!==d.startField))),a.mosaicRule=p&&JSON.stringify(p),a.renderingRule=c&&JSON.stringify(c);const m={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?m.time=""+e:null==e&&null==t||(m.time=`${null==e?"null":e},${null==t?"null":t}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:s,imageSR:s,size:t+","+r,...a,...m}}async getSamples(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsGetSamples)throw new l.s("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,u.B)(Pe,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),be(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new l.s("imagery-layer:query-rasters","query operation is not supported on the input image service");e=(0,u.B)(Te,e).clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),new Fe({url:this.url}).execute(e,this._getRequestOptions(t))}async queryRasters(e,t){var r;if(await this._fetchCapabilities(null==(r=t)?void 0:r.signal),!this.capabilities.operations.supportsQuery)throw new l.s("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=(0,u.B)(j.b,e),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),this.queryTask.execute(e,t)}queryVisibleRasters(e,t){if(!e)return Promise.reject(new l.s("imagery-layer: query-visible-rasters","missing query parameter"));const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:n,showNoDataRecords:s}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let a=!1,u=null,p=null;const c="raster.servicepixelvalue",d=this.rasterFunctionNamesIndex;if((0,o.r)(e.outFields)&&(a=e.outFields.some((e=>-1===e.toLowerCase().indexOf(c))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().indexOf(c)>-1&&e.length>c.length)).map((e=>{const t=e.slice(c.length+1);return[this._updateRenderingRulesFunctionName(t,d),t]}));u=t.map((e=>new X({functionName:e[0]}))),p=t.map((e=>e[1])),0===u.length?this.renderingRule?(u.push(this.renderingRule),p.push(this.renderingRule.functionName)):u=null:this.renderingRule&&!u.some((e=>e.functionName===this.renderingRule.functionName))&&(u.push(this.renderingRule),p.push(this.renderingRule.functionName))}const m=(0,o.t)(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),y=this._getQueryParams({geometry:e.geometry,timeExtent:e.timeExtent||this.timeExtent,mosaicRule:this.exportImageServiceParameters.mosaicRule,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:u,pixelSize:r,returnCatalogItems:a,returnGeometry:m,raster:this.raster,maxItemCount:n?1:null});delete y.f;const h=new Te(y),f=new Fe({url:this.url}),g=this.generateRasterInfo(this.renderingRule);return new Promise((r=>{g.then((()=>{f.execute(h,{signal:null==t?void 0:t.signal,query:{...this.customParameters}}).then((t=>{const n=e.outFields;if(a&&!m&&t.catalogItems&&t.catalogItems.features&&t.catalogItems.features.length>0){const o=this.objectIdField||"ObjectId",a=t.catalogItems.features,u=a.map((e=>e.attributes&&e.attributes[o])),c=new j.b({objectIds:u,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[o]});return this.queryRasters(c).then((l=>{l&&l.features&&l.features.length>0&&l.features.forEach((t=>{a.forEach((r=>{r.attributes[o]===t.attributes[o]&&(r.geometry=new P.j(t.geometry),r.geometry.spatialReference=e.outSpatialReference)}))})),r(this._processVisibleRastersResponse(t,{returnDomainValues:i,templateRRFunctionNames:p,showNoDataRecords:s,templateFields:n}))})).catch((()=>{throw new l.s("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")}))}r(this._processVisibleRastersResponse(t,{returnDomainValues:i,templateRRFunctionNames:p,showNoDataRecords:s,templateFields:n}))})).catch((()=>{throw new l.s("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}))}))}))}async fetchVariableStatisticsHistograms(e,t){const r=(0,c.L)(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),i=(0,c.L)(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),n=await Promise.all([r,i]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}}async _fetchService(e){await this._fetchServiceInfo(e),(0,o.r)(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=(0,o.r)(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then((e=>(this._set("serviceRasterInfo",e),e))),i=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null;return Promise.all([r,i]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this.renderer=null,Ce.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._configDefaultRenderer(),this.watch("renderer",(()=>this._configDefaultRenderer())),this.watch("renderingRule",(e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}));const t=(0,o.r)(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t)}))}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new m.c;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>null)),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:r}=this;return"unique-value"===e.type&&r&&"none"!==r.functionName.toLowerCase()&&1===t.bandCount&&["u8","s8"].includes(t.pixelType)||(0,m.T)(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await(0,c.L)(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly"))>-1)throw new l.s("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isVectorFieldResampleFunction(e){if(!(0,o.r)(e))return!1;const{functionName:t,functionArguments:r}=e,i="resample"===t.toLowerCase(),n=(null==r?void 0:r.ResampleType)||(null==r?void 0:r.resampleType);return i&&(7===n||10===n)}_isPicture(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1}_configDefaultRenderer(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=(0,m.S)(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}var e,t;this.renderer||(this.renderer=(0,m.M)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName})),this._symbolizer?(this._symbolizer.rendererJSON=(0,m.Q)(this.renderer.toJSON()),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new v.N({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null)}}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock&&e.pixelBlock.clone()}}_getQueryParams(e){const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...null==e?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,v.T)(e,t,r)}async _fetchMultidimensionalInfo(e){var t;const r=await(0,c.L)(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=r.variables)&&t.length&&r.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),r}_fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return Promise.reject(new l.s("imagery-layer:fetch-metadata","valid serviceInfo is required"));const r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,n=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&(0,c.L)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>O.default.fromJSON(e.data))).catch((()=>null)),s=!!(t.hasColormap&&this.version>=10.1)&&(0,c.L)(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),o=!!(t.hasHistograms&&this.version>=10.1)&&(0,c.L)(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),a=this.version>=10.3&&(0,c.L)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:i}).then((e=>e.data)).catch((()=>{})),u=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return Promise.all([n,s,o,a,u]).then((e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}const i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),n=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),s=C.k.fromJSON(t.spatialReference||t.extent.spatialReference);return new v.l({width:i,height:n,bandCount:t.bandCount,extent:P.M.fromJSON(t.extent),spatialReference:s,pixelSize:new R.b({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:s}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}_requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format&&t.format.indexOf("png")>-1)return(0,c.L)(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i}).then((e=>({imageElement:e.data,params:t})));const n=this._initJobHandler(),s=(0,c.L)(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i});return Promise.all([s,n]).then((e=>{const r=e[0].data,n=t.format||"jpgpng";let s=n;if("bsq"!==s&&"bip"!==s&&(s=(0,v.v)(r)),!s)throw new l.s("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(r)));const o="gif"===n||"bmp"===n||n.indexOf("png")>-1&&("png"===s||"jpg"===s),a={signal:i};return o?(0,v.T)(r,{useCanvas:!0,...t},a).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t}))):this._decodePixelBlock(r,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:n},a).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t})))}))}async _generateRasterInfo(e,t){const{data:r}=await(0,c.L)(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return await this._fetchAuxiliaryRasterInfo({serviceInfo:r,renderingRule:e,...t})}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,r=[];for(const e in t)if(t.hasOwnProperty(e)){const i=t[e],n=i.extent;let s=!0,o=[n[0]];i.hasRanges&&!0===i.hasRanges?(s=!1,o=[i.values[0]]):"stdz"===i.name.toLowerCase()&&Math.abs(n[1])<=Math.abs(n[0])&&(o=[n[1]]),r.push(new m.a({variableName:"",dimensionName:t[e].name,isSlice:s,values:o}))}if(r.length>0){this.mosaicRule=this.mosaicRule||new pe;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=r)}}_formatAttributeValue(e,t){if("string"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),n=i&&i.format;if(n){let t,r;return e.trim().indexOf(",")>-1?(t=",",r=t+" ",this._formatDelimitedString(e,t,r,n)):e.trim().indexOf(" ")>-1?(t=r=" ",this._formatDelimitedString(e,t,r,n)):this._formatNumberFromString(e,n)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i;return e.some((e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_")||(i=e,0)))),i}_formatDelimitedString(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map((e=>this._formatNumberFromString(e,i))).join(r):e}_formatNumberFromString(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:n,returnDomainValues:s,templateFields:a}=t,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,p=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const c=this.objectIdField||"ObjectId",m="string"==typeof r&&r.toLowerCase().indexOf("nodata")>-1,y=[];if(r&&!u&&!m){const e={};e[c]=0,p=[r],u=[new d.h(this.fullExtent,null,e)]}if(!u)return[];let h,f,g;this._updateResponseFieldNames(u,a),m&&!n&&(u=[]);for(let e=0;e<u.length;e++){if(h=u[e],null!=r&&!m){if(f=p[e],g=this.renderingRule&&l&&l.length>0&&i&&i.length>0&&i.indexOf(this.renderingRule.functionName)>-1?l[i.indexOf(this.renderingRule.functionName)]:r,"nodata"===f.toLowerCase()&&!n)continue;const t="Raster.ItemPixelValue",s="Raster.ServicePixelValue";h.attributes[t]=this._formatAttributeValue(f,t),h.attributes[s]=this._formatAttributeValue(g,s),this._updateFeatureWithMagDirValues(h,f);const a=this.fields&&this.fields.length>0;let u=this.renderingRule&&(0,o.r)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?a?f:r:g;this.renderingRule||(u=a?f:r),this._updateFeatureWithRasterAttributeTableValues(h,u)}if(h.sourceLayer=this,s&&this._updateFeatureWithDomainValues(h),i&&l&&i.length===l.length)for(let e=0;e<i.length;e++){const t="Raster.ServicePixelValue."+i[e];h.attributes[t]=this._formatAttributeValue(l[e],t)}y.push(u[e])}return y}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||(0,o.r)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=r&&r.features;if(!i)return;const n=r.fields,s=n.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),a=s&&s[0];if(!a)return;const l=i.filter((e=>e.attributes[a]===(null!=t?parseInt(t,10):null)));l&&l[0]&&n.forEach((t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(l[0].attributes[t.name],r)}))}_updateFeatureWithMagDirValues(e,t){if(!this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const r=t.replace(" ",",").split(",").map((e=>parseFloat(e))),i=r.map((e=>[e])),n=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),s=new S.u({height:1,width:1,pixelType:"f32",pixels:i,statistics:n});this.pixelFilter({pixelBlock:s,extent:new P.M(0,0,0,0,this.spatialReference)}),e.attributes["Raster.Magnitude"]=s.pixels[0][0],e.attributes["Raster.Direction"]=s.pixels[1][0]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.filter((e=>e.code===r))[0];i&&(e.attributes[t.name]=i.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;r&&e.forEach((e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}}))}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:n}=e,s=t.indexOf("image")>-1,o="esriImageServiceDataTypeElevation"===e.serviceDataType,a=!!(e.spatialReference||e.extent&&e.extent.spatialReference);return{operations:{supportsComputeHistograms:s,supportsExportImage:s,supportsIdentify:s,supportsMeasure:t.indexOf("mensuration")>-1&&a,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&s,supportsProject:r>=10.3&&s,supportsComputeStatisticsHistograms:r>=10.4&&s,supportsQueryBoundary:r>=10.6&&s,supportsCalculateVolume:r>=10.7&&o,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1},query:{supportsStatistics:!(!i||!i.supportsStatistics),supportsOrderBy:!(!i||!i.supportsOrderBy),supportsDistinct:!(!i||!i.supportsDistinct),supportsPagination:!(!i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(!i||!i.useStandardizedQueries),maxRecordCount:n}}}};return(0,n.e)([(0,u.y)()],t.prototype,"_functionRasterInfos",void 0),(0,n.e)([(0,u.y)()],t.prototype,"_rasterJobHandler",void 0),(0,n.e)([(0,u.y)()],t.prototype,"_symbolizer",void 0),(0,n.e)([(0,u.y)()],t.prototype,"_defaultServiceMosaicRule",void 0),(0,n.e)([(0,h.e)("_defaultServiceMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultServiceMosaicRule",null),(0,n.e)([(0,u.y)()],t.prototype,"_cachedRendererJson",void 0),(0,n.e)([(0,u.y)()],t.prototype,"rasterAttributeTableFieldPrefix",void 0),(0,n.e)([(0,u.y)({readOnly:!0})],t.prototype,"rasterFunctionNamesIndex",null),(0,n.e)([(0,u.y)({readOnly:!0})],t.prototype,"queryTask",null),(0,n.e)([(0,u.y)()],t.prototype,"adjustAspectRatio",void 0),(0,n.e)([(0,u.y)({readOnly:!0}),(0,s.o)("serviceRasterInfo.bandCount")],t.prototype,"bandCount",void 0),(0,n.e)([(0,u.y)({type:[u.N],json:{write:!0}})],t.prototype,"bandIds",void 0),(0,n.e)([(0,h.e)("bandIds")],t.prototype,"readBandIds",null),(0,n.e)([(0,u.y)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),(0,n.e)([(0,h.e)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),(0,n.e)([(0,u.y)({type:Number})],t.prototype,"compressionQuality",void 0),(0,n.e)([(0,n.o)("compressionQuality")],t.prototype,"writeCompressionQuality",null),(0,n.e)([(0,u.y)({type:Number})],t.prototype,"compressionTolerance",void 0),(0,n.e)([(0,n.o)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),(0,n.e)([(0,u.y)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,n.e)([(0,u.y)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),(0,n.e)([(0,u.y)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),(0,n.e)([(0,u.y)()],t.prototype,"rasterInfo",void 0),(0,n.e)([(0,u.y)({readOnly:!0,type:[b.y]})],t.prototype,"fields",void 0),(0,n.e)([(0,u.y)({readOnly:!0})],t.prototype,"fieldsIndex",null),(0,n.e)([(0,u.y)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),(0,n.e)([(0,h.e)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),(0,n.e)([(0,u.y)({type:P.M})],t.prototype,"fullExtent",void 0),(0,n.e)([(0,u.y)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),(0,n.e)([(0,u.y)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),(0,n.e)([(0,u.y)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),(0,n.e)([(0,u.y)({type:String,json:{type:m.o.jsonValues,read:m.o.read,write:m.o.write}})],t.prototype,"interpolation",void 0),(0,n.e)([(0,u.y)()],t.prototype,"minScale",void 0),(0,n.e)([(0,h.e)("service","minScale")],t.prototype,"readMinScale",null),(0,n.e)([(0,u.y)()],t.prototype,"maxScale",void 0),(0,n.e)([(0,h.e)("service","maxScale")],t.prototype,"readMaxScale",null),(0,n.e)([(0,u.y)({type:pe})],t.prototype,"mosaicRule",null),(0,n.e)([(0,h.e)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),(0,n.e)([(0,n.o)("mosaicRule")],t.prototype,"writeMosaicRule",null),(0,n.e)([(0,u.y)({readOnly:!0}),(0,s.o)("serviceRasterInfo.multidimensionalInfo")],t.prototype,"multidimensionalInfo",void 0),(0,n.e)([(0,u.y)({json:{type:u.N}})],t.prototype,"noData",void 0),(0,n.e)([(0,n.o)("noData")],t.prototype,"writeNoData",null),(0,n.e)([(0,u.y)({type:String,json:{type:m.i.jsonValues,read:m.i.read,write:m.i.write}})],t.prototype,"noDataInterpretation",void 0),(0,n.e)([(0,u.y)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),(0,n.e)([(0,h.e)("objectIdField")],t.prototype,"readObjectIdField",null),(0,n.e)([(0,u.y)({readOnly:!0})],t.prototype,"parsedUrl",null),(0,n.e)([(0,u.y)({readOnly:!0}),(0,s.o)("serviceRasterInfo.pixelSize.x")],t.prototype,"pixelSizeX",void 0),(0,n.e)([(0,u.y)({readOnly:!0}),(0,s.o)("serviceRasterInfo.pixelSize.y")],t.prototype,"pixelSizeY",void 0),(0,n.e)([(0,u.y)({type:Function})],t.prototype,"pixelFilter",void 0),(0,n.e)([(0,u.y)()],t.prototype,"raster",void 0),(0,n.e)([(0,u.y)()],t.prototype,"viewId",void 0),(0,n.e)([(0,u.y)({types:m.d,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:m.b,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],t.prototype,"renderer",void 0),(0,n.e)([(0,h.e)("renderer")],t.prototype,"readRenderer",null),(0,n.e)([(0,n.o)("renderer")],t.prototype,"writeRenderer",null),(0,n.e)([(0,u.y)(f.m)],t.prototype,"opacity",void 0),(0,n.e)([(0,u.y)({readOnly:!0}),(0,s.o)("serviceRasterInfo.attributeTable")],t.prototype,"rasterAttributeTable",void 0),(0,n.e)([(0,u.y)({readOnly:!0})],t.prototype,"rasterFields",null),(0,n.e)([(0,u.y)({readOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),(0,n.e)([(0,u.y)({type:X})],t.prototype,"renderingRule",null),(0,n.e)([(0,h.e)("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),(0,n.e)([(0,n.o)("renderingRule")],t.prototype,"writeRenderingRule",null),(0,n.e)([(0,u.y)()],t.prototype,"serviceDataType",void 0),(0,n.e)([(0,u.y)({readOnly:!0,type:C.k})],t.prototype,"spatialReference",void 0),(0,n.e)([(0,h.e)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),(0,n.e)([(0,u.y)({json:{type:De.jsonValues}})],t.prototype,"pixelType",void 0),(0,n.e)([(0,h.e)("pixelType")],t.prototype,"readPixelType",null),(0,n.e)([(0,n.o)("pixelType")],t.prototype,"writePixelType",null),(0,n.e)([(0,u.y)({constructOnly:!0,type:v.l})],t.prototype,"serviceRasterInfo",void 0),(0,n.e)([(0,u.y)()],t.prototype,"sourceJSON",void 0),(0,n.e)([(0,u.y)(f.p)],t.prototype,"url",void 0),(0,n.e)([(0,u.y)({readOnly:!0})],t.prototype,"version",void 0),(0,n.e)([(0,h.e)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=(0,n.e)([(0,u.n)("esri.layers.mixins.ArcGISImageService")],t),t};let Je=class extends((0,M.t)((0,z.c)((0,J.o)((0,L.s)((0,f.l)((0,V.w)(Ve((0,A.e)((0,D.p)((0,a.l)(p.b))))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,o.r)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(l.w).then((()=>this._fetchService(t)))),Promise.resolve(this)}writeOperationalLayerType(e,t,r){var i;const n="vector-field"===(null==(i=this.renderer)?void 0:i.type);t[r]=n?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,r=this.title,i=new Set;let n=!1,s=!1;this.capabilities&&(n=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,s=n&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));const o=new Set;n&&(o.add("raster.itempixelvalue"),s&&o.add("raster.magnitude").add("raster.direction"));for(const e of t){const t=e.name.toLowerCase();o.has(t)||t.indexOf("raster.servicepixelvalue.")>-1||i.add(e.name)}return(0,E.a)({fields:t,title:r},{...e,visibleFieldNames:i})}redraw(){this.emit("redraw")}};(0,n.e)([(0,u.y)(f.f)],Je.prototype,"legendEnabled",void 0),(0,n.e)([(0,u.y)({type:["show","hide"]})],Je.prototype,"listMode",void 0),(0,n.e)([(0,u.y)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Je.prototype,"isReference",void 0),(0,n.e)([(0,u.y)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Je.prototype,"operationalLayerType",void 0),(0,n.e)([(0,n.o)("web-map","operationalLayerType")],Je.prototype,"writeOperationalLayerType",null),(0,n.e)([(0,u.y)(f.s)],Je.prototype,"popupEnabled",void 0),(0,n.e)([(0,u.y)({type:s.M,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Je.prototype,"popupTemplate",void 0),(0,n.e)([(0,u.y)({readOnly:!0})],Je.prototype,"defaultPopupTemplate",null),(0,n.e)([(0,u.y)({readOnly:!0,json:{read:!1}})],Je.prototype,"type",void 0),Je=(0,n.e)([(0,u.n)("esri.layers.ImageryLayer")],Je);const Le=Je}}]);