(self.webpackChunk=self.webpackChunk||[]).push([[5943],{15943:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>I});var s=i(80987),n=i(20215),r=i(89710),a=i(92858),l=i(29831),d=i(61164),u=i(29986),o=i(55807),p=i(16034),y=i(93028),c=i(72783),f=i(2502),h=i(67079),g=i(52957);i(88903),i(80219),i(98548),i(78155),i(20736),i(4169),i(31531),i(53185),i(58404),i(38624),i(57424),i(66954),i(7571),i(60816),i(65352),i(93242),i(63358),i(26882),i(3629),i(71470),i(39068),i(54622),i(16408),i(28090),i(32553),i(60255),i(37191),i(42296),i(15015),i(40130),i(31516),i(95629),i(9612),i(52109),i(6585),i(3621),i(76326),i(4807),i(78730),i(29126);const m={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}},I=class{constructor(){this._queryEngine=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._requiredFields=this._fieldsIndex=this._createDefaultAttributes=null}async load(e){const t=[];await this._checkProjection(e.spatialReference);let i=null;e.url&&(i=(await(0,s.L)(e.url,{responseType:"json"})).data,await(0,p.I)(i));const r=(0,p.T)(i,{geometryType:e.geometryType}),c=e.fields||r.fields||[],I=null!=e.hasZ?e.hasZ:r.hasZ,b=r.geometryType,F=e.objectIdField||("number"===r.objectIdFieldType?r.objectIdFieldName:"OBJECTID")||"OBJECTID",_=e.spatialReference||a.I;let E=e.timeInfo;if(!b)throw new n.s("geojson-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if("string"===r.objectIdFieldType&&t.push({name:"geojson-layer:unsupported-id-type",message:"Feature ids are of type string and can't be honored."}),c===r.fields&&r.unknownFields.length>0&&t.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:r.unknownFields}}),F){let e=null;c.some((t=>t.name===F&&(e=t,!0)))?(e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):c.unshift({alias:F,name:F,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const e of c){if(null==e.name&&(e.name=e.alias),null==e.alias&&(e.alias=e.name),!e.name)throw new n.s("geojson-layer:invalid-field-name","field name is missing",{field:e});if(e.name===F&&(e.type="esriFieldTypeOID"),-1===h.i.jsonValues.indexOf(e.type))throw new n.s("geojson-layer:invalid-field-type",`invalid type for field "${e.name}"`,{field:e})}const T={};this._requiredFields=[];for(const e of c)if("esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type){e.editable=null==e.editable||!!e.editable,e.nullable=null==e.nullable||!!e.nullable;const t=(0,g.k)(e);e.nullable||void 0!==t?T[e.name]=t:this._requiredFields.push(e)}if(this._fieldsIndex=new f.e(c),E){if(E.startTimeField){const e=this._fieldsIndex.get(E.startTimeField);e?(E.startTimeField=e.name,e.type="esriFieldTypeDate"):E.startTimeField=null}if(E.endTimeField){const e=this._fieldsIndex.get(E.endTimeField);e?(E.endTimeField=e.name,e.type="esriFieldTypeDate"):E.endTimeField=null}if(E.trackIdField){const e=this._fieldsIndex.get(E.trackIdField);e?E.trackIdField=e.name:(E.trackIdField=null,t.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:E}}))}E.startTimeField||E.endTimeField||(t.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:E}}),E=null)}const j={warnings:t,featureErrors:[],layerDefinition:{...m,drawingInfo:(0,y.u)(b),templates:(0,y.i)(T),extent:null,geometryType:b,objectIdField:F,fields:c,hasZ:!!I,timeInfo:E}};this._queryEngine=new o.H({fields:c,geometryType:b,hasM:!1,hasZ:I,objectIdField:F,spatialReference:_,timeInfo:E,featureStore:new d.u({geometryType:b,hasM:!1,hasZ:I}),cacheSpatialQueries:!0}),this._createDefaultAttributes=(0,y.n)(T,F),this._nextObjectId=r.maxObjectId+1;const q=(0,p.k)(i,{geometryType:b,hasZ:I,objectIdField:"number"===r.objectIdFieldType?F:null});if(!(0,a.d)(_,a.I))for(const e of q)e.geometry&&(e.geometry=(0,l.X)((0,u.y)((0,l.e)(e.geometry,b,I,!1),a.I,_)));return this._loadInitialFeatures(j,q),j}async applyEdits(e){const{spatialReference:t,geometryType:i}=this._queryEngine;return await Promise.all([(0,c.y)(t,i),(0,u.p)(e.adds,t),(0,u.p)(e.updates,t)]),this._applyEdits(e)}queryFeatures(e={},t={}){return this._queryEngine.executeQuery(e,t.signal)}queryFeatureCount(e={},t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}queryObjectIds(e={},t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}queryExtent(e={},t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}querySnapping(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)}_loadInitialFeatures(e,t){const{featureStore:i,objectIdField:s}=this._queryEngine,n=[];for(const i of t){const t=this._createDefaultAttributes(),r=(0,c.d)(this._fieldsIndex,t,i.attributes,this._requiredFields,!0,e.warnings);r?e.featureErrors.push(r):(this._assignObjectId(t,i.attributes,!0),i.attributes=t,i.objectId=t[s],n.push(i))}if(i.addMany(n),e.layerDefinition.extent=this._queryEngine.fullExtent,e.layerDefinition.timeInfo){const{start:t,end:i}=this._queryEngine.timeExtent;e.layerDefinition.timeInfo.timeExtent=[t,i]}return e}_applyEdits(e){const{adds:t,updates:i,deletes:s}=e,n={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(n,t),i&&i.length&&this._applyUpdateEdits(n,i),s&&s.length){for(const e of s)n.deleteResults.push((0,c.c)(e));this._queryEngine.featureStore.removeManyById(s)}return{fullExtent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent,featureEditResults:n}}_applyAddEdits(e,t){const{addResults:i}=e,{geometryType:s,hasM:n,hasZ:a,objectIdField:d,spatialReference:o,featureStore:p}=this._queryEngine,y=[];for(const n of t){if(n.geometry&&s!==(0,r.d)(n.geometry)){i.push((0,c.u)("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),a=(0,c.d)(this._fieldsIndex,t,n.attributes,this._requiredFields);if(a)i.push(a);else{if(this._assignObjectId(t,n.attributes),n.attributes=t,null!=n.uid){const t=n.attributes[d];e.uidToObjectId[n.uid]=t}n.geometry&&(n.geometry=(0,u.y)((0,c.h)(n.geometry,o),n.geometry.spatialReference,o)),y.push(n),i.push((0,c.c)(n.attributes[d]))}}p.addMany((0,l.K)([],y,s,a,n,d))}_applyUpdateEdits({updateResults:e},t){const{geometryType:i,hasM:s,hasZ:n,objectIdField:a,spatialReference:d,featureStore:o}=this._queryEngine;for(const p of t){const{attributes:t,geometry:y}=p,f=t&&t[a];if(null==f){e.push((0,c.u)(`Identifier field ${a} missing`));continue}if(!o.has(f)){e.push((0,c.u)(`Feature with object id ${f} missing`));continue}const h=(0,l.W)(o.getFeature(f),i,n,s);if(y){if(i!==(0,r.d)(y)){e.push((0,c.u)("Incorrect geometry type."));continue}h.geometry=(0,u.y)((0,c.h)(y,d),y.spatialReference,d)}if(t){const i=(0,c.d)(this._fieldsIndex,h.attributes,t,this._requiredFields);if(i){e.push(i);continue}}o.add((0,l.J)(h,i,n,s,a)),e.push((0,c.c)(f))}}_assignObjectId(e,t,i=!1){const s=this._queryEngine.objectIdField;i&&isFinite(t[s])?e[s]=t[s]:e[s]=this._nextObjectId++}async _checkProjection(e){try{await(0,u.p)(a.I,e)}catch{throw new n.s("geojson-layer","Projection not supported")}}}}}]);