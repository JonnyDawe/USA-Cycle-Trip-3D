(self.webpackChunk=self.webpackChunk||[]).push([[6184],{76184:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>M});var s=i(78155),a=i(36845),r=i(88903),n=i(80219),h=i(31280),l=i(73574),o=i(80987),p=i(20215),d=i(94527),u=i(29126),c=i(98548),y=i(43231),g=i(84581),m=i(71394),v=i(1045),w=i(68874),x=i(68683),_=i(84935),b=i(9892),f=i(12046),V=i(10594),E=i(76944),q=i(50822),R=i(71391);i(40130),i(31516),i(20736),i(4169),i(92858),i(89710),i(82906),i(52957),i(31531),i(6585),i(3621),i(63358),i(62121),i(81135),i(17762),i(60816),i(61888),i(29832),i(52109),i(65352),i(7571),i(93242),i(58404),i(75200),i(334),i(5772),i(14215),i(32769),i(83731),i(71470),i(29986),i(26882),i(2566),i(43356),i(85774),i(67726),i(93443),i(13564),i(29218),i(84352),i(29831),i(90258),i(84271),i(25894),i(13513),i(57424),i(18143),i(91236),i(47365),i(67079),i(13838),i(83991),i(34396),i(5250),i(49878),i(48643),i(30316),i(4618),i(80657),i(94449),i(97325),i(3629),i(78191),i(50388),i(24776),i(76119),i(60978),i(40481),i(78730),i(2098),i(87405),i(11107),i(98128),i(97431),i(28090),i(93875),i(3805),i(6783),i(95186),i(79061),i(80163),i(26799),i(86897),i(79766),i(59312),i(33180),i(25290),i(13895),i(81578),i(55688),i(15015),i(95629),i(9612),i(76326),i(4807),i(18559),i(42296),i(17331),i(41290),i(82361),i(95559),i(68631),i(56803),i(2903),i(85570),i(80136),i(91507),i(85289),i(98843),i(91790),i(52737),i(16040),i(79506),i(26779),i(98420),i(54223),i(8725),i(51218),i(21793),i(15576),i(28941),i(19438),i(15022),i(56416),i(92758),i(78435),i(53902),i(2570),i(71666),i(72257),i(41822),i(99987),i(11838),i(39068);const D=n.n.getLogger("esri.views.2d.layers.imagery.ImageryGraphicsView2D");let S=class extends s.p{constructor(){super(...arguments),this.attached=!1,this.container=new v.r,this.updateRequested=!1,this._graphicsView=null,this._projectFullExtentPromise=null,this._previousExtents=[],this._previousSymbolTileResolution=0,this._previousRendererSignature="",this.type="Graphics",this._graphics=new m.u,this._updateGraphics=(0,p.B)((async(e,t)=>{if(!e.stationary)return;const i=e.state,s=new c.M({xmin:i.extent.xmin,ymin:i.extent.ymin,xmax:i.extent.xmax,ymax:i.extent.ymax,spatialReference:i.spatialReference}),[a,r]=e.state.size,h={};h.timeExtent=this.timeExtent,h.requestAsImageElement=!1,h.signal=t,null==this._projectFullExtentPromise&&(this._projectFullExtentPromise=this._getProjectedFullExtent(s.spatialReference));const l="vector-field"===this.layer.renderer.type?this.layer.renderer.symbolTileSize:50,o=await this._projectFullExtentPromise,{extent:p,resolution:d,width:u,height:y}=(0,g.p)(s,a,r,l,o),m=await this.layer.fetchImage(p,u,y,h),v=this.layer.renderer;if("vector-field"===v.type){const t=m.pixelData.pixelBlock,i=v.sizeVariables[0];i.minDataValue&&i.maxDataValue||(i.minDataValue=t.statistics[0].minValue,i.maxDataValue=t.statistics[0].maxValue),this._pixelData={extent:p,pixelBlock:m.pixelData.pixelBlock};const s=JSON.stringify(this.layer.renderer),a=this._previousRendererSignature===s,r=Math.abs(this._previousSymbolTileResolution-d)/d<.01,h=p.clone().normalize(),l=this._previousExtents.some((e=>h.some((t=>e.intersects(t))))),o=a&&r&&l?this._previousExtents:[],u=await v.getGraphicsFromPixelData(m.pixelData,"vector-uv"===this.layer.rasterInfo.dataType,o);if(o.length){const e=this._graphics.items.filter((e=>(0,n.r)(e.geometry)&&o.some((t=>t.intersects(e.geometry)))&&!h.some((t=>t.intersects(e.geometry)))));this._graphics.removeMany(e),this._graphics.addMany(u)}else this._graphics.set("items",u);this._graphicsView.update(e),this._previousExtents=h,this._previousRendererSignature=s,this._previousSymbolTileResolution=d}}))}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(e){this._updateGraphics(e).catch((e=>{(0,p.g)(e)||D.error(e)}))}hitTest(e,t){const i=this.view.toMap((0,d.c)(e,t));return Promise.resolve(new l.h({attributes:{},geometry:i,layer:this.layer}))}attach(){this._graphicsView=new x.i({view:this.view,graphics:this._graphics,requestUpdateCallback:()=>this.requestUpdate(),container:new w.i(this.view.featuresTilingScheme)}),this.attached=!0}detach(){this._graphics.destroy(),this._graphicsView.destroy(),this.container.removeChild(this._graphicsView.container),this._graphicsView=null}moveStart(){}viewChange(){}moveEnd(){}install(e){this.container.addChild(this._graphicsView.container),e.addChild(this.container)}uninstall(e){this.container.removeChild(this._graphicsView.container),e.removeChild(this.container)}isUpdating(){return this._graphicsView.updating||this.updateRequested}getPixelData(){return this.updating?null:this._pixelData}redraw(){}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}async _getProjectedFullExtent(e){try{return await(0,y.j)(this.layer.fullExtent,e)}catch(t){try{const t=(await(0,o.L)(this.layer.url,{query:{option:"footprints",outSR:e.wkid||JSON.stringify(e.toJSON()),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return t?c.M.fromJSON(t):null}catch{return null}}}};(0,s.e)([(0,r.y)()],S.prototype,"attached",void 0),(0,s.e)([(0,r.y)()],S.prototype,"container",void 0),(0,s.e)([(0,r.y)()],S.prototype,"layer",void 0),(0,s.e)([(0,r.y)()],S.prototype,"timeExtent",void 0),(0,s.e)([(0,r.y)()],S.prototype,"view",void 0),(0,s.e)([(0,r.y)()],S.prototype,"updateRequested",void 0),(0,s.e)([(0,r.y)()],S.prototype,"updating",null),(0,s.e)([(0,u.r)({graphics:"Graphics"})],S.prototype,"type",void 0),S=(0,s.e)([(0,r.n)("esri.views.2d.layers.imagery.ImageryGraphicsView2D")],S);var I=S;const k=n.n.getLogger("esri.views.2d.layers.imagery.ImageryView2D");let U=class extends s.p{constructor(){super(...arguments),this.attached=!1,this.container=new v.r,this.updateRequested=!1,this.type="Imagery",this._bitmapView=null}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(e){this.strategy.update(e).catch((e=>{(0,p.g)(e)||k.error(e)}))}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren()}hitTest(e,t){const i=this.view.toMap((0,d.c)(e,t));return Promise.resolve(new l.h({attributes:{},geometry:i,layer:this.layer}))}attach(){const e=this.layer.version>=10,t=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this._bitmapView=new b.t,this.strategy=new V.S({container:this._bitmapView,imageNormalizationSupported:e,imageMaxHeight:t,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()}),this.attached=!0}moveStart(){}viewChange(){}moveEnd(){}install(e){this.container.addChild(this._bitmapView),e.addChild(this.container)}uninstall(e){this.container.removeChild(this._bitmapView),e.removeChild(this.container)}redraw(){this.strategy.updateExports((e=>{e.source instanceof HTMLImageElement?e.requestRender():this.layer.applyRenderer({pixelBlock:e.source.pixelBlock}).then((t=>{const i=e.source;i.pixelBlock=t.pixelBlock,i.filter=e=>this.layer.applyFilter(e),this.container.requestRender()}))}))}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const e=this.strategy.bitmaps;if(1===e.length&&e[0].source)return{extent:e[0].source.extent,pixelBlock:e[0].source.originalPixelBlock};if(e.length>1){const t=this.view.extent,i=e.map((e=>e.source)).filter((e=>e.extent&&e.extent.intersects(t))).map((e=>({extent:e.extent,pixelBlock:e.originalPixelBlock}))),s=(0,_.m)(i,t);return s?{extent:s.extent,pixelBlock:s.pixelBlock}:null}return null}_fetchImage(e,t,i,s){return(s=s||{}).timeExtent=this.timeExtent,s.requestAsImageElement=!0,this.layer.fetchImage(e,t,i,s).then((e=>e.imageElement?e.imageElement:this.layer.applyRenderer(e.pixelData,{signal:s.signal}).then((t=>{const i=new f.e(t.pixelBlock,t.extent.clone(),e.pixelData.pixelBlock);return i.filter=e=>this.layer.applyFilter(e),i}))))}};(0,s.e)([(0,r.y)()],U.prototype,"attached",void 0),(0,s.e)([(0,r.y)()],U.prototype,"container",void 0),(0,s.e)([(0,r.y)()],U.prototype,"layer",void 0),(0,s.e)([(0,r.y)()],U.prototype,"strategy",void 0),(0,s.e)([(0,r.y)()],U.prototype,"timeExtent",void 0),(0,s.e)([(0,r.y)()],U.prototype,"view",void 0),(0,s.e)([(0,r.y)()],U.prototype,"updateRequested",void 0),(0,s.e)([(0,r.y)()],U.prototype,"updating",null),(0,s.e)([(0,u.r)({imagery:"Imagery"})],U.prototype,"type",void 0),U=(0,s.e)([(0,r.n)("esri.views.2d.layers.imagery.ImageryView2D")],U);var C=U;let B=class extends((0,E.u)((0,R.aa)((0,h.l)(q.d)))){constructor(){super(...arguments),this._exportImageVersion=-1}initialize(){this.handles.add((0,a.d)(this,["layer.blendMode"],(e=>{this.subview&&(this.subview.container.blendMode=e)}),!0))}get pixelData(){return this.updating?null:this.subview.getPixelData()}get updating(){return!(this.subview&&!this.subview.updating)}hitTest(e,t){return this.suspended||!this.subview?Promise.resolve(null):this.subview.hitTest(e,t)}update(e){var t;null==(t=this.subview)||t.update(e)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.handles.add([(0,a.d)(this,"layer.exportImageServiceParameters.version",(e=>{this._exportImageVersion!==e&&(this._exportImageVersion=e,this.requestUpdate())})),this.watch("timeExtent",(()=>{this.subview.timeExtent=this.timeExtent,this.requestUpdate()})),this.layer.on("redraw",(()=>this.subview.redraw())),(0,a.h)(this.layer,"renderer",(()=>this._setSubView()))],"imagerylayerview-update")}detach(){this.layer.decreaseRasterJobHandlerUsage(),this.subview.destroy(),this.handles.remove("imagerylayerview-update"),this._exportImageVersion=-1}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}async doRefresh(){this.requestUpdate()}isUpdating(){return!this.subview||!this.suspended&&this.subview.isUpdating()}_setSubView(){var e;let t="Imagery";var i,s;"vector-field"===(null==(e=this.layer.renderer)?void 0:e.type)&&"lerc"===this.layer.format&&(t="Graphics"),this.subview&&this.subview.type===t||(null==(i=this.subview)||i.uninstall(this.container),null==(s=this.subview)||s.destroy(),this.subview="Imagery"===t?new C({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new I({layer:this.layer,view:this.view,timeExtent:this.timeExtent}),this.subview.attach(),this.subview.install(this.container),this.subview.container.blendMode=this.layer.blendMode),this.requestUpdate()}};(0,s.e)([(0,r.y)()],B.prototype,"pixelData",null),(0,s.e)([(0,r.y)({readOnly:!0})],B.prototype,"updating",null),(0,s.e)([(0,r.y)()],B.prototype,"subview",void 0),B=(0,s.e)([(0,r.n)("esri.views.2d.layers.ImageryLayerView2D")],B);const M=B}}]);