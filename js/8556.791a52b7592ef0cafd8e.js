(self.webpackChunk=self.webpackChunk||[]).push([[8556],{98556:(e,i,t)=>{"use strict";t.r(i),t.d(i,{default:()=>I});var s=t(78155),a=t(80987),l=t(40130),n=t(83731),o=t(80219),r=t(88903),h=t(98548),p=t(7571),d=t(92858),y=t(20736),w=t(86203),c=t(2903),g=t(71394),m=t(12046),u=t(9892),_=t(31280),V=t(68874),b=t(68683),v=t(50822);t(20215),t(31531),t(60816),t(65352),t(93242),t(63358),t(58404),t(4169),t(82906),t(52957),t(29126),t(6585),t(3621),t(62121),t(53185),t(94449),t(34396),t(81135),t(94527),t(17762),t(61888),t(29832),t(31516),t(52109),t(5250),t(49878),t(84271),t(48643),t(73574),t(89710),t(30316),t(4618),t(80657),t(97325),t(3629),t(52737),t(47365),t(67079),t(95186),t(71391),t(36845),t(55688),t(15015),t(95629),t(9612),t(76326),t(4807),t(18559),t(32769),t(42296),t(17331),t(41290),t(91236),t(82361),t(13564),t(95559),t(68631),t(56803),t(18143),t(85570),t(71470),t(80136),t(91507),t(85289),t(98843),t(91790),t(29831),t(16040),t(79506),t(26779),t(98420),t(54223),t(8725),t(51218),t(21793),t(13895),t(15576),t(28941),t(19438),t(15022),t(56416),t(92758),t(78435),t(53902),t(40481),t(78730),t(2570),t(71666),t(72257),t(41822),t(99987),t(11838),t(39068),t(24776),t(67726),t(59312),t(93875),t(14215),t(75200),t(26799),t(43356),t(86897),t(5772),t(79766),t(2098),t(78191),t(80163),t(1045),t(334),t(87405),t(29986),t(26882),t(2566),t(85774),t(93443),t(29218),t(84352),t(90258),t(25894),t(13513),t(57424),t(13838),t(83991),t(50388),t(76119),t(60978),t(11107),t(98128),t(97431),t(28090),t(3805),t(6783),t(79061),t(33180);class f{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let S=class extends((0,_.l)(v.d)){constructor(){super(...arguments),this._handles=new n.u,this._bitmapIndex=new Map,this._mapImageContainer=new u.t,this._kmlVisualData=new f,this.allVisiblePoints=new g.a,this.allVisiblePolylines=new g.a,this.allVisiblePolygons=new g.a,this.allVisibleMapImages=new l.L}hitTest(e,i){if(this.suspended||!this._pointsView&&!this._polylinesView&&!this._polygonsView)return Promise.resolve(null);const t=[this._pointsView.hitTest(e,i),this._polylinesView.hitTest(e,i),this._polygonsView.hitTest(e,i)];return Promise.all(t).then((e=>e.filter((e=>(e&&(e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e)}attach(){this._handles.add([this.allVisibleMapImages.on("change",(e=>{e.added.forEach((e=>this._addMapImage(e))),e.removed.forEach((e=>this._removeMapImage(e)))}))]),this.container.addChild(this._mapImageContainer),this._polygonsView=new b.i({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new V.i(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new b.i({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new V.i(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new b.i({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new V.i(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.watch("layer.visibleSublayers",(e=>{for(const[e,i]of this._kmlVisualData.allSublayers)i.visibility=0;for(const i of e){const e=this._kmlVisualData.allSublayers.get(i.id);e&&(e.visibility=1)}this._refreshCollections()})),this._fetchingPromise=this._fetchService().then((()=>{this._fetchingPromise=null,this.notifyChange("updating")}))}detach(){this._handles.removeAll(),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView&&(this._polygonsView.destroy(),this._polygonsView=null),this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null),this._pointsView&&(this._pointsView.destroy(),this._pointsView=null)}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return null!=this._fetchingPromise||this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(e){(this.view.spatialReference.isWGS84||this.view.spatialReference.isWebMercator)&&(0,a.L)(e.href,{responseType:"image"}).then((({data:i})=>{let t=h.M.fromJSON(e.extent);(0,y.x)(t,this.view.spatialReference)&&(t=(0,y.g)(t,this.view.spatialReference));const s=new m.g(i,"standard");s.x=t.xmin,s.y=t.ymax,s.resolution=t.width/i.naturalWidth,s.rotation=e.rotation,this._mapImageContainer.addChild(s),this._bitmapIndex.set(e,s)}))}async _getViewDependentUrl(e,i){const{viewFormat:t,viewBoundScale:s,httpQuery:l}=e;if((0,o.r)(t)){if((0,o.t)(i))throw new Error("Loading this network link requires a view state.");let n;if(await(0,p.D)(),(0,o.r)(s)&&1!==s){const e=new h.M(i.extent);e.expand(s),n=e}else n=i.extent;n=(0,p.H)(n,d.k.WGS84);const r=(0,p.H)(n,d.k.WebMercator),y=n.xmin,w=n.xmax,g=n.ymin,m=n.ymax,u=i.size[0]*i.pixelRatio,_=i.size[1]*i.pixelRatio,V=Math.max(r.width,r.height),b={"[bboxWest]":y.toString(),"[bboxEast]":w.toString(),"[bboxSouth]":g.toString(),"[bboxNorth]":m.toString(),"[lookatLon]":n.center.x.toString(),"[lookatLat]":n.center.y.toString(),"[lookatRange]":V.toString(),"[lookatTilt]":"0","[lookatHeading]":i.rotation.toString(),"[lookatTerrainLon]":n.center.x.toString(),"[lookatTerrainLat]":n.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":n.center.x.toString(),"[cameraLat]":n.center.y.toString(),"[cameraAlt]":V.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":u.toString(),"[vertPixels]":_.toString(),"[terrainEnabled]":"0","[clientVersion]":a.r,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},v=e=>{for(const i in e)for(const t in b)e[i]=e[i].replace(t,b[t])},f=(0,a.q)(t);v(f);let S={};(0,o.r)(l)&&(S=(0,a.q)(l),v(S));const I=(0,c.e)(e.href);return I.query={...I.query,...f,...S},`${I.path}?${(0,a.C)(f)}`}return e.href}async _fetchService(){const e=new f;await this._loadVisualData(this.layer.url,e),this._kmlVisualData=e,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e)))}_isSublayerVisible(e){const i=this._kmlVisualData.allSublayers.get(e);return!!i.visibility&&(-1===i.parentFolderId||this._isSublayerVisible(i.parentFolderId))}_loadVisualData(e,i){return this._fetchParsedKML(e).then((async e=>{for(const t of e.sublayers){i.allSublayers.set(t.id,t);const e=t.points?await(0,w.b)(t.points):[],s=t.polylines?await(0,w.b)(t.polylines):[],a=t.polygons?await(0,w.b)(t.polygons):[],l=t.mapImages||[];if(i.allPoints.push(...e.map((e=>({item:e,sublayerId:t.id})))),i.allPolylines.push(...s.map((e=>({item:e,sublayerId:t.id})))),i.allPolygons.push(...a.map((e=>({item:e,sublayerId:t.id})))),i.allMapImages.push(...l.map((e=>({item:e,sublayerId:t.id})))),t.networkLink){const e=await this._getViewDependentUrl(t.networkLink,this.view.state);await this._loadVisualData(e,i)}}}))}_fetchParsedKML(e){return(0,w.g)(e,this.view.spatialReference,this.layer.refreshInterval).then((e=>(0,w.d)(e.data)))}_removeMapImage(e){const i=this._bitmapIndex.get(e);i&&(this._mapImageContainer.removeChild(i),this._bitmapIndex.delete(e))}};(0,s.e)([(0,r.y)()],S.prototype,"_pointsView",void 0),(0,s.e)([(0,r.y)()],S.prototype,"_polylinesView",void 0),(0,s.e)([(0,r.y)()],S.prototype,"_polygonsView",void 0),(0,s.e)([(0,r.y)()],S.prototype,"_fetchingPromise",void 0),(0,s.e)([(0,r.y)()],S.prototype,"updating",void 0),S=(0,s.e)([(0,r.n)("esri.views.2d.layers.KMLLayerView2D")],S);const I=S}}]);