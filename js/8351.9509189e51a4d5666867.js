(self.webpackChunk=self.webpackChunk||[]).push([[8351],{88351:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>w});var r=o(78155),i=o(80219),l=o(80987),s=o(81135),n=o(79506),a=o(20215),y=o(88903),p=o(4169),u=o(41290),d=o(51218),c=o(13895),S=o(15576),h=o(28941),v=o(19438),f=o(94527);o(98548),o(20736),o(92858),o(31531),o(29126),o(52957),o(17762),o(60816),o(61888),o(29832),o(40130),o(31516),o(52109),o(6585),o(3621),o(63358),o(62121),o(91236),o(4618),o(65352),o(9612),o(76326);const m=["atom","xml"],g={base:f.a,key:"type",typeMap:{"simple-line":f.m},errorContext:"symbol"},b={base:f.a,key:"type",typeMap:{"picture-marker":s.n,"simple-marker":s.y},errorContext:"symbol"},C={base:f.a,key:"type",typeMap:{"simple-fill":s.S},errorContext:"symbol"};let R=class extends((0,d.t)((0,h.o)((0,c.l)((0,S.w)((0,v.s)((0,n.l)(u.b))))))){constructor(...e){super(...e),this.description=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.outSpatialReference=null,this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?(0,l.p)(this.url,m)||"GeoRSS":e||""}set title(e){this._set("title",e)}readFeatureCollections(e,t){return t.featureCollection.layers.forEach((e=>{const t=e.layerDefinition.drawingInfo.renderer.symbol;t&&"esriSFS"===t.type&&t.outline&&-1!==t.outline.style.indexOf("esriSFS")&&(t.outline.style="esriSLSSolid")})),t.featureCollection.layers}load(e){const t=(0,i.r)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(a.w).then((()=>this._fetchService(t)))),Promise.resolve(this)}async _fetchService(e){const{data:t}=await(0,l.L)(i.d.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:e});this.read(t,{origin:"service"})}};(0,r.e)([(0,y.y)()],R.prototype,"description",void 0),(0,r.e)([(0,y.y)({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],R.prototype,"title",null),(0,r.e)([(0,y.y)()],R.prototype,"featureCollections",void 0),(0,r.e)([(0,p.e)("service","featureCollections",["featureCollection.layers"])],R.prototype,"readFeatureCollections",null),(0,r.e)([(0,y.y)(c.g)],R.prototype,"id",void 0),(0,r.e)([(0,y.y)(c.f)],R.prototype,"legendEnabled",void 0),(0,r.e)([(0,y.y)({types:g,json:{write:!0}})],R.prototype,"lineSymbol",void 0),(0,r.e)([(0,y.y)({type:["show","hide"]})],R.prototype,"listMode",void 0),(0,r.e)([(0,y.y)({types:b,json:{write:!0}})],R.prototype,"pointSymbol",void 0),(0,r.e)([(0,y.y)({types:C,json:{write:!0}})],R.prototype,"polygonSymbol",void 0),(0,r.e)([(0,y.y)({type:["GeoRSS"]})],R.prototype,"operationalLayerType",void 0),(0,r.e)([(0,y.y)()],R.prototype,"outSpatialReference",void 0),(0,r.e)([(0,y.y)(c.p)],R.prototype,"url",void 0),(0,r.e)([(0,y.y)({readOnly:!0,json:{read:!1},value:"geo-rss"})],R.prototype,"type",void 0),R=(0,r.e)([(0,y.n)("esri.layers.GeoRSSLayer")],R);const w=R}}]);