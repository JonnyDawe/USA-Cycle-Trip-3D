(self.webpackChunk=self.webpackChunk||[]).push([[2241],{92241:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>R});var i=r(78155),s=r(73574),a=r(80219),o=r(36845),n=r(88903),d=r(60816),h=r(7571),l=r(58404),u=r(98548),c=r(30665),g=r(32422),p=r(63114),y=r(98843),_=r(18143),m=r(49293),f=r(70448),b=r(87572),v=r(47122),E=r(86125),x=r(55725),C=r(31393);r(20215),r(80987),r(20736),r(4169),r(92858),r(31531),r(82906),r(40130),r(52957),r(29126),r(6585),r(3621),r(63358),r(62121),r(81135),r(94527),r(17762),r(61888),r(29832),r(31516),r(52109),r(89710),r(65352),r(93242),r(53185),r(28090),r(47365),r(67079),r(71391),r(83731),r(55688),r(15015),r(95629),r(9612),r(76326),r(4807),r(30316),r(18559),r(32769),r(42296),r(17331),r(41290),r(91236),r(82361),r(71394),r(13564),r(95559),r(68631),r(56803),r(2903),r(85570),r(71470),r(80136),r(91507),r(85289),r(91790),r(52737),r(29831),r(16040),r(34396),r(5250),r(49878),r(84271),r(48643),r(4618),r(80657),r(94449),r(97325),r(3629),r(79506),r(26779),r(98420),r(54223),r(8725),r(51218),r(21793),r(13895),r(15576),r(28941),r(19438),r(15022),r(56416),r(92758),r(78435),r(53902),r(40481),r(78730),r(2570),r(71666),r(72257),r(41822),r(99987),r(11838),r(39068),r(24776),r(95186),r(67726),r(59312),r(79679),r(71542),r(16063),r(43194),r(62654),r(15346),r(65311),r(72105),r(60183),r(93875),r(14215),r(20868),r(72600),r(334),r(37762),r(92722),r(25290),r(7552),r(78082),r(27270),r(37191),r(84796),r(87405),r(84320),r(93450),r(97431),r(32892),r(41374),r(86897),r(41392),r(79949),r(6660),r(6783),r(75200),r(29218),r(50822),r(30494),r(14754),r(42413),r(66954),r(38624),r(57424),r(54325),r(55807),r(54622),r(29986),r(26882),r(16408),r(32553),r(60255),r(1357),r(81578);class I extends m.a{constructor(e){super("SceneLayerWorker","dracoDecompressPointCloudData",e,{hasInitialize:!0})}getTransferList(e){return[e.geometryBuffer]}}const w=a.n.getLogger("esri.views.3d.layers.SceneLayerGraphicsView3D"),D=(0,b.a)();let A=class extends((0,E.p)((0,x.c)((0,g.m)(b.o)))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._nodesAddedToStage=new Map,this.drapeSourceType=1,this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this.loadedGraphics=new p.s,this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}initialize(){var e;const t=this.layer;this.addResolvingPromise(t.indexInfo),this._attributeOverrides=new p.y(this.layer,null==(e=this.view.resourceController)?void 0:e.memoryController),(0,v.y)(t,this.view.spatialReference,this.view.viewingMode),this.fieldsHelper=new b.c({layerView:this}),this.updatingHandles.add(t,"rangeInfos",(e=>this._rangeInfosChanged(e)),2),this.updatingHandles.add(t,"renderer",((e,t)=>this._rendererChange(e,t))),this.updatingHandles.add(this,"parsedDefinitionExpression",(()=>this._filterChange())),this.updatingHandles.add(this,"view.floors",(()=>this.graphics3d.filterVisibility.filterChanged())),this.handles.add((0,o.d)(g.T,"I3S_TREE_SHOW_TILES",(e=>{if(e&&!this._treeDebugger){const e=this._controller.crsIndex;Promise.all([r.e(9351),r.e(1470)]).then(r.bind(r,51470)).then((({I3STreeDebugger:t})=>{!this._treeDebugger&&g.T.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new t({lv:this,view:this.view,nodeSR:e}))}))}else e||!this._treeDebugger||g.T.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)}))),this._set("graphics3d",new f.v({owner:this,layer:t,preferredUpdatePolicy:0,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentVisibilityEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,suspendResumeExtentMode:"data",dataExtent:t.fullExtent,updateClippingExtent:e=>this._updateClippingExtent(e)})),this.graphics3d.elevationAlignment&&this.graphics3d.elevationAlignment.events.on("invalidate-elevation",(e=>this._invalidateElevation(e))),this.supportsHeightUnitConversion&&(this._verticalScale=(0,y.t)("point",t.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.graphics3d.setup()),this._memCache=this.view.resourceController.memoryController.getMemCache(t.uid),this._controller=new p.J({layerView:this,scaleVisibilityEnabled:!1}),(0,v.J)(this.layer.geometryDefinitions)&&(this._worker=new I((e=>this.view.resourceController.schedule(e)))),this.handles.add(this.layer.on("apply-edits",(e=>this.updatingHandles.addPromise(e.result)))),this.handles.add(this.layer.on("edits",(e=>this._handleEdits(e)))),this.when((()=>{this._queryEngine=new f.p({layerView:this,priority:g.p.FEATURE_QUERY_ENGINE}),this.updatingHandles.add(this,"maximumNumberOfFeatures",(e=>this._controller.featureTarget=e),2),this.updatingHandles.add(this,"suspended",(e=>{e&&this._removeAllNodeData()}))}))}destroy(){this._treeDebugger=(0,a.k)(this._treeDebugger),this._attributeOverrides=(0,a.k)(this._attributeOverrides),this._set("graphics3d",(0,a.k)(this.graphics3d)),this._controller=(0,a.k)(this._controller),this._queryEngine=(0,a.k)(this._queryEngine),this._worker=(0,a.k)(this._worker),this._memCache=(0,a.k)(this._memCache),this._nodesAddedToStage.clear(),this.fieldsHelper=(0,a.k)(this.fieldsHelper)}get requiredFields(){var e,t;return null!=(e=null==(t=this.fieldsHelper)?void 0:t.requiredFields)?e:[]}get maximumNumberOfFeatures(){const e=this.graphics3d&&this.graphics3d.graphicsCore&&this.graphics3d.graphicsCore.displayFeatureLimit;return e?e.maximumNumberOfFeatures:0}set maximumNumberOfFeatures(e){null!=e?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){return!this.suspended&&!!this._controller&&!this._controller.leavesReached}get hasM(){return!1}get hasZ(){return!0}notifyGraphicGeometryChanged(e){this.graphics3d.graphicsCore.notifyGraphicGeometryChanged(e)}notifyGraphicVisibilityChanged(e){this.graphics3d.graphicsCore.notifyGraphicVisibilityChanged(e)}async whenGraphicAttributes(e,t){return(0,v.n)(this.layer,e,this._getObjectIdField(),t,(()=>[...this._nodesAddedToStage.values()]))}getGraphicFromGraphicUid(e){if(!this.loadedGraphics)return null;const t=(0,g.c)(this.loadedGraphics.find((t=>t.uid===e)),this.layer),r=this._getObjectIdField();return t&&t.attributes&&t.attributes[r]?(t.layer=this.layer,t.sourceLayer=this.layer,t):null}whenGraphicBounds(e,t){return this.graphics3d.graphicsCore.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.graphics3d.graphicsCore.computeAttachmentOrigin(e,t)}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}isUpdating(){return!!(this._controller&&this._controller.updating||this.graphics3d&&this.graphics3d.updating)}getRenderingInfo(e,t,r){const i=(0,g.a0)(e,{renderer:t,arcade:r});if((0,a.r)(i)&&i.color){const e=i.color;e[0]=e[0]/255,e[1]=e[1]/255,e[2]=e[2]/255}return i}async getRenderingInfoAsync(e,t,r,i){return(0,g.a1)(e,{renderer:t,arcade:r,...i})}get symbolUpdateType(){return this.graphics3d.graphicsCore.symbolUpdateType}highlight(e){return this.graphics3d.highlight(e,this.layer.objectIdField)}get updatePolicy(){return this.graphics3d.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return(0,b.s)(this.attributeEditingContext,e)}async extractBinaryPointData(e,t){const r={geometryBuffer:e.geometryBuffer};return(0,a.t)(this._worker)&&(this._worker=new I((e=>this.view.resourceController.schedule(e)))),this._worker.invoke(r,t).then((e=>{if((0,a.r)(e))return{positionData:e.positions,featureIds:e.featureIds};throw new Error("Failed to decompress Draco point data")}))}checkExtent(e,t){e&&!(0,u.k)(e,t)&&(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&w.error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&w.error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++)}async addNode(e,t,r){if(!F(t)&&!O(t))return Promise.reject();if(this._nodesAddedToStage.has(e.index))return void w.error("I3S node "+e.id+" already added");const i=this.layer.fullExtent,s=i&&function(e,t){return e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,e.hasZ&&(e.zmin-=t,e.zmax+=t),e.hasM&&(e.mmin-=t,e.mmax+=t),e}(i.clone(),.5),a=this._controller.crsVertex,o=[],n={graphics:null,featureIds:null,attributeInfo:t.attributeDataInfo,node:e};if(F(t)?await this._addNodeBinaryPointData(e,n,t,s,o,r):O(t)&&this._addNodeLegacyPointData(e,n,t,s,o),await this._attributeOverrides.apply(n.featureIds,t.attributeDataInfo,r),e.numFeatures=n.graphics.length,this._updateNodeMemory(e),N(n),o.length>0&&(this.computeObb(e,o,a),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return this._cacheNodeData(n),Promise.resolve();if(this._verticalScale)for(const e of n.graphics)this._verticalScale(e.geometry);return this._nodesAddedToStage.set(e.index,n),this.loadedGraphics.addMany(n.graphics),this._filterNode(n),this._treeDebugger&&this._treeDebugger.update(),Promise.resolve()}computeObb(e,t,r){const i=this._controller.crsIndex,s=i.isGeographic?this.view.renderSpatialReference:i;(0,h.x)(t,r,0,t,s,0,t.length/3);const a={data:t,size:3};e.serviceObb=(0,g.G)(a),i.isGeographic&&(0,h.w)(e.serviceObb.center,s,e.serviceObb.center,i)}isNodeLoaded(e){return this._nodesAddedToStage.has(e)}isNodeReloading(){return!1}updateNodeState(){}async _addNodeBinaryPointData(e,t,r,i,o,n){const l=await this.extractBinaryPointData(r,n);if(null==l)return Promise.reject();const u=this._getObjectIdField(),g=this._controller.crsVertex,p=this.view.spatialReference,y=this.graphics3d.graphicsCore,{positionData:_,featureIds:m}=l,f=_.length/3,b=new Array;for(let t=0;t<f;t++){const r=(0,a.r)(e.serviceObb)?e.serviceObb.center:[0,0,0],n=3*t,l=(0,d.i)(_[n+0],_[n+1],_[n+2]);(0,d.u)(l,l,r),e.serviceObb||o.push(l[0],l[1],l[2]),i&&this.checkExtent(i,l);const f=m[t],v={};null!=f&&(v[u]=f);const E=null==f?s.h.generateUID():f;(0,h.x)(l,g,0,G,p,0,1);const x=(0,c.v)(G[0],G[1],G[2],p),C=this.loadedGraphics.get(E);if((0,a.r)(C))C.level<e.level&&(V.property="geometry",V.graphic=C,V.oldValue=(0,a.f)(C.geometry),V.newValue=x,C.geometry=x,y.graphicUpdateHandler(V)),b.push(C);else{const t=s.h.generateUID();b.push({objectId:E,uid:t,geometry:x,attributes:v,visible:!0,level:e.level})}}t.graphics=b,t.featureIds=m}_addNodeLegacyPointData(e,t,r,i,o){const n=this._getObjectIdField(),d=this._controller.crsVertex,l=this.view.spatialReference,u=[0,0,0],g=new Array,p=new Array;for(const t of r.pointData){const r=t.featureDataPosition,y=r.length,_=t.geometries&&t.geometries[0]||T[y],m=t.featureIds[0];if("points"!==_.params.type)continue;i&&this.checkExtent(i,r);const f={};null!=m&&(f[n]=m);const b=null==m?s.h.generateUID():m;let v;"Embedded"===_.type&&(v=_.params.vertexAttributes.position);for(let t=0;t<v.length;t+=y){for(let e=0;e<y;e++)u[e]=r[e]+v[t+e];const i=3===y;e.serviceObb||o.push(u[0],u[1],i?u[2]:0),(0,h.x)(u,d,0,G,l,0,1);const n=(0,c.v)(G[0],G[1],i?G[2]:void 0,l),g=this.loadedGraphics.get(b);(0,a.r)(g)?p.push(g):p.push({objectId:b,uid:s.h.generateUID(),geometry:n,attributes:f,visible:!0})}g.push(m)}t.graphics=p,t.featureIds=g}_updateNodeMemory(e){e.memory=4096+((0,a.r)(e.numFeatures)?e.numFeatures*this.graphics3d.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(e){const t=e.graphics.reduce(((e,t)=>(0,c.A)(t)+e),512+8*e.featureIds.length+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t)}_getMemCacheKey(e){return`${e.index}`}_removeAllNodeData(){this._nodesAddedToStage.forEach((e=>{if(e){const t=e.node;this._updateNodeMemory(t),this._cacheNodeData(e)}})),this._nodesAddedToStage.clear(),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t))}_removeNodeStageData(e){const t=this._nodesAddedToStage.get(e);return t?(this.loadedGraphics.removeMany(t.graphics),this._nodesAddedToStage.delete(e),this._treeDebugger&&this._treeDebugger.update(),t):null}async loadCachedNodeData(e){return this._memCache.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,r,i){if(!this._nodesAddedToStage.has(e.index))return this.loadedGraphics.addMany(t.graphics),this._nodesAddedToStage.set(e.index,t),this._updateNodeMemory(e),await this.updateAttributes(e.index,r,i),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update(),Promise.resolve();w.error("I3S node "+e.id+" already added")}getLoadedNodeIds(){const e=[];return this._nodesAddedToStage.forEach((t=>e.push(t.node.id))),e.sort()}getVisibleNodes(){const e=new Array;return this._nodesAddedToStage.forEach((t=>e.push(t.node))),e}getLoadedNodeIndices(e){this._nodesAddedToStage.forEach(((t,r)=>e.push(r)))}getLoadedAttributes(e){const t=this._nodesAddedToStage.get(e);if(t&&(0,a.r)(t.attributeInfo))return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this._nodesAddedToStage.get(e);if(t&&(0,a.r)(t.attributeInfo))return t.attributeInfo.attributeData}setAttributeData(e,t){const r=this._nodesAddedToStage.get(e);r&&!(0,a.t)(r.attributeInfo)&&(r.attributeInfo.attributeData=t,this._attributeValuesChanged(r))}async updateAttributes(e,t,r){const i=this._nodesAddedToStage.get(e);i&&(await this._attributeOverrides.apply(i.featureIds,t,r),i.attributeInfo=t,this._attributeValuesChanged(i))}_attributeValuesChanged(e){if(N(e),this._filterNode(e),this.graphics3d.graphicsCore.labelsEnabled){const t=e.graphics.map((e=>e.uid));this.graphics3d.graphicsCore.updateLabelingInfo(t)}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||"OBJECTID"}async _rendererChange(e,t){const{layer:{fieldsIndex:r}}=this,i=new Set;let s,a;e?(await e.collectRequiredFields(i,r),s=Array.from(i).sort()):s=[],i.clear(),t?(await t.collectRequiredFields(i,r),a=Array.from(i).sort()):a=[],s.length===a.length&&s.every(((e,t)=>s[t]===a[t]))||this._reloadAllNodes()}_rangeInfosChanged(e){null!=e&&e.length>0&&w.warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this._nodesAddedToStage.forEach((e=>this._filterNode(e)))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(e){const t=this.parsedDefinitionExpression;for(const r of e.graphics){const e=r.visible;r.visible=!t||this._evaluateClause(t,r),e!==r.visible&&(V.graphic=r,V.property="visible",V.oldValue=e,V.newValue=r.visible,this.graphics3d.graphicsCore.graphicUpdateHandler(V))}}_invalidateElevation(e){const t=this._controller.crsIndex;(0,h.C)(e.extent,e.spatialReference,M,t),this._controller.updateElevationChanged(M,t)}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return(0,a.r)(this.filter)?this.filter.createQuery(e):new _.b(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),null==t?void 0:t.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),null==t?void 0:t.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),null==t?void 0:t.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),null==t?void 0:t.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery((0,a.t)(e)?this.createQuery():_.b.from(e))}getUsedMemory(){const e=this.graphics3d&&this.graphics3d.graphicsCore;return e?e.usedMemory:0}getUnloadedMemory(){const e=this.graphics3d&&this.graphics3d.graphicsCore;return.8*((this._controller?this._controller.unloadedMemoryEstimate:0)+(e?e.unprocessedMemoryEstimate:0))}ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}_handleEdits(e){(0,b.i)(this.attributeEditingContext,e)}get attributeEditingContext(){const e=this._getObjectIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,forEachNode:e=>this._nodesAddedToStage.forEach((t=>e(t.node,t.featureIds))),attributeStorageInfo:this.i3slayer.attributeStorageInfo,attributeOverrides:this._attributeOverrides,getAttributeData:e=>this.getAttributeData(e),setAttributeData:(t,r,i)=>{this.setAttributeData(t,r);const s=this._nodesAddedToStage.get(t);if((0,a.r)(i)){const t=this.loadedGraphics.get(i.attributes[e]);(0,a.r)(t)&&this.graphics3d.graphicsCore.recreateGraphics([t])}else(0,a.r)(s)&&this.graphics3d.graphicsCore.recreateGraphics(s.graphics)},clearMemCache:()=>{}}}get performanceInfo(){const e={displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:this.maximumNumberOfFeatures,totalNumberOfFeatures:-1,nodes:this._nodesAddedToStage.size,core:this.graphics3d.graphicsCore.performanceInfo};return this._controller&&this._controller.updateStats(e),e}get test(){return{controller:this._controller,numNodes:this._nodesAddedToStage.size,numFeatures:this.loadedGraphics.length}}};(0,i.e)([(0,n.y)()],A.prototype,"graphics3d",void 0),(0,i.e)([(0,n.y)({type:C.y})],A.prototype,"filter",void 0),(0,i.e)([(0,n.y)()],A.prototype,"loadedGraphics",void 0),(0,i.e)([(0,n.y)({aliasOf:"layer"})],A.prototype,"i3slayer",void 0),(0,i.e)([(0,n.y)()],A.prototype,"_controller",void 0),(0,i.e)([(0,n.y)()],A.prototype,"updating",void 0),(0,i.e)([(0,n.y)()],A.prototype,"suspended",void 0),(0,i.e)([(0,n.y)()],A.prototype,"holeFilling",void 0),(0,i.e)([(0,n.y)(g.z)],A.prototype,"updatingProgress",void 0),(0,i.e)([(0,n.y)({aliasOf:"_controller.updatingProgress"})],A.prototype,"updatingProgressValue",void 0),(0,i.e)([(0,n.y)(D.requiredFields)],A.prototype,"requiredFields",null),(0,i.e)([(0,n.y)(D.availableFields)],A.prototype,"availableFields",void 0),(0,i.e)([(0,n.y)()],A.prototype,"fieldsHelper",void 0),(0,i.e)([(0,n.y)({type:Number})],A.prototype,"maximumNumberOfFeatures",null),(0,i.e)([(0,n.y)({readOnly:!0})],A.prototype,"maximumNumberOfFeaturesExceeded",null),(0,i.e)([(0,n.y)({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.point.lodFactor"})],A.prototype,"lodFactor",void 0),(0,i.e)([(0,n.y)({readOnly:!0})],A.prototype,"hasM",null),(0,i.e)([(0,n.y)({readOnly:!0})],A.prototype,"hasZ",null),A=(0,i.e)([(0,n.n)("esri.views.3d.layers.SceneLayerGraphicsView3D")],A);var S=A;function O(e){return"pointData"in e}function F(e){return"geometryBuffer"in e&&null!==e.geometryBuffer}function N(e){const t=e.attributeInfo;for(let r=0;r<e.graphics.length;r++){const i=e.graphics[r];if(i.attributes||(i.attributes={}),(0,a.r)(t)&&(0,a.r)(t.loadedAttributes))for(const{name:e}of t.loadedAttributes)t.attributeData[e]&&(i.attributes[e]=(0,v.f)(t.attributeData[e],r))}}const T={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},G=(0,d.n)(),V={graphic:null,property:null,oldValue:null,newValue:null},M=(0,l.i)(),R=S}}]);