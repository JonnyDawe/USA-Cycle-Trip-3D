import { L, g as gt } from './Loadable-d16b3d7d.js';
import { s as s$1 } from './promiseUtils-2ff2b194.js';
import { y as y$2, f as e$3, r as r$1, j as t$1 } from './Message-70b34921.js';
import { r as r$2, e as e$4 } from './Task-41e0c8b8.js';
import { e as e$1, a } from './JSONSupport-9346590f.js';
import { y as y$1, n as n$2 } from './subclass-fe5fcf78.js';
import { r } from './enumeration-7d0c165d.js';
import { s, o as o$1 } from './jsonMap-e142bd84.js';
import { h } from './Graphic-bb07b7e4.js';
import { e as e$2 } from './reader-fa0f173d.js';
import g from './FeatureSet-d8329cbc.js';
import { a as a$1 } from './GPMessage-6f6d167d.js';
import { k } from './SpatialReference-843b1520.js';
import { b } from './Point-ee7951c3.js';
import { M, m as m$3 } from './Polyline-ccd8fb47.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
const t=t=>{if(!Array.isArray(t))return !1;const[e]=t;return "number"==typeof e||"string"==typeof e};class e{constructor(t={}){this._options=t;}toQueryParams(e){if(!e)return null;const o=e.toJSON(),n={};return Object.keys(o).forEach((e=>{const r=this._options[e];if(r){const s="boolean"!=typeof r&&r.name?r.name:e,i="boolean"!=typeof r&&r.getter?r.getter(o):o[e];null!=i&&(n[s]=t(i)?i.join(","):"object"==typeof i?JSON.stringify(i):i);}else n[e]=o[e];}),this),n}}function o(t){return new e(t)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
const i$3=s()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriYards:"yards"});s()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"});s()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"});s()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"});s()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"});const n$1=s()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"});s()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"});s()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"});const m$2=s()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"});

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
var u$3;let c$4=u$3=class extends a{constructor(t){super(t),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null;}clone(){return new u$3(y$2({attributeParameterValues:this.attributeParameterValues,description:this.description,distanceAttributeName:this.distanceAttributeName,id:this.id,impedanceAttributeName:this.impedanceAttributeName,name:this.name,restrictionAttributeNames:this.restrictionAttributeNames,simplificationTolerance:this.simplificationTolerance,simplificationToleranceUnits:this.simplificationToleranceUnits,timeAttributeName:this.timeAttributeName,type:this.type,useHierarchy:this.useHierarchy,uturnAtJunctions:this.uturnAtJunctions}))}};e$1([y$1({type:[Object],json:{write:!0}})],c$4.prototype,"attributeParameterValues",void 0),e$1([y$1({type:String,json:{write:!0}})],c$4.prototype,"description",void 0),e$1([y$1({type:String,json:{write:!0}})],c$4.prototype,"distanceAttributeName",void 0),e$1([y$1({type:String,json:{write:!0}})],c$4.prototype,"id",void 0),e$1([y$1({type:String,json:{write:!0}})],c$4.prototype,"impedanceAttributeName",void 0),e$1([y$1({type:String,json:{write:!0}})],c$4.prototype,"name",void 0),e$1([y$1({type:[String],json:{write:!0}})],c$4.prototype,"restrictionAttributeNames",void 0),e$1([y$1({type:Number,json:{write:!0}})],c$4.prototype,"simplificationTolerance",void 0),e$1([r(i$3)],c$4.prototype,"simplificationToleranceUnits",void 0),e$1([y$1({type:String,json:{write:!0}})],c$4.prototype,"timeAttributeName",void 0),e$1([r(m$2)],c$4.prototype,"type",void 0),e$1([y$1({type:Boolean,json:{write:!0}})],c$4.prototype,"useHierarchy",void 0),e$1([r(n$1)],c$4.prototype,"uturnAtJunctions",void 0),c$4=u$3=e$1([n$2("esri.rest.support.TravelMode")],c$4);var m$1=c$4;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
let p$2=class extends a{constructor(o){super(o),this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null;}};e$1([y$1()],p$2.prototype,"currentVersion",void 0),e$1([y$1()],p$2.prototype,"defaultTravelMode",void 0),e$1([y$1()],p$2.prototype,"directionsLanguage",void 0),e$1([y$1()],p$2.prototype,"directionsSupportedLanguages",void 0),e$1([y$1()],p$2.prototype,"directionsTimeAttribute",void 0),e$1([y$1()],p$2.prototype,"hasZ",void 0),e$1([y$1()],p$2.prototype,"impedance",void 0),e$1([y$1()],p$2.prototype,"networkDataset",void 0),e$1([y$1({type:[m$1]})],p$2.prototype,"supportedTravelModes",void 0),p$2=e$1([n$2("esri.rest.support.NetworkServiceDescription")],p$2);var i$2=p$2;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
const p$1=new o$1({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let c$3=class extends a$1{constructor(r){super(r),this.type=null;}};e$1([y$1({type:String,json:{read:p$1.read,write:p$1.write}})],c$3.prototype,"type",void 0),c$3=e$1([n$2("esri.rest.support.NAMessage")],c$3);var i$1=c$3;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
let u$2=class extends g{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null;}readFeatures(e,o){(e||[]).forEach((e=>{this._decompressFeatureGeometry(e,o.summary.envelope.spatialReference);}));const s=k.fromJSON(o.spatialReference);return e.map((e=>{const o=h.fromJSON(e),a=e.geometry&&e.geometry.spatialReference;return o.geometry&&!a&&(e$3(o.geometry).spatialReference=s),o.strings=e.strings,o.events=(e.events||[]).map((r=>{const o=new h({geometry:new b({x:r.point.x,y:r.point.y,z:r.point.z,hasZ:void 0!==r.point.z,spatialReference:e.geometry&&e.geometry.spatialReference}),attributes:{ETA:r.ETA,arriveTimeUTC:r.arriveTimeUTC}});return o.strings=r.strings,o})),o}))}get mergedGeometry(){if(!this.features)return null;const e=this.features.map((({geometry:e})=>e$3(e))),t=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,t)}get strings(){return this.features.map((({strings:e})=>e))}_decompressFeatureGeometry(e,t){e.geometry=this._decompressGeometry(e.compressedGeometry,t);}_decompressGeometry(e,t){let r=0,o=0,s=0,a=0;const p=[];let n,i,m,l,u,c,y,g,h=0,f=0,d=0;if(u=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),u||(u=[]),0===parseInt(u[h],32)){h=2;const e=parseInt(u[h],32);h++,c=parseInt(u[h],32),h++,1&e&&(f=u.indexOf("|")+1,y=parseInt(u[f],32),f++),2&e&&(d=u.indexOf("|",f)+1,g=parseInt(u[d],32),d++);}else c=parseInt(u[h],32),h++;for(;h<u.length&&"|"!==u[h];){n=parseInt(u[h],32)+r,h++,r=n,i=parseInt(u[h],32)+o,h++,o=i;const e=[n/c,i/c];f&&(l=parseInt(u[f],32)+s,f++,s=l,e.push(l/y)),d&&(m=parseInt(u[d],32)+a,d++,a=m,e.push(m/g)),p.push(e);}return {paths:[p],hasZ:f>0,hasM:d>0,spatialReference:t}}_mergePolylinesToSinglePath(e,t){let r=[];(e||[]).forEach((e=>{e.paths.forEach((e=>{r=r.concat(e);}));}));const o=[];let s=[0,0];return r.forEach((e=>{e[0]===s[0]&&e[1]===s[1]||(o.push(e),s=e);})),new m$3({paths:[o]},t)}};e$1([y$1({type:M,json:{read:{source:"summary.envelope"}}})],u$2.prototype,"extent",void 0),e$1([y$1()],u$2.prototype,"features",void 0),e$1([e$2("features")],u$2.prototype,"readFeatures",null),e$1([y$1()],u$2.prototype,"geometryType",void 0),e$1([y$1({readOnly:!0})],u$2.prototype,"mergedGeometry",null),e$1([y$1()],u$2.prototype,"routeId",void 0),e$1([y$1()],u$2.prototype,"routeName",void 0),e$1([y$1({value:null,readOnly:!0})],u$2.prototype,"strings",null),e$1([y$1({json:{read:{source:"summary.totalDriveTime"}}})],u$2.prototype,"totalDriveTime",void 0),e$1([y$1({json:{read:{source:"summary.totalLength"}}})],u$2.prototype,"totalLength",void 0),e$1([y$1({json:{read:{source:"summary.totalTime"}}})],u$2.prototype,"totalTime",void 0),u$2=e$1([n$2("esri.rest.support.DirectionsFeatureSet")],u$2);var c$2=u$2;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
let i=class extends a{constructor(o){super(o),this.directions=null,this.route=null,this.routeName=null,this.stops=null;}};e$1([y$1({type:c$2,json:{write:!0}})],i.prototype,"directions",void 0),e$1([y$1({type:h,json:{write:!0}})],i.prototype,"route",void 0),e$1([y$1({type:String,json:{write:!0}})],i.prototype,"routeName",void 0),e$1([y$1({type:[h],json:{write:!0}})],i.prototype,"stops",void 0),i=e$1([n$2("esri.rest.support.RouteResult")],i);var c$1=i;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
function n(r){return r&&g.fromJSON(r).features.map((r=>r))}let u$1=class extends a{constructor(r){super(r),this.barriers=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null;}readPointBarriers(r,o){return n(o.barriers||o.pointBarriers)}readPolylineBarriers(r){return n(r)}readPolygonBarriers(r){return n(r)}};e$1([y$1({aliasOf:"pointBarriers"})],u$1.prototype,"barriers",void 0),e$1([y$1({type:[i$1]})],u$1.prototype,"messages",void 0),e$1([y$1({type:[h]})],u$1.prototype,"pointBarriers",void 0),e$1([e$2("pointBarriers",["barriers","pointBarriers"])],u$1.prototype,"readPointBarriers",null),e$1([y$1({type:[h]})],u$1.prototype,"polylineBarriers",void 0),e$1([e$2("polylineBarriers")],u$1.prototype,"readPolylineBarriers",null),e$1([y$1({type:[h]})],u$1.prototype,"polygonBarriers",void 0),e$1([e$2("polygonBarriers")],u$1.prototype,"readPolygonBarriers",null),e$1([y$1({type:[c$1]})],u$1.prototype,"routeResults",void 0),u$1=e$1([n$2("esri.rest.support.RouteResultsContainer")],u$1);var y=u$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
function u(e,r,t,o){o[t]=[r.length,r.length+e.length],e.forEach((e=>{r.push(e.geometry);}));}function p(e,r){for(let t=0;t<r.length;t++){const o=e[r[t]];if(o&&o.length)for(const e of o)e.z=void 0;}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.");}function f(e){const r=[],t=[],{directions:o=[],routes:{features:s=[],spatialReference:a=null}={},stops:{features:l=[],spatialReference:n=null}={},barriers:u,polygonBarriers:p,polylineBarriers:f,messages:d}=e.data,c="esri.tasks.RouteTask.NULL_ROUTE_NAME";let v,m,h=!0;const T=s&&a||l&&n||u&&u.spatialReference||p&&p.spatialReference||f&&f.spatialReference;o.forEach((e=>{r.push(v=e.routeName),t[v]={directions:e};})),s.forEach((e=>{-1===r.indexOf(v=e.attributes.Name)&&(r.push(v),t[v]={}),e.geometry&&(e.geometry.spatialReference=T),t[v].route=e;})),l.forEach((e=>{m=e.attributes,-1===r.indexOf(v=m.RouteName||c)&&(r.push(v),t[v]={}),v!==c&&(h=!1),e.geometry&&(e.geometry.spatialReference=T),null==t[v].stops&&(t[v].stops=[]),t[v].stops.push(e);})),l.length>0&&!0===h&&(t[r[0]].stops=t[c].stops,delete t[c],r.splice(r.indexOf(c),1));const g=r.map((e=>(t[e].routeName=e===c?null:e,t[e])));return y.fromJSON({routeResults:g,pointBarriers:u,polygonBarriers:p,polylineBarriers:f,messages:d})}function d(e,r){for(let o=0;o<r.length;o++){const s=e[r[o]];if(s&&s.length)for(const e of s)if(r$1(e)&&e.hasZ)return !0}return !1}async function c(t,o,s){if(!t)throw new s$1("network-service:missing-url","Url to Network service is missing");const l=r$2({f:"json",token:o},s),{data:i}=await L(t,l);i.supportedTravelModes||(i.supportedTravelModes=[]);for(let e=0;e<i.supportedTravelModes.length;e++)i.supportedTravelModes[e].id||(i.supportedTravelModes[e].id=i.supportedTravelModes[e].itemId);const u=i.currentVersion>=10.4?m(t,o,s):v(t,s),{defaultTravelMode:p,supportedTravelModes:f}=await u;return i.defaultTravelMode=p,i.supportedTravelModes=f,i$2.fromJSON(i)}async function v(r,t){var n,i;const u=r$2({f:"json"},t),{data:p}=await L(r.replace(/\/rest\/.*$/i,"/info"),u);if(!p||!p.owningSystemUrl)return {supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:f}=p,d=gt(f)+"/sharing/rest/portals/self",{data:c}=await L(d,u),v=t$1("helperServices.routingUtilities.url",c);if(!v)return {supportedTravelModes:[],defaultTravelMode:null};const m=e$4(f),h=/\/solve$/i.test(m.path)?"Route":/\/solveclosestfacility$/i.test(m.path)?"ClosestFacility":"ServiceAreas",T=r$2({f:"json",serviceName:h},t),g=gt(v)+"/GetTravelModes/execute",M=await L(g,T),w=[];let y=null;if(null!=M&&null!=(n=M.data)&&null!=(i=n.results)&&i.length){const e=M.data.results;for(const r of e){var N;if("supportedTravelModes"===r.paramName){if(null!=(N=r.value)&&N.features)for(const{attributes:e}of r.value.features)if(e){const r=JSON.parse(e.TravelMode);w.push(r);}}else "defaultTravelMode"===r.paramName&&(y=r.value);}}return {supportedTravelModes:w,defaultTravelMode:y}}async function m(t,o,l){try{const r=r$2({f:"json",token:o},l),n=gt(t)+"/retrieveTravelModes",{data:{supportedTravelModes:i,defaultTravelMode:u}}=await L(n,r);return {supportedTravelModes:i,defaultTravelMode:u}}catch(n){throw new s$1("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:n})}}

export { c as a, c$2 as c, d, f, i$1 as i, o, p, u };
