import { b as p, h, t } from './CIMSymbolHelper-6b8d9205.js';
import { r, i, a } from './cimAnalyzer-ea6a3f24.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
const s=512;class o{dispose(){this._rasterizationCanvas=null;}rasterizeJSONResource(i,s,o){if(this._rasterizationCanvas||(this._rasterizationCanvas=document.createElement("canvas")),"simple-fill"===i.type||"esriSFS"===i.type){const[r,t,a]=p.rasterizeSimpleFill(this._rasterizationCanvas,i.style,s);return {size:[t,a],image:new Uint32Array(r.buffer),sdf:!1,simplePattern:!0,anchorX:0,anchorY:0}}if("simple-line"===i.type||"esriSLS"===i.type){const[r,t,a]=p.rasterizeSimpleLine(i.style,i.cap);return {size:[t,a],image:new Uint32Array(r.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}}let m,l,f;if("simple-marker"===i.type||"esriSMS"===i.type||"line-marker"===i.type?(m=h.fromSimpleMarker(i),f=r(m)):"CIMHatchFill"===i.type?(m=h.fromCIMHatchFill(i),l=new t(m.frame.xmin,-m.frame.ymax,m.frame.xmax-m.frame.xmin,m.frame.ymax-m.frame.ymin)):i.markerPlacement&&"CIMMarkerPlacementInsidePolygon"===i.markerPlacement.type?(m=h.fromCIMInsidePolygon(i),l=new t(m.frame.xmin,-m.frame.ymax,m.frame.xmax-m.frame.xmin,m.frame.ymax-m.frame.ymin)):(m=i,f=r(m)),f&&!o){const[e,r,t]=a(f);return e?{size:[r,t],image:new Uint32Array(e.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}:null}const[c,h$1,p$1,y,u]=h.rasterize(this._rasterizationCanvas,m,l,!o);return c?{size:[h$1,p$1],image:new Uint32Array(c.buffer),sdf:!1,simplePattern:!1,anchorX:y,anchorY:u}:null}rasterizeImageResource(e,r,t,a){this._rasterizationCanvas||(this._rasterizationCanvas=document.createElement("canvas")),this._rasterizationCanvas.width=e,this._rasterizationCanvas.height=r;const n=this._rasterizationCanvas.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):(t.setAttribute("width",`${e}px`),t.setAttribute("height",`${r}px`),n.drawImage(t,0,0,e,r));const o=n.getImageData(0,0,e,r),m=new Uint8Array(o.data);if(a)for(const i of a)if(i&&i.oldColor&&4===i.oldColor.length&&i.newColor&&4===i.newColor.length){const[e,r,t,a]=i.oldColor,[n,s,o,l]=i.newColor;if(e===n&&r===s&&t===o&&a===l)continue;for(let i=0;i<m.length;i+=4)e===m[i]&&r===m[i+1]&&t===m[i+2]&&a===m[i+3]&&(m[i]=n,m[i+1]=s,m[i+2]=o,m[i+3]=l);}let l;for(let i=0;i<m.length;i+=4)l=m[i+3]/255,m[i]=m[i]*l,m[i+1]=m[i+1]*l,m[i+2]=m[i+2]*l;let f=m,c=e,h=r;const p=s;if(c>=p||h>=p){const t=c/h;t>1?(c=p,h=Math.round(p/t)):(h=p,c=Math.round(p*t)),f=new Uint8Array(4*c*h);const a=new Uint8ClampedArray(f.buffer);i(m,e,r,a,c,h,!1);}return {size:[c,h],image:new Uint32Array(f.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}}

export { o };
