import './Loadable-d16b3d7d.js';
import { n, q as c$1 } from './Message-70b34921.js';
import { G } from './unitUtils-b17203be.js';
import { o, i } from './aaBoundingRect-68336c41.js';
import { t } from './Polyline-ccd8fb47.js';
import { b, x as x$1, g as g$1 } from './Point-ee7951c3.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
const c=n.getLogger("esri.layers.support.ElevationSampler");class m{queryElevation(e){return h(e.clone(),this)}on(){return g}projectIfRequired(e,t){return f(e,t)}}class p extends m{constructor(e,t,i){super(),this.tile=e,this.noDataValue=i,this.extent=o(e.tile.extent,t.spatialReference);const o$1=G(t.spatialReference),r=t.lodAt(e.tile.level).resolution*o$1;this.demResolution={min:r,max:r};}get spatialReference(){return this.extent.spatialReference}contains(e){const t$1=this.projectIfRequired(e,this.spatialReference);return t(this.extent,t$1)}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;if(!this.contains(e)){const t=this.extent,n=`${t.xmin}, ${t.ymin}, ${t.xmax}, ${t.ymax}`;c.warn("#elevationAt()",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler extent (${n})`);}return this.tile.sample(t.x,t.y)}}class u extends m{constructor(e,t,n){let o$1;super(),"number"==typeof t?(this.noDataValue=t,o$1=null):(o$1=t,this.noDataValue=n),this.samplers=o$1?e.map((e=>new p(e,o$1,this.noDataValue))):e;const r=this.samplers[0];if(r){this.extent=r.extent.clone();const{min:e,max:t}=r.demResolution;this.demResolution={min:e,max:t};for(let n=1;n<this.samplers.length;n++){const e=this.samplers[n];this.extent.union(e.extent),this.demResolution.min=Math.min(this.demResolution.min,e.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,e.demResolution.max);}}else this.extent=o(i(),o$1.spatialReference),this.demResolution={min:0,max:0};}get spatialReference(){return this.extent.spatialReference}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;for(const n of this.samplers)if(n.contains(t))return n.elevationAt(t);return c.warn("#elevationAt()",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler`),null}}function h(e,t){const n=f(e,t.spatialReference);if(!n)return null;switch(e.type){case"point":x(e,n,t);break;case"polyline":R(e,n,t);break;case"multipoint":d(e,n,t);}return e}function f(e,t){const n=e.spatialReference;return n.equals(t)?e:x$1(n,t)?g$1(e,t):(c.error(`Cannot project geometry spatial reference (wkid:${n.wkid}) to elevation sampler spatial reference (wkid:${t.wkid})`),null)}function x(e,n,s){e.z=c$1(s.elevationAt(n),0);}function R(e,n,s){y.spatialReference=n.spatialReference;const i=e.hasM&&!e.hasZ;for(let o=0;o<e.paths.length;o++){const r=e.paths[o],a=n.paths[o];for(let e=0;e<r.length;e++){const n=r[e],o=a[e];y.x=o[0],y.y=o[1],i&&(n[3]=n[2]),n[2]=c$1(s.elevationAt(y),0);}}e.hasZ=!0;}function d(e,n,s){y.spatialReference=n.spatialReference;const i=e.hasM&&!e.hasZ;for(let o=0;o<e.points.length;o++){const r=e.points[o],a=n.points[o];y.x=a[0],y.y=a[1],i&&(r[3]=r[2]),r[2]=c$1(s.elevationAt(y),0);}e.hasZ=!0;}const y=new b,g={remove(){}};

export { h, u };
