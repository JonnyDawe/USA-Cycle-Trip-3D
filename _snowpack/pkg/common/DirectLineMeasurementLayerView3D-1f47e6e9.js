import { e, p as p$1, N as l$1, l as c$5 } from './JSONSupport-9346590f.js';
import { k as l, t as t$1, r as r$3, q as c$6 } from './Message-70b34921.js';
import { y as y$2, n } from './subclass-fe5fcf78.js';
import { t, e as e$1, d as d$3, g as g$1, y as y$3, v as v$1, f, _ as _$1, l as l$3, a as g$4, h as h$1, b as b$2, c as f$1, s, k, i as g$5, j as e$4 } from './viewUtils-2452231e.js';
import { q as P, a3 as o$3, a4 as M, a5 as n$4, m as p$3 } from './SceneView-f849f26b.js';
import { u as u$1 } from './Handles-af859b7b.js';
import { n as n$1, q as q$2, N as N$1, x as x$1, g as b$1, a as o$2, j as j$1, c as c$1, _, I as I$1, h as r$4, u as u$2, d as d$5, a8 as h$2, e as s$1 } from './mathUtils-a477cc74.js';
import { j } from './watchUtils-06a91cc9.js';
import { geodesicLength as C$1 } from './geometryEngine-b7f060c5.js';
import { m as m$1 } from './Polyline-ccd8fb47.js';
import { n as nn, R as Rn, y as yn } from './projection-c73dd3c4.js';
import { e as O, p as p$2, a as G$1, b as R$1, N as N$2, I as I$2 } from './unitUtils-b17203be.js';
import { a as u$4 } from './intl-21ab9759.js';
import { x as x$2, s as s$2 } from './SimpleLineSymbol-9959d1ea.js';
import { _ as _$2 } from './vec2-513a0296.js';
import { t as t$7 } from './rasterUtils-8b815ad2.js';
import { c as c$2, m as m$2 } from './LineVisualElement-5e33774f.js';
import { e as e$3 } from './vec33-d394808f.js';
import { c as c$3 } from './DefaultMaterial_COLOR_GAMMA-7c4a23ef.js';
import { A as A$1 } from './InterleavedLayout-b66a6862.js';
import { n as n$2, t as t$2, a as r$1, b as e$2, c as t$3, d as n$3, o as o$1, h as t$4, a2 as a, f as t$5, a6 as a$1, aj as t$6, ab as d$4, u as u$3 } from './objectResourceUtils-59d1d140.js';
import { g as g$2, l as l$2, r as r$2 } from './FramebufferObject-238df962.js';
import { r as r$5, c as c$4, i } from './mat4-8eb66d33.js';
import { a as a$2 } from './vec4-8546ad05.js';
import { g as g$3 } from './locale-b874fc68.js';
import { d as d$6 } from './LayerView-0b9de845.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
let A=class extends p$1{constructor(e){super(e),this._unitNormalizer=new t,this._handles=new u$1,this._tempStartPosition=n$1(),this._tempEndPosition=n$1(),this._tempCornerPosition=n$1();}initialize(){this._handles.add(j(this.view,"ready",(()=>this._initialize()),!0));}destroy(){this._handles=l(this._handles);}_initialize(){const e=this.view.spatialReference,t=O(e),s=t===G$1?R$1:t;this._sphericalPCPF=s;const i=nn(e,s);this._unitNormalizer.spatialReference=i?s:e,this._handles.add(l$1((()=>({result:this._computedResult,viewData:this.viewData})),(({result:e,viewData:t})=>{t.result=e;})));}get _computedResult(){const{startPoint:e,endPoint:t}=this.layer;if(t$1(e)||t$1(t))return null;const s=this._euclideanDistances(e,t),i=this._exactGeodesicDistanceAndAngle(e,t,s.horizontal.value);return {directDistance:s.direct,horizontalDistance:s.horizontal,verticalDistance:s.vertical,geodesicDistance:i.distance,geodesicAngle:i.angle}}_euclideanDistances(e,t){const s=e.clone();s.z=t.z;const i=this._tempStartPosition,r=this._tempEndPosition,o=this._tempCornerPosition,a=this.view.spatialReference,n=this._sphericalPCPF,l=nn(a,n)?n:a;Rn(e,i,l),Rn(t,r,l),Rn(s,o,l);const m=q$2(i,r),p=q$2(o,r),d=Math.abs(t.z-e.z),u=e=>this._unitNormalizer.normalizeDistance(e),f=u(m),_=u(p),y=u(d);return {direct:new e$1(f,"meters"),horizontal:new e$1(_,"meters"),vertical:new e$1(y,"meters")}}_exactGeodesicDistanceAndAngle(e,t,s){const i=e.spatialReference,r=new m$1({spatialReference:i});r.addPath([e,t]);const o=i.isGeographic&&d$3(i)?g$1([r],"meters")[0]:i.isWebMercator?C$1(r,"meters"):void 0,{distance:a,angle:n}=o?{distance:o,angle:this._fallbackGeodesicAngle(o,i)}:this._fallbackGeodesicDistance(e,t,s);return {distance:new e$1(a,"meters"),angle:new e$1(n,"degrees")}}_fallbackGeodesicAngle(e,t){return e/p$2(t).metersPerDegree}_fallbackGeodesicDistance(e,t,s){if(yn(e,R)){yn(t,G);const e=b$1(R[0]),s=b$1(R[1]),a=b$1(G[0]),n=b$1(G[1]),c=Math.abs(a-e),l=x$1(Math.sin(s)*Math.sin(n)+Math.cos(s)*Math.cos(n)*Math.cos(c)),m=N$1(l),p={distance:0};return y$3(p,[R[0],R[1]],[G[0],G[1]]),{distance:p.distance,angle:m}}const a=e.spatialReference,n=s;return {distance:n,angle:this._fallbackGeodesicAngle(n,a)}}};e([y$2()],A.prototype,"view",void 0),e([y$2()],A.prototype,"layer",void 0),e([y$2()],A.prototype,"viewData",void 0),e([y$2()],A.prototype,"_computedResult",null),A=e([n("esri.views.3d.layers.analysis.DirectLineMeasurement/DirectLineMeasurementController")],A);const R=n$1(),G=n$1();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
function o(){const o=new n$2;o.vertex.uniforms.add("proj","mat4").add("view","mat4").add("width","float"),o.attributes.add("position","vec3"),o.attributes.add("normal","vec3"),o.attributes.add("uv0","vec2"),o.attributes.add("auxpos1","float"),o.varyings.add("vtc","vec2"),o.varyings.add("vlength","float"),o.varyings.add("vradius","float"),o.vertex.code.add(t$2`void main(void) {
vec3 bitangent = normal;
vtc = uv0;
vlength = auxpos1;
vradius = 0.5 * width;
vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);
gl_Position = proj * pos;
}`),o.fragment.uniforms.add("outlineSize","float").add("outlineColor","vec4").add("stripeLength","float").add("stripeEvenColor","vec4").add("stripeOddColor","vec4");const r=1/Math.sqrt(2);return o.fragment.code.add(t$2`
    const float INV_SQRT2 = ${t$2.float(r)};

    vec4 arrowColor(vec2 tc, float len) {
      float d = INV_SQRT2 * (tc.x - abs(tc.y));
      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));
      d = min(d, 1.0 - abs(tc.y));

      if (d < 0.0) {
        return vec4(0.0);
      } else if (d < outlineSize) {
        return outlineColor;
      } else {
        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;
      }
    }

    void main(void) {
      vec2 ntc = vec2(vtc.x / vradius, vtc.y);
      vec4 color = arrowColor(ntc, vlength / vradius);
      if (color.a == 0.0) {
        discard;
      }
      gl_FragColor = color;
    }
  `),o}var r=Object.freeze({__proto__:null,build:o});

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
class d$2 extends t$3{constructor(r,e,o){super(r,e,o);}initializeProgram(r){const e=d$2.shader.get().build();return new n$3(r.rctx,e,o$1)}bindPass(r,o){t$4(this.program,o.camera.projectionMatrix),this.program.setUniform1f("width",r.width),this.program.setUniform1f("outlineSize",r.outlineSize),this.program.setUniform4fv("outlineColor",r.outlineColor),this.program.setUniform1f("stripeLength",r.stripeLength),this.program.setUniform4fv("stripeEvenColor",r.stripeEvenColor),this.program.setUniform4fv("stripeOddColor",r.stripeOddColor);}bindDraw(r){a(this.program,r),this.program.rebindTextures();}initializePipeline(){return g$2({polygonOffset:this.configuration.polygonOffsetEnabled&&{factor:0,units:-4},depthTest:{func:513},depthWrite:l$2,colorWrite:r$2})}get primitiveType(){return 5}}d$2.shader=new t$5(r,(()=>import('./MeasurementArrow.glsl-73c710e8.js')));class u extends e$2{constructor(){super(...arguments),this.polygonOffsetEnabled=!1;}}e([r$1()],u.prototype,"polygonOffsetEnabled",void 0);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
class h extends a$1{constructor(e){super(e,d$1),this.techniqueConfig=new u;}getTechniqueConfig(){return this.techniqueConfig.polygonOffsetEnabled=this.params.polygonOffset,this.techniqueConfig}dispose(){}getPassParameters(){return this.params}intersect(){}createBufferWriter(){return new w}getGLMaterial(e){return 0===e.output?new m(e):void 0}}class m extends t$6{constructor(e){super(e),this.updateParameters();}updateParameters(){this._technique=this._techniqueRep.releaseAndAcquire(d$2,this._material.getTechniqueConfig(),this._technique);}beginSlot(e){return 3===e}bind(e){this._technique.bindPass(this._material.getPassParameters(),e);}}const d$1={width:32,outlineSize:.2,outlineColor:[1,.5,0,1],stripeLength:1,stripeEvenColor:[1,1,1,1],stripeOddColor:[1,.5,0,1],polygonOffset:!1,...d$4},g=A$1().vec3f("position").vec3f("normal").vec2f("uv0").f32("auxpos1"),v=n$1(),q$1=n$1(),b=n$1(),x=n$1(),C=n$1();class w{constructor(){this.vertexBufferLayout=g;}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return 2*(e.indices.get("position").length/2+1)}write(n,a,c,u){const f=a.vertexAttributes.get("position").data,l=a.vertexAttributes.get("normal").data,p=f.length/3,h=a&&a.indices&&a.indices.get("position");h&&h.length!==2*(p-1)&&console.warn("MeasurementArrowMaterial does not support indices");const m=v,d=q$1,g=b,w=x,P=C,j=n.transformation,y=n.invTranspTransformation,A=c.position,L=c.normal,M=c.uv0;let _$1=0;for(let v=0;v<p;++v){const n=3*v;if(o$2(m,f[n],f[n+1],f[n+2]),v<p-1){const i=3*(v+1);o$2(d,f[i],f[i+1],f[i+2]),o$2(P,l[i],l[i+1],l[i+2]),j$1(P,P),c$1(g,d,m),j$1(g,g),_(w,P,g),j$1(w,w);}const a=q$2(m,d);j&&y&&(I$1(m,m,j),I$1(d,d,j),I$1(w,w,y));const c=u+2*v,h=c+1;A.setVec(c,m),A.setVec(h,m),L.setVec(c,w),L.setVec(h,w),M.set(c,0,_$1),M.set(c,1,-1),M.set(h,0,_$1),M.set(h,1,1),v<p-1&&(_$1+=a);}const T=c.auxpos1;for(let e=0;e<2*p;++e)T.set(u+e,_$1);}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
class d extends c$2{constructor(e){super(e),this._parameters=c,this._handles=null,this._origin=n$1(),this._originTransform=e$3(),this._arrowCenter=n$1(),this._renderOccluded=4,this._geometry=null,this._stripeLength=1,this._stripesEnabled=!0,this.applyProps(e);}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._arrowMaterial&&this._arrowMaterial.setParameterValues({renderOccluded:e}));}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.geometryChanged();}get stripeLength(){return this._stripeLength}set stripeLength(e){this._stripeLength=e,this.attached&&this._arrowMaterial.setParameterValues({stripeLength:this._stripeLength});}get stripesEnabled(){return this._stripesEnabled}set stripesEnabled(e){if(this._stripesEnabled=e,this.attached){const e=this._stripesEnabled?this._parameters.arrowStripeEvenColor:this._parameters.arrowStripeOddColor;this._arrowMaterial.setParameterValues({stripeEvenColor:e});}}createExternalResources(){const r=this._stripesEnabled?this._parameters.arrowStripeEvenColor:this._parameters.arrowStripeOddColor;this._arrowMaterial=new h({outlineColor:this._parameters.arrowOutlineColor,stripeEvenColor:r,stripeOddColor:this._parameters.arrowStripeOddColor,renderOccluded:this.renderOccluded,polygonOffset:!0}),this._handles=new u$1,this._handles.add(this.view.state.watch("camera",(()=>{this.viewChanged();})));}destroyExternalResources(){this._arrowMaterial=null,this._handles.destroy(),this._handles=null;}forEachExternalMaterial(e){e(this._arrowMaterial);}createGeometries(e){if(t$1(this._geometry)||t$1(this._geometry.startRenderSpace)||t$1(this._geometry.endRenderSpace))return;const t=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);e.addGeometry(t,this._arrowMaterial,this._originTransform),this.viewChanged();}_createArrowGeometry(e,r,t,s){const a=this.view.renderCoordsHelper,n=[],l=[],d=(e,r)=>{const s=c$3.get();c$1(s,e,t),n.push(s),l.push(r);};if("euclidean"===s.type){s.eval(.5,this._arrowCenter);const t=c$3.get();a.worldUpAtPosition(this._arrowCenter,t),d(e,t),d(r,t);}else {s.eval(.5,this._arrowCenter);const e=this._parameters.arrowSubdivisions+1&-2;for(let r=0;r<e;++r){const t=r/(e-1),i=c$3.get(),n=c$3.get();s.eval(t,i),a.worldUpAtPosition(i,n),d(i,n);}}return P.createPolylineGeometry(n,l)}geometryChanged(){this.recreateGeometry();}viewChanged(){if(this.view.ready&&this.attached&&r$3(this._geometry)){const e=this.view.state.camera.computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameterValues({width:this._parameters.arrowWidth*e});}}}const c={arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
class y$1 extends c$2{constructor(t){super(t),this._handles=new u$1,this._quadMaterial=null,this._outlineMaterial=null,this._maxSize=0,this._position=n$1(),this._up=n$1(),this._right=n$1(),this._renderOccluded=4,this._color=t$7(1,0,0,1),this._outlineColor=t$7(0,0,0,1),this._outlineSize=0,this._size=32,this._outlineRenderOccluded=16,this.applyProps(t);}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateQuadMaterial());}get color(){return this._color}set color(e){a$2(this._color,e),this._updateQuadMaterial();}get outlineColor(){return this._outlineColor}set outlineColor(e){a$2(this._outlineColor,e),this._updateOutlineMaterial();}get outlineSize(){return this._outlineSize}set outlineSize(e){const t=0===this._outlineSize!=(0===e);this._outlineSize=e,t?this.recreateGeometry():this._updateOutlineMaterial();}get size(){return this._size}set size(e){e!==this._size&&(this._size=e,this._updateTransform());}get outlineRenderOccluded(){return this._outlineRenderOccluded}set outlineRenderOccluded(e){this._outlineRenderOccluded=e,this._updateOutlineMaterial();}set geometry({previous:e,center:t,next:i}){this._maxSize=Math.min(q$2(t,e),q$2(t,i))/3,j$1(this._up,c$1(this._up,e,t)),j$1(this._right,c$1(this._right,i,t)),r$4(this._position,t),this.recreateGeometry();}createExternalResources(){this._quadMaterial=new o$3(this.quadMaterialParameters),this._outlineMaterial=new M(this.outlineMaterialParameters),this._handles.add(this.view.state.watch("camera",(()=>this._updateTransform())));}destroyExternalResources(){this._quadMaterial=null,this._outlineMaterial=null,this._handles.removeAll();}forEachExternalMaterial(e){e(this._quadMaterial),e(this._outlineMaterial);}createGeometries(e){this._createQuadGeometry(e),this._createOutlineGeometry(e),this._updateTransform(e);}_createQuadGeometry(e){const t=this._quadGeometryData(this._up,this._right);e.addGeometry(t,this._quadMaterial);}_createOutlineGeometry(e){if(0===this._outlineSize)return;const t=u$2(c$3.get(),this._up,this._right),i=P.createPolylineGeometry([this._up,t,this._right]);e.addGeometry(i,this._outlineMaterial);}_updateTransform(e=this.object){const a=this.view.state.camera,o=this._size*a.computeScreenPixelSizeAt(this._position),l=Math.min(this._maxSize,o);r$5(z),c$4(z,z,this._position),i(z,z,[l,l,l]),r$3(e)&&(e.transformation=z);}_quadGeometryData(e,t){const i=u$2(c$3.get(),e,t);return new u$3([["position",{size:3,data:[0,0,0,...t,...e,...i],exclusive:!0}]],[["position",new Uint16Array([0,1,2,1,2,3])]])}get quadMaterialParameters(){return {color:this._color,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:this._renderOccluded}}_updateQuadMaterial(){this._quadMaterial&&this._quadMaterial.setParameterValues(this.quadMaterialParameters);}get outlineMaterialParameters(){return {color:this._outlineColor,width:this._outlineSize,renderOccluded:this._outlineRenderOccluded}}_updateOutlineMaterial(){this._outlineMaterial&&this._outlineMaterial.setParameterValues(this.outlineMaterialParameters);}}const z=e$3();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
let U=class extends p$1{constructor(e){super(e),this._params={...Q},this._handles=new u$1,this._segmentVisualElement=null,this._triangleVisualElement=null,this._rightAngleQuad=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._segmentLabel=null,this._verticalLabel=null,this._horizontalLabel=null,this._startPosition=n$1(),this._endPosition=n$1(),this._cornerPosition=n$1(),this._startPositionAtSeaLevel=n$1(),this._endPositionAtSeaLevel=n$1(),this._state=0,this._segmentLabelDisplayedMeasurement=1,this._triangleOrientationOverride=null,this.messages=null,this.viewMode=0,this.visualizedMeasurement=0,this.actualVisualizedMeasurement=1,this.visualElementOrientation=0,this.triangleCollapseRatioThreshold=.03;}get _geodesicDistanceExceeded(){var e;const t=this.layerView.result;return r$3(t)&&(null==(e=t.horizontalDistance)?void 0:e.value)>this.layer.geodesicDistanceThreshold}get ready(){return 1===this._state}get visible(){return this.layerView.visible&&!this.layerView.suspended}get allowVisualElementsOrientationChange(){return t$1(this._triangleOrientationOverride)}set allowVisualElementsOrientationChange(e){t$1(this._triangleOrientationOverride)!==e&&(t$1(this._triangleOrientationOverride)?this._triangleOrientationOverride=this._getActualVisualElementsOrientation():this._triangleOrientationOverride=null);}get labels(){return 2===this.actualVisualizedMeasurement?{direct:this._horizontalLabel,horizontal:this._segmentLabel,vertical:this._verticalLabel}:{direct:this._segmentLabel,horizontal:this._horizontalLabel,vertical:this._verticalLabel}}get testData(){return {labels:this.labels,stripeLength:this._segmentVisualElement.stripeLength}}initialize(){this._handles.add(j(this.view,"ready",(()=>this._initialize()),!0));}_initialize(){switch(this._state){case 1:throw new Error("invalid state");case 2:return}const e=this._params,t={attached:!0,view:this.view};this._segmentVisualElement=new d({...t,geometry:null,renderOccluded:4}),this._triangleVisualElement=new m$2({...t,width:e.triangleLineWidth,color:e.triangleColor,renderOccluded:4}),this._rightAngleQuad=new y$1({...t,color:W,renderOccluded:4});const i={...t,polygonOffset:!0,stippleIntegerRepeats:!1,renderOccluded:4};this._projectedGeodesicLine=new m$2({...i,width:e.geodesicProjectionLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:n$4(e.guideStippleLengthPixels)}),this._geodesicStartHint=new m$2({...i,width:e.guideLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:n$4(e.guideStippleLengthPixels)}),this._geodesicEndHint=new m$2({...i,width:e.guideLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:n$4(e.guideStippleLengthPixels)}),this._segmentLabel=new v$1({...t,fontSize:e.direcLabelFontSize}),this._verticalLabel=new v$1({...t,fontSize:e.verticalLabelFontSize}),this._horizontalLabel=new v$1({...t,fontSize:e.horizontalLabelFontSize}),this._handles.add([c$5((()=>this._updateGeometryAndViewMode())),c$5((()=>this._updateVisualElementVisibility())),c$5((()=>this._updateLabelText())),c$5((()=>this._updateLabelVisibility())),c$5((()=>this._updateSegmentStripeLength())),g$3((async()=>this._updateMessageBundle()))]),this._state=1,this._updateMessageBundle();}destroy(){2!==this._state&&(this._handles=l(this._handles),this._segmentVisualElement=l(this._segmentVisualElement),this._triangleVisualElement=l(this._triangleVisualElement),this._rightAngleQuad=l(this._rightAngleQuad),this._projectedGeodesicLine=l(this._projectedGeodesicLine),this._geodesicStartHint=l(this._geodesicStartHint),this._geodesicEndHint=l(this._geodesicEndHint),this._segmentLabel=l(this._segmentLabel),this._verticalLabel=l(this._verticalLabel),this._horizontalLabel=l(this._horizontalLabel),this.set("view",null),this._state=2);}async whenReady(){await j(this,"ready");}async whenMessages(){await this.whenReady(),await j(this,"messages");}_updateVisualElementVisibility(){if(this._segmentVisualElement.visible=!1,this._triangleVisualElement.visible=!1,this._rightAngleQuad.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,this.visible)switch(this.viewMode){case 0:break;case 1:this._segmentVisualElement.visible=!0;break;case 2:this._segmentVisualElement.visible=!0,this._triangleVisualElement.visible=!0,this._rightAngleQuad.visible=!0;break;case 3:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0;}}_updateGeometryAndViewMode(){const e=this.view.renderCoordsHelper,{startPoint:t,endPoint:i}=this.layer;if(t$1(t)||t$1(i)||t.equals(i)){this.viewMode=0;const e=this.visualizedMeasurement,t=0===e;return void(this.actualVisualizedMeasurement=t?1:e)}e.toRenderCoords(t,this._startPosition),e.toRenderCoords(i,this._endPosition);const s=this._getActualVisualElementsOrientation(),n=this._updateActualVisualizedMeasurement();this.viewMode=this._computeViewMode(n);let r=this._startPosition,a=this._endPosition;const l=1===s?1:-1,h=l*(e.getAltitude(a)-e.getAltitude(r));h<0&&(r=this._endPosition,a=this._startPosition);const c=2===n?new f(this._startPosition,this._endPosition,e.spatialReference):new _$1(this._startPosition,this._endPosition);switch(this._segmentVisualElement.geometry=c,this._updateSegmentStripeLength(),this._segmentLabelDisplayedMeasurement=n,this.viewMode){case 1:this._updateSegment(c,s);break;case 2:this._updateSegmentAndTriangle(c,s,r,a,l,h);break;case 3:this._updateSegmentAndProjection(s);}}_updateSegment(e,t){this._segmentLabel.anchor=1===t?"top":"bottom",this._segmentLabel.geometry={type:"segment",segment:e,sampleLocation:"center"};}_updateSegmentAndTriangle(e,t,i,s,n,r){const a=this.view,o=a.renderCoordsHelper,l=a.state.camera,h=this._cornerPosition;o.worldUpAtPosition(i,h),d$5(h,h,n*Math.abs(r)),u$2(h,h,i),this._triangleVisualElement.geometry=[[[i[0],i[1],i[2]],[h[0],h[1],h[2]],[s[0],s[1],s[2]]]],this._rightAngleQuad.geometry={previous:i,center:h,next:s};const c=new _$1(i,h),d=new _$1(h,s),u=F(i,s,h,t,l);this._segmentLabel.anchor=u.segment,this._segmentLabel.geometry={type:"segment",segment:e,sampleLocation:"center"},this._verticalLabel.geometry={type:"segment",segment:c,sampleLocation:"center"},this._verticalLabel.anchor=u.vertical,this._horizontalLabel.geometry={type:"segment",segment:d,sampleLocation:"center"},this._horizontalLabel.anchor=u.horizontal;}_updateSegmentAndProjection(e){const t=this.view.renderCoordsHelper;t.setAltitude(this._startPositionAtSeaLevel,0,this._startPosition),t.setAltitude(this._endPositionAtSeaLevel,0,this._endPosition);const i=new f(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,t.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(i),this._geodesicStartHint.setGeometryFromSegment(new _$1(this._startPositionAtSeaLevel,this._startPosition)),this._geodesicEndHint.setGeometryFromSegment(new _$1(this._endPositionAtSeaLevel,this._endPosition)),this._segmentLabel.geometry={type:"segment",segment:i,sampleLocation:"center"},this._segmentLabel.anchor=1===e?"top":"bottom";}_updateLabelText(){if(1!==this._state)return;const e=this._segmentLabel,t=this._horizontalLabel,i=this._verticalLabel,s=this.messages,n=this.layerView.result;if(t$1(n)||t$1(s))return e.text=null,t.text=null,void(i.text=null);const r=this._getLabelsText(s,n),a=1===this._segmentLabelDisplayedMeasurement;e.text=a?r.euclideanDistance:r.geodesicDistance,t.text=r.horizontalDistance,i.text=r.verticalDistance,this.notifyChange("labels");}_updateLabelVisibility(){if(1!==this._state)return;const e=this._segmentLabel,t=this._horizontalLabel,i=this._verticalLabel;if(e.visible=!1,t.visible=!1,i.visible=!1,this.visible)switch(this.viewMode){case 1:e.visible=!0;break;case 2:e.visible=!0,t.visible=!0,i.visible=!0;break;case 3:e.visible=!0;}}_getLabelsText(e,{directDistance:t,horizontalDistance:i,verticalDistance:s$1,geodesicDistance:n,geodesicAngle:r}){const a=this.layerView.unit,o=e=>({euclideanDistance:"",geodesicDistance:"",horizontalDistance:"",verticalDistance:"",...e});switch(a){case"metric":return o({euclideanDistance:t&&f$1(e,t),geodesicDistance:n&&f$1(e,n),horizontalDistance:i&&f$1(e,i),verticalDistance:s$1&&s(e,s$1)});case"imperial":return o({euclideanDistance:t&&h$1(e,t),geodesicDistance:n&&h$1(e,n),horizontalDistance:i&&h$1(e,i),verticalDistance:s$1&&b$2(e,s$1)});case"degrees":{const t=r&&l$3(e,r,"degrees");return o({euclideanDistance:t,geodesicDistance:t,horizontalDistance:t})}case"degrees-minutes-seconds":return o({horizontalDistance:r&&g$4(r)});default:return o({euclideanDistance:t&&l$3(e,t,a),geodesicDistance:n&&l$3(e,n,a),horizontalDistance:i&&l$3(e,i,a),verticalDistance:s$1&&l$3(e,s$1,a)})}}_updateSegmentStripeLength(){const e=this._measurementArrowStripeLength,t=this._segmentVisualElement;r$3(e)?(t.stripeLength=e,t.stripesEnabled=!0):t.stripesEnabled=!1;}_computeViewMode(e){if(2===e){if(!this._geodesicDistanceExceeded)return 1;if(this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition))return 3}const t=this.layerView.result;if(t$1(t))return 1;const{verticalDistance:i,horizontalDistance:s}=t,n=i.value,r=s.value;return Math.min(n/r,r/n)<this.triangleCollapseRatioThreshold?1:2}_getActualVisualElementsOrientation(){if(r$3(this._triangleOrientationOverride))return this._triangleOrientationOverride;const e=this.visualElementOrientation;return 0===e?this.view.state.camera.aboveGround?1:2:e}_updateActualVisualizedMeasurement(){if(0===this.visualizedMeasurement){this.actualVisualizedMeasurement=1;const e=this.layerView.unit;"degrees"!==e&&"degrees-minutes-seconds"!==e||(this.actualVisualizedMeasurement=2),this._geodesicDistanceExceeded&&(this.actualVisualizedMeasurement=2);}else this.actualVisualizedMeasurement=this.visualizedMeasurement;return this.actualVisualizedMeasurement}_requiresGeodesicGuideAt(e){const t=this.view;if(!t.state)return !1;const i=t.state.camera,s=t.renderCoordsHelper,n=i.computeScreenPixelSizeAt(e);return s.getAltitude(e)/n>=10}get _measurementArrowStripeLength(){const e=this.view,{result:t,unit:i}=this.layerView;let n=null;if(r$3(t)){const e=t.directDistance;switch(i){case"metric":n=e&&e.toUnit("meters");break;case"imperial":n=e&&e.toUnit(N$2(e.value,e.unit));break;case"degrees":case"degrees-minutes-seconds":{const e=t.geodesicAngle;n=e&&e.toUnit("degrees");break}default:n=e&&e.toUnit(i);}}if(n){let t=1;return t=h$2(n.value/30),t*="degrees"===n.unit?p$2(e.spatialReference).metersPerDegree:I$2(1,n.unit,"meters"),t}return null}_updateMessageBundle(){u$4("esri/core/t9n/Units").then((e=>{this.messages=e,this.view&&this._updateLabelText();}));}};function F(e,t,i,s,r){const a=B,o=I;r.projectToRenderScreen(i,a),r.projectToRenderScreen(t,o);const l={segment:"bottom",horizontal:"top",vertical:a[0]<o[0]?"left":"right"};{const s=J,a=K;if(k(e,i,s,r),k(e,t,a,r),_$2(s,a)>=q){const e=s$1(s[1])===s$1(a[1]);l.segment=e?g$5(l.vertical):l.vertical;}else {const e=N;k(i,t,e,r),_$2(e,a)>=q&&(l.segment=s$1(e[0])===s$1(a[0])?g$5(l.horizontal):l.horizontal);}}if(2===s){const e=e=>"top"===e?"bottom":"top";l.segment=e(l.segment),l.horizontal=e(l.horizontal),l.vertical=e(l.vertical);}return l}e([y$2()],U.prototype,"_state",void 0),e([y$2()],U.prototype,"_segmentLabelDisplayedMeasurement",void 0),e([y$2()],U.prototype,"_triangleOrientationOverride",void 0),e([y$2()],U.prototype,"_geodesicDistanceExceeded",null),e([y$2()],U.prototype,"messages",void 0),e([y$2()],U.prototype,"view",void 0),e([y$2()],U.prototype,"layer",void 0),e([y$2()],U.prototype,"layerView",void 0),e([y$2({readOnly:!0})],U.prototype,"ready",null),e([y$2({readOnly:!0})],U.prototype,"visible",null),e([y$2()],U.prototype,"viewMode",void 0),e([y$2()],U.prototype,"visualizedMeasurement",void 0),e([y$2()],U.prototype,"actualVisualizedMeasurement",void 0),e([y$2()],U.prototype,"visualElementOrientation",void 0),e([y$2()],U.prototype,"triangleCollapseRatioThreshold",void 0),e([y$2()],U.prototype,"allowVisualElementsOrientationChange",null),e([y$2()],U.prototype,"labels",null),e([y$2()],U.prototype,"testData",null),e([y$2()],U.prototype,"_measurementArrowStripeLength",null),U=e([n("esri.views.3d.layers.DirectLineMeasurement.DirectLineMeasurementView")],U);const W=t$7(1,.5,0,.75),Q={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,triangleColor:W,triangleLineWidth:3,triangleCornerSize:32,triangleSubdivisions:128,arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128,geodesicProjectionLineWidth:2,geodesicProjectionLineColor:W,guideLineWidth:2,guideLineColor:W,guideStippleLengthPixels:6,labelDistance:25,direcLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12},q=Math.cos(b$1(12)),B=x$2(),I=x$2(),J=s$2(),K=s$2(),N=s$2();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
let p=class extends(p$3(d$6)){constructor(e){super(e),this._userUnit=null,this.type="direct-line-measurement-3d",this.result=null;}set unit(e){this._userUnit=e;}get unit(){return c$6(this._userUnit,this._defaultUnit)}get viewMode(){return this._analysisView.viewMode}get visualizedMeasurement(){return this._analysisView.visualizedMeasurement}set visualizedMeasurement(e){this._analysisView.visualizedMeasurement=e;}get actualVisualizedMeasurement(){return this._analysisView.actualVisualizedMeasurement}get visualElementOrientation(){return this._analysisView.visualElementOrientation}set visualElementOrientation(e){this._analysisView.visualElementOrientation=e;}get allowVisualElementsOrientationChange(){return this._analysisView.allowVisualElementsOrientationChange}set allowVisualElementsOrientationChange(e){this._analysisView.allowVisualElementsOrientationChange=e;}get triangleCollapseRatioThreshold(){return this._analysisView.triangleCollapseRatioThreshold}set triangleCollapseRatioThreshold(e){this._analysisView.triangleCollapseRatioThreshold=e;}get directLabelText(){return this._analysisView.labels.direct.text}get horizontalLabelText(){return this._analysisView.labels.horizontal.text}get verticalLabelText(){return this._analysisView.labels.vertical.text}get testData(){return this._analysisView.testData}initialize(){const e=this.view,t=this.layer;this._analysisView=new U({view:e,layer:t,layerView:this}),this._analysisController=new A({view:e,layer:t,viewData:this});}destroy(){l(this._analysisController),l(this._analysisView);}whenReady(){return this._analysisView.whenReady()}whenMessages(){return this._analysisView.whenMessages()}};e([y$2(e$4)],p.prototype,"_defaultUnit",void 0),e([y$2()],p.prototype,"_userUnit",void 0),e([y$2()],p.prototype,"_analysisView",void 0),e([y$2()],p.prototype,"_analysisController",void 0),e([y$2()],p.prototype,"type",void 0),e([y$2()],p.prototype,"unit",null),e([y$2()],p.prototype,"layer",void 0),e([y$2()],p.prototype,"result",void 0),e([y$2({readOnly:!0})],p.prototype,"viewMode",null),e([y$2()],p.prototype,"visualizedMeasurement",null),e([y$2({readOnly:!0})],p.prototype,"actualVisualizedMeasurement",null),e([y$2()],p.prototype,"visualElementOrientation",null),e([y$2()],p.prototype,"allowVisualElementsOrientationChange",null),e([y$2()],p.prototype,"triangleCollapseRatioThreshold",null),e([y$2({readOnly:!0})],p.prototype,"directLabelText",null),e([y$2({readOnly:!0})],p.prototype,"horizontalLabelText",null),e([y$2({readOnly:!0})],p.prototype,"verticalLabelText",null),e([y$2()],p.prototype,"testData",null),p=e([n("esri.views.3d.layers.DirectLineMeasurementLayerView3D")],p);var y=p;

var DirectLineMeasurementLayerView3D = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': y
});

export { DirectLineMeasurementLayerView3D as D, o };
