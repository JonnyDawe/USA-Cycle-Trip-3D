import { e, p as p$1 } from './JSONSupport-9346590f.js';
import { d as d$1, h as h$1 } from './watchUtils-06a91cc9.js';
import { y as y$1, n as n$1 } from './subclass-fe5fcf78.js';
import { n, r as r$2 } from './Message-70b34921.js';
import { l } from './LayerView2D-71fd8a44.js';
import { h } from './Graphic-bb07b7e4.js';
import { L } from './Loadable-d16b3d7d.js';
import { B, g as g$1 } from './promiseUtils-2ff2b194.js';
import { c } from './SimpleLineSymbol-9959d1ea.js';
import { r } from './enumeration-7d0c165d.js';
import { M } from './Polyline-ccd8fb47.js';
import { j } from './rasterProjectionHelper-d073bfab.js';
import { p as p$2 } from './vectorFieldUtils-8c5e98e3.js';
import { u as u$1 } from './GraphicsCollection-60679841.js';
import { r as r$1 } from './Container-a08586d2.js';
import { i } from './GraphicContainer-b574d9d6.js';
import { i as it } from './BaseGraphicContainer-f951d3b8.js';
import { m } from './pixelUtils-a2254b8d.js';
import { t } from './BitmapContainer-0013893c.js';
import { e as e$1 } from './Bitmap-77e47ee2.js';
import { S } from './ExportStrategy-9167d5a1.js';
import { u as u$2 } from './ImageryLayerView-42a25562.js';
import { d as d$2 } from './LayerView-0b9de845.js';
import { aa as p$3 } from './DefaultUI-99d89841.js';
import './Collection-32506e74.js';
import './collectionUtils-a13e45d8.js';
import './Point-ee7951c3.js';
import './reader-fa0f173d.js';
import './SpatialReference-843b1520.js';
import './jsonUtils-f0a19240.js';
import './PopupTemplate-d97f5e88.js';
import './fieldUtils-22be41cd.js';
import './jsonMap-e142bd84.js';
import './intl-21ab9759.js';
import './locale-b874fc68.js';
import './assets-73c8998f.js';
import './Identifiable-3ad643f8.js';
import './symbols-9e680ec7.js';
import './Color-ae84a22a.js';
import './mathUtils-a477cc74.js';
import './opacityUtils-b92214c2.js';
import './persistableUrlUtils-59858a7e.js';
import './Portal-ff63481f.js';
import './uid-6beaca4c.js';
import './unitUtils-b17203be.js';
import './projection-c73dd3c4.js';
import './mat4-8eb66d33.js';
import './aaBoundingRect-68336c41.js';
import './DisplayObject-8d4c95bb.js';
import './mat4f32-5ff6470f.js';
import './Utils-12055aa8.js';
import './Texture-454f8135.js';
import './HandleOwner-fbf91095.js';
import './Handles-af859b7b.js';
import './normalizeUtils-5edbbb73.js';
import './projectionSupport-87ac6706.js';
import './json-1b357c88.js';
import './Matcher-68df2c03.js';
import './definitions-8237c146.js';
import './TileStrategy-7442f970.js';
import './vec2-513a0296.js';
import './TileInfoView-a80dd3da.js';
import './Queue-a5bdb7c1.js';
import './TileKey-86c6b8c5.js';
import './TileStore-c9add4a8.js';
import './featureConversionUtils-3ad98dca.js';
import './OptimizedFeature-ccef5b1d.js';
import './OptimizedFeatureSet-be12a9b8.js';
import './FeatureSetReader-bf914a8a.js';
import './centroid-80fbdb27.js';
import './diffUtils-530d997b.js';
import './FieldsIndex-f71b4f3d.js';
import './visualVariablesUtils-d2faa315.js';
import './visualVariablesUtils-32ef6e0c.js';
import './quickselect-f4197880.js';
import './Query-619f76b0.js';
import './TimeExtent-02acfb1c.js';
import './Field-728fb193.js';
import './fieldType-6799091f.js';
import './tileUtils-00f68691.js';
import './schemaUtils-80abf9d4.js';
import './UniqueValueRenderer-260b50e9.js';
import './jsonUtils-4c6963ee.js';
import './ColorStop-ed1033bb.js';
import './sizeVariableUtils-6d1564c8.js';
import './visualVariableUtils-86a9e524.js';
import './compilerUtils-7bbb76dc.js';
import './lengthUtils-824a0190.js';
import './styleUtils-8b593a34.js';
import './jsonUtils-cb46c967.js';
import './LRUCache-eed24cc2.js';
import './MemCache-b33cfc4b.js';
import './MaterialKey-5b784827.js';
import './CIMSymbolHelper-6b8d9205.js';
import './vec2f32-556b449a.js';
import './Rect-b93f4c2a.js';
import './BidiEngine-e1f5d573.js';
import './MD5-e12d5739.js';
import './defaults-31c9613a.js';
import './defaultsJSON-0467bd38.js';
import './GeometryUtils-d396765a.js';
import './earcut-d81146f9.js';
import './TileClipper-d1dfdbf2.js';
import './cimAnalyzer-ea6a3f24.js';
import './callExpressionWithFeature-28066cb0.js';
import './quantizationUtils-28a0adf6.js';
import './FramebufferObject-238df962.js';
import './FeatureContainer-80ee0f52.js';
import './TiledDisplayObject-38ffcb88.js';
import './mat3-6cb40036.js';
import './TileContainer-b847de65.js';
import './WGLContainer-b2490c0f.js';
import './brushes-b53a5560.js';
import './rasterUtils-8b815ad2.js';
import './ShaderCompiler-b2adc15a.js';
import './config-b1f55e66.js';
import './vec2f64-3fb878b3.js';
import './capabilities-39806eb7.js';
import './GraphicsView-6dd0c891.js';
import './TileInfo-c32d8db8.js';
import './OperationalLayer-a01538e1.js';
import './popupUtils-fde61b0c.js';
import './Map-566c621c.js';
import './Basemap-ad33b4b0.js';
import './loadAll-37e49bde.js';
import './asyncUtils-015dfd6e.js';
import './PortalItem-4692b2a9.js';
import './writeUtils-7e5aaca1.js';
import './CollectionFlattener-af542a66.js';
import './basemapUtils-9ae6960d.js';
import './TablesMixin-751fb22e.js';
import './Layer-aafbe66d.js';
import './HeightModelInfo-992659fb.js';
import './widget-734a78a2.js';
import './uuid-630c0c55.js';
import './QueryTask-55cf149f.js';
import './Task-41e0c8b8.js';
import './query-de9ba206.js';
import './pbfQueryUtils-9ef2116f.js';
import './pbf-9fd5cf83.js';
import './queryZScale-688c1e0e.js';
import './zscale-9df5d655.js';
import './TopFeaturesQuery-b22907ac.js';
import './FeatureSet-d8329cbc.js';
import './FeatureLayer-a1f2dd15.js';
import './MultiOriginJSONSupport-859401da.js';
import './workers-bd1ea274.js';
import './APIKeyMixin-7fe44a14.js';
import './ArcGISService-32a080a6.js';
import './arcgisLayerUrl-cb5a8728.js';
import './BlendLayer-b9fc1ffb.js';
import './CustomParametersMixin-79fc7530.js';
import './PortalLayer-722467e6.js';
import './RefreshableLayer-a609d261.js';
import './ScaleRangeLayer-9b1bf210.js';
import './TemporalLayer-f1ac30a1.js';
import './TimeInfo-ba3374ff.js';
import './labelingInfo-c6f27ee6.js';
import './LabelClass-e4354cdb.js';
import './labelUtils-7d1afc11.js';
import './featureReductionUtils-78800e19.js';
import './FeatureType-97537d09.js';
import './fieldProperties-4363f1e0.js';
import './styleUtils-58b9b121.js';
import './popupUtils-5b007a8e.js';
import './utils-4028018e.js';
import './ItemCache-2457b327.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
const v=n.getLogger("esri.views.2d.layers.imagery.ImageryGraphicsView2D");let _=class extends p$1{constructor(){super(...arguments),this.attached=!1,this.container=new r$1,this.updateRequested=!1,this._graphicsView=null,this._projectFullExtentPromise=null,this._previousExtents=[],this._previousSymbolTileResolution=0,this._previousRendererSignature="",this.type="Graphics",this._graphics=new u$1,this._updateGraphics=B((async(e,t)=>{if(!e.stationary)return;const i=e.state,r=new M({xmin:i.extent.xmin,ymin:i.extent.ymin,xmax:i.extent.xmax,ymax:i.extent.ymax,spatialReference:i.spatialReference}),[s,o]=e.state.size,n={};n.timeExtent=this.timeExtent,n.requestAsImageElement=!1,n.signal=t,null==this._projectFullExtentPromise&&(this._projectFullExtentPromise=this._getProjectedFullExtent(r.spatialReference));const p="vector-field"===this.layer.renderer.type?this.layer.renderer.symbolTileSize:50,h=await this._projectFullExtentPromise,{extent:c,resolution:l,width:m,height:y}=p$2(r,s,o,p,h),g=await this.layer.fetchImage(c,m,y,n),x=this.layer.renderer;if("vector-field"===x.type){const t=g.pixelData.pixelBlock,i=x.sizeVariables[0];i.minDataValue&&i.maxDataValue||(i.minDataValue=t.statistics[0].minValue,i.maxDataValue=t.statistics[0].maxValue),this._pixelData={extent:c,pixelBlock:g.pixelData.pixelBlock};const r=JSON.stringify(this.layer.renderer),s=this._previousRendererSignature===r,o=Math.abs(this._previousSymbolTileResolution-l)/l<.01,n=c.clone().normalize(),p=this._previousExtents.some((e=>n.some((t=>e.intersects(t))))),h=s&&o&&p?this._previousExtents:[],u=await x.getGraphicsFromPixelData(g.pixelData,"vector-uv"===this.layer.rasterInfo.dataType,h);if(h.length){const e=this._graphics.items.filter((e=>r$2(e.geometry)&&h.some((t=>t.intersects(e.geometry)))&&!n.some((t=>t.intersects(e.geometry)))));this._graphics.removeMany(e),this._graphics.addMany(u);}else this._graphics.set("items",u);this._graphicsView.update(e),this._previousExtents=n,this._previousRendererSignature=r,this._previousSymbolTileResolution=l;}}));}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1;}get updating(){return !this.attached||this.isUpdating()}update(e){this._updateGraphics(e).catch((e=>{g$1(e)||v.error(e);}));}hitTest(e,i){const r=this.view.toMap(c(e,i));return Promise.resolve(new h({attributes:{},geometry:r,layer:this.layer}))}attach(){this._graphicsView=new it({view:this.view,graphics:this._graphics,requestUpdateCallback:()=>this.requestUpdate(),container:new i(this.view.featuresTilingScheme)}),this.attached=!0;}detach(){this._graphics.destroy(),this._graphicsView.destroy(),this.container.removeChild(this._graphicsView.container),this._graphicsView=null;}moveStart(){}viewChange(){}moveEnd(){}install(e){this.container.addChild(this._graphicsView.container),e.addChild(this.container);}uninstall(e){this.container.removeChild(this._graphicsView.container),e.removeChild(this.container);}isUpdating(){return this._graphicsView.updating||this.updateRequested}getPixelData(){return this.updating?null:this._pixelData}redraw(){}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate());}async _getProjectedFullExtent(e){try{return await j(this.layer.fullExtent,e)}catch(t){try{const t=(await L(this.layer.url,{query:{option:"footprints",outSR:e.wkid||JSON.stringify(e.toJSON()),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return t?M.fromJSON(t):null}catch{return null}}}};e([y$1()],_.prototype,"attached",void 0),e([y$1()],_.prototype,"container",void 0),e([y$1()],_.prototype,"layer",void 0),e([y$1()],_.prototype,"timeExtent",void 0),e([y$1()],_.prototype,"view",void 0),e([y$1()],_.prototype,"updateRequested",void 0),e([y$1()],_.prototype,"updating",null),e([r({graphics:"Graphics"})],_.prototype,"type",void 0),_=e([n$1("esri.views.2d.layers.imagery.ImageryGraphicsView2D")],_);var w=_;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
const u=n.getLogger("esri.views.2d.layers.imagery.ImageryView2D");let g=class extends p$1{constructor(){super(...arguments),this.attached=!1,this.container=new r$1,this.updateRequested=!1,this.type="Imagery",this._bitmapView=null;}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1;}get updating(){return !this.attached||this.isUpdating()}update(e){this.strategy.update(e).catch((e=>{g$1(e)||u.error(e);}));}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren();}hitTest(e,r){const i=this.view.toMap(c(e,r));return Promise.resolve(new h({attributes:{},geometry:i,layer:this.layer}))}attach(){const e=this.layer.version>=10,t$1=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,r=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this._bitmapView=new t,this.strategy=new S({container:this._bitmapView,imageNormalizationSupported:e,imageMaxHeight:t$1,imageMaxWidth:r,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()}),this.attached=!0;}moveStart(){}viewChange(){}moveEnd(){}install(e){this.container.addChild(this._bitmapView),e.addChild(this.container);}uninstall(e){this.container.removeChild(this._bitmapView),e.removeChild(this.container);}redraw(){this.strategy.updateExports((e=>{e.source instanceof HTMLImageElement?e.requestRender():this.layer.applyRenderer({pixelBlock:e.source.pixelBlock}).then((t=>{const r=e.source;r.pixelBlock=t.pixelBlock,r.filter=e=>this.layer.applyFilter(e),this.container.requestRender();}));}));}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate());}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const e=this.strategy.bitmaps;if(1===e.length&&e[0].source)return {extent:e[0].source.extent,pixelBlock:e[0].source.originalPixelBlock};if(e.length>1){const t=this.view.extent,r=e.map((e=>e.source)).filter((e=>e.extent&&e.extent.intersects(t))).map((e=>({extent:e.extent,pixelBlock:e.originalPixelBlock}))),i=m(r,t);return i?{extent:i.extent,pixelBlock:i.pixelBlock}:null}return null}_fetchImage(e,t,r,i){return (i=i||{}).timeExtent=this.timeExtent,i.requestAsImageElement=!0,this.layer.fetchImage(e,t,r,i).then((e=>e.imageElement?e.imageElement:this.layer.applyRenderer(e.pixelData,{signal:i.signal}).then((t=>{const r=new e$1(t.pixelBlock,t.extent.clone(),e.pixelData.pixelBlock);return r.filter=e=>this.layer.applyFilter(e),r}))))}};e([y$1()],g.prototype,"attached",void 0),e([y$1()],g.prototype,"container",void 0),e([y$1()],g.prototype,"layer",void 0),e([y$1()],g.prototype,"strategy",void 0),e([y$1()],g.prototype,"timeExtent",void 0),e([y$1()],g.prototype,"view",void 0),e([y$1()],g.prototype,"updateRequested",void 0),e([y$1()],g.prototype,"updating",null),e([r({imagery:"Imagery"})],g.prototype,"type",void 0),g=e([n$1("esri.views.2d.layers.imagery.ImageryView2D")],g);var y=g;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
let p=class extends(u$2(p$3(l(d$2)))){constructor(){super(...arguments),this._exportImageVersion=-1;}initialize(){this.handles.add(d$1(this,["layer.blendMode"],(e=>{this.subview&&(this.subview.container.blendMode=e);}),!0));}get pixelData(){return this.updating?null:this.subview.getPixelData()}get updating(){return !(this.subview&&!this.subview.updating)}hitTest(e,t){return this.suspended||!this.subview?Promise.resolve(null):this.subview.hitTest(e,t)}update(e){var t;null==(t=this.subview)||t.update(e);}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.handles.add([d$1(this,"layer.exportImageServiceParameters.version",(e=>{this._exportImageVersion!==e&&(this._exportImageVersion=e,this.requestUpdate());})),this.watch("timeExtent",(()=>{this.subview.timeExtent=this.timeExtent,this.requestUpdate();})),this.layer.on("redraw",(()=>this.subview.redraw())),h$1(this.layer,"renderer",(()=>this._setSubView()))],"imagerylayerview-update");}detach(){this.layer.decreaseRasterJobHandlerUsage(),this.subview.destroy(),this.handles.remove("imagerylayerview-update"),this._exportImageVersion=-1;}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate();}async doRefresh(){this.requestUpdate();}isUpdating(){return !this.subview||!this.suspended&&this.subview.isUpdating()}_setSubView(){var e;let t="Imagery";var s,i;("vector-field"===(null==(e=this.layer.renderer)?void 0:e.type)&&"lerc"===this.layer.format&&(t="Graphics"),this.subview&&this.subview.type===t)||(null==(s=this.subview)||s.uninstall(this.container),null==(i=this.subview)||i.destroy(),this.subview="Imagery"===t?new y({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new w({layer:this.layer,view:this.view,timeExtent:this.timeExtent}),this.subview.attach(),this.subview.install(this.container),this.subview.container.blendMode=this.layer.blendMode);this.requestUpdate();}};e([y$1()],p.prototype,"pixelData",null),e([y$1({readOnly:!0})],p.prototype,"updating",null),e([y$1()],p.prototype,"subview",void 0),p=e([n$1("esri.views.2d.layers.ImageryLayerView2D")],p);var d=p;

export default d;
