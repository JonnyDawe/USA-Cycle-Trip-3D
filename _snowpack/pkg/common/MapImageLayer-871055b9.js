import { t as t$1, e as e$2, o as o$1 } from './JSONSupport-9346590f.js';
import { L } from './Loadable-d16b3d7d.js';
import { y as y$1 } from './TimeExtent-02acfb1c.js';
import { w as w$1, s as s$1, g } from './promiseUtils-2ff2b194.js';
import { a } from './HandleOwner-fbf91095.js';
import { n as n$1 } from './loadAll-37e49bde.js';
import { r } from './Message-70b34921.js';
import { l as l$1 } from './MultiOriginJSONSupport-859401da.js';
import { y as y$2, N, n as n$2 } from './subclass-fe5fcf78.js';
import { e as e$3 } from './reader-fa0f173d.js';
import { M } from './Polyline-ccd8fb47.js';
import { r as r$1 } from './scaleUtils-10613b70.js';
import { b } from './Layer-aafbe66d.js';
import { i } from './APIKeyMixin-7fe44a14.js';
import { f, y, Q } from './SublayersOwner-55e0adb7.js';
import { p } from './ArcGISService-32a080a6.js';
import { t } from './BlendLayer-b9fc1ffb.js';
import { e } from './CustomParametersMixin-79fc7530.js';
import { l, p as p$1 } from './OperationalLayer-a01538e1.js';
import { w } from './PortalLayer-722467e6.js';
import { o } from './RefreshableLayer-a609d261.js';
import { s } from './ScaleRangeLayer-9b1bf210.js';
import { c } from './TemporalLayer-f1ac30a1.js';
import { n } from './ExportImageParameters-4acfb7aa.js';
import { e as e$1 } from './sublayerUtils-44da4097.js';
import './Point-ee7951c3.js';
import './SpatialReference-843b1520.js';
import './jsonMap-e142bd84.js';
import './Handles-af859b7b.js';
import './Collection-32506e74.js';
import './watchUtils-06a91cc9.js';
import './asyncUtils-015dfd6e.js';
import './unitUtils-b17203be.js';
import './Identifiable-3ad643f8.js';
import './Version-271d30d5.js';
import './CollectionFlattener-af542a66.js';
import './PopupTemplate-d97f5e88.js';
import './fieldUtils-22be41cd.js';
import './enumeration-7d0c165d.js';
import './intl-21ab9759.js';
import './locale-b874fc68.js';
import './assets-73c8998f.js';
import './UniqueValueRenderer-260b50e9.js';
import './symbols-9e680ec7.js';
import './SimpleLineSymbol-9959d1ea.js';
import './Color-ae84a22a.js';
import './mathUtils-a477cc74.js';
import './opacityUtils-b92214c2.js';
import './persistableUrlUtils-59858a7e.js';
import './collectionUtils-a13e45d8.js';
import './Portal-ff63481f.js';
import './jsonUtils-4c6963ee.js';
import './ColorStop-ed1033bb.js';
import './diffUtils-530d997b.js';
import './sizeVariableUtils-6d1564c8.js';
import './visualVariableUtils-86a9e524.js';
import './Graphic-bb07b7e4.js';
import './uid-6beaca4c.js';
import './jsonUtils-f0a19240.js';
import './compilerUtils-7bbb76dc.js';
import './lengthUtils-824a0190.js';
import './styleUtils-8b593a34.js';
import './jsonUtils-cb46c967.js';
import './LRUCache-eed24cc2.js';
import './MemCache-b33cfc4b.js';
import './FeatureType-97537d09.js';
import './Field-728fb193.js';
import './fieldType-6799091f.js';
import './FieldsIndex-f71b4f3d.js';
import './LabelClass-e4354cdb.js';
import './labelUtils-7d1afc11.js';
import './defaults-31c9613a.js';
import './defaultsJSON-0467bd38.js';
import './Query-619f76b0.js';
import './popupUtils-5b007a8e.js';
import './arcgisLayerUrl-cb5a8728.js';
import './PortalItem-4692b2a9.js';
import './TimeInfo-ba3374ff.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
let U=class extends(t(c(s(o(f(y(p(l(w(l$1(i(e(a(b)))))))))))))){constructor(...e){super(...e),this.alwaysRefetch=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null;}normalizeCtorArgs(e,r){return "string"==typeof e?{url:e,...r}:e}load(e){const r$1=r(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(w$1).then((()=>this._fetchService(r$1)))),Promise.resolve(this)}readImageFormat(e,r){const t=r.supportedImageFormatTypes;return t&&t.indexOf("PNG32")>-1?"png32":"png24"}writeSublayers(e,r,t,i){if(!this.loaded||!e)return;const o=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let s=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const e=t$1(i.origin);if(3===e){const e=this.createSublayersForOrigin("service").sublayers;s=e$1(o,e,2);}else if(e>3){const e=this.createSublayersForOrigin("portal-item");s=e$1(o,e.sublayers,t$1(e.origin));}}const a=[],p={writeSublayerStructure:s,...i};let n=s;o.forEach((e=>{const r=e.write({},p);a.push(r),n=n||"user"===e.originOf("visible");}));a.some((e=>Object.keys(e).length>1))&&(r.layers=a),n&&(r.visibleLayers=o.filter((e=>e.visible)).map((e=>e.id)));}createExportImageParameters(e,r,t,i){const o=i&&i.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const s=new n({layer:this,scale:r$1({extent:e,width:r})*o}),a=s.toJSON();s.destroy();const p=!i||!i.rotation||this.version<10.3?{}:{rotation:-i.rotation},n$1=e&&e.spatialReference,l=n$1.wkid||JSON.stringify(n$1.toJSON());a.dpi*=o;const m={};if(null!=i&&i.timeExtent){const{start:e,end:r}=i.timeExtent.toJSON();m.time=e&&r&&e===r?""+e:`${null==e?"null":e},${null==r?"null":r}`;}else this.timeInfo&&!this.timeInfo.hasLiveData&&(m.time="null,null");return {bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:l,imageSR:l,size:r+","+t,...a,...p,...m}}async fetchImage(e,t,o,s){var a,p;const n={responseType:"image",signal:null!=(a=null==s?void 0:s.signal)?a:null,query:{...this.parsedUrl.query,...this.createExportImageParameters(e,t,o,s),f:"image",_ts:this.alwaysRefetch?Date.now():null!=(p=null==s?void 0:s.timestamp)?p:null,...this.customParameters,token:this.apiKey}},m=this.parsedUrl.path+"/export";if(null!=n.query.dynamicLayers&&!this.capabilities.exportMap.supportsDynamicLayers)return Promise.reject(new s$1("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:n.query}));return L(m,n).then((e=>e.data)).catch((e=>{if(g(e))throw e;throw new s$1("mapimagelayer:image-fetch-error",`Unable to load image: ${m}`,{error:e})}))}async fetchRecomputedExtents(e={}){const i={...e,query:{returnUpdates:!0,f:"json"}},{data:o}=await L(this.url,i),{extent:s,fullExtent:a,timeExtent:p}=o,n=s||a;return {fullExtent:n&&M.fromJSON(n),timeExtent:p&&y$1.fromJSON({start:p[0],end:p[1]})}}loadAll(){return n$1(this,(e=>{e(this.allSublayers);}))}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:i}=await L(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});i&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl});}};e$2([y$2()],U.prototype,"alwaysRefetch",void 0),e$2([y$2()],U.prototype,"dpi",void 0),e$2([y$2()],U.prototype,"gdbVersion",void 0),e$2([y$2()],U.prototype,"imageFormat",void 0),e$2([e$3("imageFormat",["supportedImageFormatTypes"])],U.prototype,"readImageFormat",null),e$2([y$2({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],U.prototype,"imageMaxHeight",void 0),e$2([y$2({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],U.prototype,"imageMaxWidth",void 0),e$2([y$2()],U.prototype,"imageTransparency",void 0),e$2([y$2({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],U.prototype,"isReference",void 0),e$2([y$2({json:{read:!1,write:!1}})],U.prototype,"labelsVisible",void 0),e$2([y$2({type:["ArcGISMapServiceLayer"]})],U.prototype,"operationalLayerType",void 0),e$2([y$2({json:{read:!1,write:!1}})],U.prototype,"popupEnabled",void 0),e$2([y$2()],U.prototype,"sourceJSON",void 0),e$2([y$2({json:{write:{ignoreOrigin:!0}}})],U.prototype,"sublayers",void 0),e$2([o$1("sublayers",{layers:{type:[Q]},visibleLayers:{type:[N]}})],U.prototype,"writeSublayers",null),e$2([y$2({type:["show","hide","hide-children"]})],U.prototype,"listMode",void 0),e$2([y$2({json:{read:!1},readOnly:!0,value:"map-image"})],U.prototype,"type",void 0),e$2([y$2(p$1)],U.prototype,"url",void 0),U=e$2([n$2("esri.layers.MapImageLayer")],U);var q=U;

export default q;
