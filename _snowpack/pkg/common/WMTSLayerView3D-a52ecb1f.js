import { e } from './JSONSupport-9346590f.js';
import { s } from './promiseUtils-2ff2b194.js';
import { n } from './Message-70b34921.js';
import { x } from './watchUtils-06a91cc9.js';
import { y, n as n$2 } from './subclass-fe5fcf78.js';
import { l as n$1, m as p$2 } from './SceneView-f849f26b.js';
import { d as d$1 } from './LayerView-0b9de845.js';
import { aa as p$1 } from './DefaultUI-99d89841.js';
import './Loadable-d16b3d7d.js';
import './Polyline-ccd8fb47.js';
import './Point-ee7951c3.js';
import './reader-fa0f173d.js';
import './SpatialReference-843b1520.js';
import './jsonMap-e142bd84.js';
import './Graphic-bb07b7e4.js';
import './PopupTemplate-d97f5e88.js';
import './Collection-32506e74.js';
import './fieldUtils-22be41cd.js';
import './enumeration-7d0c165d.js';
import './intl-21ab9759.js';
import './locale-b874fc68.js';
import './assets-73c8998f.js';
import './Identifiable-3ad643f8.js';
import './symbols-9e680ec7.js';
import './SimpleLineSymbol-9959d1ea.js';
import './Color-ae84a22a.js';
import './mathUtils-a477cc74.js';
import './opacityUtils-b92214c2.js';
import './persistableUrlUtils-59858a7e.js';
import './collectionUtils-a13e45d8.js';
import './Portal-ff63481f.js';
import './uid-6beaca4c.js';
import './jsonUtils-f0a19240.js';
import './Map-566c621c.js';
import './Basemap-ad33b4b0.js';
import './loadAll-37e49bde.js';
import './asyncUtils-015dfd6e.js';
import './PortalItem-4692b2a9.js';
import './writeUtils-7e5aaca1.js';
import './compilerUtils-7bbb76dc.js';
import './CollectionFlattener-af542a66.js';
import './HandleOwner-fbf91095.js';
import './Handles-af859b7b.js';
import './basemapUtils-9ae6960d.js';
import './TablesMixin-751fb22e.js';
import './Layer-aafbe66d.js';
import './widget-734a78a2.js';
import './uuid-630c0c55.js';
import './workers-bd1ea274.js';
import './HeightModelInfo-992659fb.js';
import './unitUtils-b17203be.js';
import './projection-c73dd3c4.js';
import './mat4-8eb66d33.js';
import './aaBoundingRect-68336c41.js';
import './DefaultMaterial_COLOR_GAMMA-7c4a23ef.js';
import './vec33-d394808f.js';
import './types-fe598891.js';
import './Version-271d30d5.js';
import './quat-44770d30.js';
import './vec4-8546ad05.js';
import './BufferView-3733efba.js';
import './vec2-513a0296.js';
import './vec2f64-3fb878b3.js';
import './objectResourceUtils-59d1d140.js';
import './styleUtils-8b593a34.js';
import './jsonUtils-4c6963ee.js';
import './mat3-6cb40036.js';
import './aaBoundingBox-c0155c39.js';
import './testSVGPremultipliedAlpha-b5c775e7.js';
import './FramebufferObject-238df962.js';
import './Texture-454f8135.js';
import './InterleavedLayout-b66a6862.js';
import './vec3f32-97630458.js';
import './mat4f32-5ff6470f.js';
import './scaleUtils-10613b70.js';
import './ElevationSampler-c8359e31.js';
import './TileInfo-c32d8db8.js';
import './EdgeProcessingWorker-56aa1068.js';
import './deduplicate-b910185f.js';
import './resources-8aaa4737.js';
import './PromiseQueue-edaf4a34.js';
import './dehydratedFeatures-f49828b8.js';
import './byteSizeEstimations-5b7ab251.js';
import './quantizationUtils-28a0adf6.js';
import './Field-728fb193.js';
import './fieldType-6799091f.js';
import './labelFormatUtils-d93dcf3e.js';
import './labelUtils-7d1afc11.js';
import './OperationalLayer-a01538e1.js';
import './TimeExtent-02acfb1c.js';
import './lengthUtils-824a0190.js';
import './vec2f32-556b449a.js';
import './featureConversionUtils-3ad98dca.js';
import './OptimizedFeature-ccef5b1d.js';
import './OptimizedFeatureSet-be12a9b8.js';
import './earcut-d81146f9.js';
import './visualVariableUtils-86a9e524.js';
import './sizeVariableUtils-6d1564c8.js';
import './MeshComponent-13ddf9e0.js';
import './screenshotUtils-abc7263a.js';
import './utils-4028018e.js';
import './ItemCache-2457b327.js';
import './MemCache-b33cfc4b.js';
import './callExpressionWithFeature-28066cb0.js';
import './projection-7d8c2528.js';
import './symbolLayerUtils3D-8a618a44.js';
import './rasterUtils-8b815ad2.js';
import './geometryServiceUtils-83e1d118.js';
import './ProjectParameters-0d0884dd.js';
import './VectorTile-a034e4bb.js';
import './config-b1f55e66.js';
import './TiledDisplayObject-38ffcb88.js';
import './DisplayObject-8d4c95bb.js';
import './TileKey-86c6b8c5.js';
import './LercDecoder-00822609.js';
import './quatf32-b1c8b796.js';
import './capabilities-39806eb7.js';
import './GraphicsCollection-60679841.js';
import './Queue-a5bdb7c1.js';
import './QueryTask-55cf149f.js';
import './Query-619f76b0.js';
import './Task-41e0c8b8.js';
import './query-de9ba206.js';
import './normalizeUtils-5edbbb73.js';
import './pbfQueryUtils-9ef2116f.js';
import './pbf-9fd5cf83.js';
import './queryZScale-688c1e0e.js';
import './zscale-9df5d655.js';
import './TopFeaturesQuery-b22907ac.js';
import './FeatureSet-d8329cbc.js';
import './FeatureLayer-a1f2dd15.js';
import './UniqueValueRenderer-260b50e9.js';
import './ColorStop-ed1033bb.js';
import './diffUtils-530d997b.js';
import './jsonUtils-cb46c967.js';
import './LRUCache-eed24cc2.js';
import './MultiOriginJSONSupport-859401da.js';
import './APIKeyMixin-7fe44a14.js';
import './ArcGISService-32a080a6.js';
import './arcgisLayerUrl-cb5a8728.js';
import './BlendLayer-b9fc1ffb.js';
import './CustomParametersMixin-79fc7530.js';
import './PortalLayer-722467e6.js';
import './RefreshableLayer-a609d261.js';
import './ScaleRangeLayer-9b1bf210.js';
import './TemporalLayer-f1ac30a1.js';
import './TimeInfo-ba3374ff.js';
import './labelingInfo-c6f27ee6.js';
import './LabelClass-e4354cdb.js';
import './defaults-31c9613a.js';
import './defaultsJSON-0467bd38.js';
import './featureReductionUtils-78800e19.js';
import './FeatureType-97537d09.js';
import './fieldProperties-4363f1e0.js';
import './FieldsIndex-f71b4f3d.js';
import './styleUtils-58b9b121.js';
import './popupUtils-5b007a8e.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
const p=n.getLogger("esri.views.3d.layers.WMTSLayerView3d");let c=class extends(p$1(n$1(p$2(d$1)))){constructor(){super(...arguments),this.type="wmts-3d";}get hasMixedImageFormats(){return !0}initialize(){const e=x(this.view,"basemapTerrain.tilingSchemeDone").then((()=>{const e=()=>new s("layerview:no-compatible-tiling-scheme","None of the tiling schemes supported by the service are compatible with the scene.");if(!this.view.basemapTerrain.tilingSchemeLocked)throw e();const i=this.view.basemapTerrain.tilingScheme,r=this.layer.activeLayer;let s$1;if(r&&r.tileMatrixSet){s$1=r.tileMatrixSet;const e=s$1.tileInfo,t=this._getTileInfoSupportError(e,s$1.fullExtent)||this._getTileInfoCompatibilityError(e,i);if(t)throw t}else {if(s$1=this._getCompatibleTileMatrixSet(),!s$1)throw e();r.tileMatrixSetId=s$1.id;}this._set("tileInfo",s$1.tileInfo),this._set("fullExtent",s$1.fullExtent),this.layer.fullExtent=s$1.fullExtent;}));this.addResolvingPromise(e),this.when((()=>this._initialized()));}refresh(){this.emit("data-changed");}canResume(){if(!super.canResume())return !1;const e=this.layer.activeLayer.tileMatrixSet;return e&&!this._getTileInfoError(e.tileInfo,e.fullExtent)}async doRefresh(){this.suspended||this.emit("data-changed");}_initialized(){this.updatingHandles.add(this,"layer.activeLayer.styleId",(()=>this.refresh())),this.updatingHandles.add(this,"tileMatrixSet",(()=>this.refresh())),this.updatingHandles.add(this.layer,"activeLayer",(e=>{let t=e.tileMatrixSet;if(t){const e=this._getTileInfoError(t.tileInfo,t.fullExtent);e&&(p.error("The selected tile matrix set is not compatible with the view",e),t=null);}else t=this._getCompatibleTileMatrixSet(),t?e.tileMatrixSetId=t.id:p.error("The layer does not provide a tiling scheme that is compatible with the view");this.notifyChange("suspended"),this.canResume()&&this.refresh();}));}_getCompatibleTileMatrixSet(){return this.layer.activeLayer.tileMatrixSets.find((e=>{const t=e.tileInfo;return !this._getTileInfoError(t,e.fullExtent)}))}_getTileInfoError(e,t){return this._getTileInfoSupportError(e,t)||this._getTileInfoCompatibilityError(e,this.view.basemapTerrain.tilingScheme)}};e([y({readOnly:!0})],c.prototype,"hasMixedImageFormats",null),e([y()],c.prototype,"fullExtent",void 0),e([y()],c.prototype,"layer",void 0),e([y()],c.prototype,"suspended",void 0),e([y()],c.prototype,"tileInfo",void 0),c=e([n$2("esri.views.3d.layers.WMTSLayerView3D")],c);var d=c;

export default d;
