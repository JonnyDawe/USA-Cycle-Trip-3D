import { e as e$1, o as o$1 } from './JSONSupport-9346590f.js';
import { U, L, C as C$1, T } from './Loadable-d16b3d7d.js';
import { w as w$1, s as s$2 } from './promiseUtils-2ff2b194.js';
import { a } from './HandleOwner-fbf91095.js';
import { r } from './Message-70b34921.js';
import { l as l$1 } from './MultiOriginJSONSupport-859401da.js';
import { y as y$1, n } from './subclass-fe5fcf78.js';
import { c } from './Point-ee7951c3.js';
import { e as e$2 } from './reader-fa0f173d.js';
import { b } from './Layer-aafbe66d.js';
import { i } from './APIKeyMixin-7fe44a14.js';
import { s as s$1 } from './ArcGISCachedService-a0e4ba98.js';
import { f, y, Q } from './SublayersOwner-55e0adb7.js';
import { p } from './ArcGISService-32a080a6.js';
import { t } from './BlendLayer-b9fc1ffb.js';
import { e } from './CustomParametersMixin-79fc7530.js';
import { l, p as p$2 } from './OperationalLayer-a01538e1.js';
import { w } from './PortalLayer-722467e6.js';
import { o } from './RefreshableLayer-a609d261.js';
import { s } from './ScaleRangeLayer-9b1bf210.js';
import { d, w as w$2, p as p$1 } from './arcgisLayerUrl-cb5a8728.js';
import { k } from './SpatialReference-843b1520.js';
import './Polyline-ccd8fb47.js';
import './jsonMap-e142bd84.js';
import './Handles-af859b7b.js';
import './Collection-32506e74.js';
import './watchUtils-06a91cc9.js';
import './Identifiable-3ad643f8.js';
import './serviceTileInfoProperty-27440fb5.js';
import './TileInfo-c32d8db8.js';
import './unitUtils-b17203be.js';
import './aaBoundingRect-68336c41.js';
import './TilemapCache-fbae412c.js';
import './LRUCache-eed24cc2.js';
import './MemCache-b33cfc4b.js';
import './Version-271d30d5.js';
import './CollectionFlattener-af542a66.js';
import './PopupTemplate-d97f5e88.js';
import './fieldUtils-22be41cd.js';
import './enumeration-7d0c165d.js';
import './intl-21ab9759.js';
import './locale-b874fc68.js';
import './assets-73c8998f.js';
import './UniqueValueRenderer-260b50e9.js';
import './symbols-9e680ec7.js';
import './SimpleLineSymbol-9959d1ea.js';
import './Color-ae84a22a.js';
import './mathUtils-a477cc74.js';
import './opacityUtils-b92214c2.js';
import './persistableUrlUtils-59858a7e.js';
import './collectionUtils-a13e45d8.js';
import './Portal-ff63481f.js';
import './jsonUtils-4c6963ee.js';
import './ColorStop-ed1033bb.js';
import './diffUtils-530d997b.js';
import './sizeVariableUtils-6d1564c8.js';
import './visualVariableUtils-86a9e524.js';
import './Graphic-bb07b7e4.js';
import './uid-6beaca4c.js';
import './jsonUtils-f0a19240.js';
import './compilerUtils-7bbb76dc.js';
import './lengthUtils-824a0190.js';
import './styleUtils-8b593a34.js';
import './jsonUtils-cb46c967.js';
import './FeatureType-97537d09.js';
import './Field-728fb193.js';
import './fieldType-6799091f.js';
import './FieldsIndex-f71b4f3d.js';
import './LabelClass-e4354cdb.js';
import './labelUtils-7d1afc11.js';
import './defaults-31c9613a.js';
import './defaultsJSON-0467bd38.js';
import './Query-619f76b0.js';
import './TimeExtent-02acfb1c.js';
import './popupUtils-5b007a8e.js';
import './sublayerUtils-44da4097.js';
import './asyncUtils-015dfd6e.js';
import './PortalItem-4692b2a9.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
const I=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let M=class extends(t(f(s(o(l(w(s$1(y(p(l$1(a(i(e(b)))))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null;}normalizeCtorArgs(e,r){return "string"==typeof e?{url:e,...r}:e}load(e){const r$1=r(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(w$1).then((()=>this._fetchService(r$1)))),Promise.resolve(this)}get attributionDataUrl(){var e;const r=null==(e=this.parsedUrl)?void 0:e.path.toLowerCase();return r&&this._getDefaultAttribution(this._getMapName(r))}readSpatialReference(e,r){return (e=e||r.tileInfo&&r.tileInfo.spatialReference)&&k.fromJSON(e)}writeSublayers(e,r,t,s){if(!this.loaded||!e)return;const i=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray(),o=[],a={writeSublayerStructure:!1,...s};i.forEach((e=>{const r=e.write({},a);o.push(r);}));o.some((e=>Object.keys(e).length>1))&&(r.layers=o);}get tileServers(){return this._getDefaultTileServers(this.parsedUrl.path)}castTileServers(e){return Array.isArray(e)?e.map((e=>U(e).path)):null}fetchTile(e,t,s,i={}){const{signal:o,timestamp:a}=i,l=this.getTileUrl(e,t,s),n={responseType:"image",signal:o};return null!=a&&(n.query={_ts:i.timestamp}),L(l,n).then((e=>e.data))}getTileUrl(e,r,t){const s=!this.tilemapCache&&this.supportsBlankTile,i=C$1({...this.parsedUrl.query,blankTile:!s&&null,...this.customParameters,token:this.apiKey}),o=this.tileServers;return `${o&&o.length?o[r%o.length]:this.parsedUrl.path}/tile/${e}/${r}/${t}${i?"?"+i:""}`}_fetchService(e){return new Promise(((s,o)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new s$2("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void s({data:this.sourceJSON})}if(!this.parsedUrl)throw new s$2("tile-layer:undefined-url","layer's url is not defined");const a=d(this.parsedUrl.path);if(r(a)&&"ImageServer"===a.serverType)throw new s$2("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");L(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(s,o);})).then((r=>{if(r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!w$2(this.url))return this._fetchServerVersion(this.url,e).then((e=>{this.read({currentVersion:e});})).catch((()=>{}))}))}_fetchServerVersion(e,s){if(!p$1(e))return Promise.reject();const i=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return L(i,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:s}).then((e=>{if(e.data&&e.data.currentVersion)return e.data.currentVersion;throw new s$2("tile-layer:version-not-available")}))}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return r&&r[2]}_getDefaultAttribution(e){if(!e)return;let r;e=e.toLowerCase();for(let t=0,s=I.length;t<s;t++)if(r=I[t],r.toLowerCase().indexOf(e)>-1)return T("//static.arcgis.com/attribution/"+r)}_getDefaultTileServers(e){const r=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),t=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return !this.fetchTile.__isDefault__}};e$1([y$1({readOnly:!0})],M.prototype,"attributionDataUrl",null),e$1([y$1({type:["show","hide","hide-children"]})],M.prototype,"listMode",void 0),e$1([y$1({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],M.prototype,"isReference",void 0),e$1([y$1({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],M.prototype,"operationalLayerType",void 0),e$1([y$1({type:Boolean})],M.prototype,"resampling",void 0),e$1([y$1()],M.prototype,"sourceJSON",void 0),e$1([y$1({type:k})],M.prototype,"spatialReference",void 0),e$1([e$2("spatialReference",["spatialReference","tileInfo"])],M.prototype,"readSpatialReference",null),e$1([y$1({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],M.prototype,"path",void 0),e$1([y$1({readOnly:!0})],M.prototype,"sublayers",void 0),e$1([o$1("sublayers",{layers:{type:[Q]}})],M.prototype,"writeSublayers",null),e$1([y$1({json:{read:!1,write:!1}})],M.prototype,"popupEnabled",void 0),e$1([y$1()],M.prototype,"tileServers",null),e$1([c("tileServers")],M.prototype,"castTileServers",null),e$1([y$1({readOnly:!0,json:{read:!1}})],M.prototype,"type",void 0),e$1([y$1(p$2)],M.prototype,"url",void 0),M=e$1([n("esri.layers.TileLayer")],M),M.prototype.fetchTile.__isDefault__=!0;var C=M;

export default C;
